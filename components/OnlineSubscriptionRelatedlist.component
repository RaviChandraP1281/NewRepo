<apex:component controller="OnlineSubscriptionsListctrl">
<apex:attribute name="accountid" required="true" type="String" description="Account Id"/>
<apex:attribute name="accountName" required="false" type="String" description="Account Name for Console Tab"/>
<apex:attribute name="relCompanyId" required="false" type="String" description="Related Account Company Id"/>
<apex:attribute name="isPartnerAccount" required="false" type="Boolean" description="Only partner customer types should display the show asset hierarchy checkbox" default="false" />
<html>
<head>
    <meta charset="UTF-8" />
    <title>Online Subscriptions</title>
    
    <apex:stylesheet value="{!URLFOR($Resource.treeviewGrid2983, 'css/easyui.css')}"/>
    
    <apex:includeScript value="{!URLFOR($Resource.treeviewGrid2983, 'jquery.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.treeviewGrid2983, 'jquery.easyui.min.js')}" />
    
    <script src="/soap/ajax/29.0/connection.js"></script>    
    <script src="/support/console/30.0/integration.js" type="text/javascript"></script>
    
    <style type="text/css" >
        /*html *
        {
           font-family: Arial, Helvettica, San-Serif !important;
           font-size: 12px !important;
        }*/
        #filterAssetId::-webkit-input-placeholder { /* WebKit browsers */
            font-style: italic;
        }
        #filterAssetId:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
            font-style: italic;
        }
        #filterAssetId::-moz-placeholder { /* Mozilla Firefox 19+ */
            font-style: italic;
        }
        #filterAssetId:-ms-input-placeholder { /* Internet Explorer 10+ */
            font-style: italic;
        }
        <!-- DMD temporary fix for datagrid render problem -->
        div.datagrid-wrap {
            min-height: 308px !important;
        }
        .showParentsCheckbox {
            display: block;
        }
        .hideParentsCheckbox {
            display: none !important;
        }
        .popup-class {        
            display: none; 
            position: absolute; 
            background-color: white; 
            border: 2px solid grey; 
            border-radius: 10px;
            border-top: 5px;
            padding-bottom: 10px;
        }
        .popup-top-border {
            border-top: 3px solid;
            border-left: 0px;
            border-right: 0px;
            border-bottom: 0px;
            border-color: #236FBD;
            border-radius: 10px;
            width: 98%;
            margin-left: 4px;
        }
        .arrow-left {
            width: 0; 
            height: 0;
            display: none; 
            border-top: 15px solid transparent;
            border-bottom: 15px solid transparent; 
            border-right:20px solid grey; 
            position: absolute;
        }
        .arrow-left-inner {
            width: 0; 
            height: 0; 
            display: none; 
            border-top: 15px solid transparent;
            border-bottom: 15px solid transparent;             
            border-right:20px solid white; 
            position: absolute;
        }
        
        .arrow-up {
            width: 0; 
            height: 0;
            display: none; 
            border-left: 15px solid transparent;
            border-right: 15px solid transparent; 
            border-bottom:20px solid grey; 
            position: absolute;
        }
        .arrow-up-inner {
            width: 0; 
            height: 0; 
            display: none; 
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;             
            border-bottom:20px solid white; 
            position: absolute;
        }
        
        .arrow-down {
            width: 0; 
            height: 0;
            display: none; 
            border-left: 15px solid transparent;
            border-right: 15px solid transparent; 
            border-top:20px solid grey; 
            position: absolute;
        }
        .arrow-down-inner {
            width: 0; 
            height: 0; 
            display: none; 
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;             
            border-top:20px solid white; 
            position: absolute;
        }
        /*.datagrid-sort-icon
        {
            width: 11px;
            height: 11px;
            background: transparent url(/img/alohaSkin/sortArrows_sprite.png) !important;
        }
        .datagrid-sort-desc { background-position: 0px -12px; !important}
        .datagrid-sort-asc { background-position: 0px 0px; !important}*/
        .datagrid-cell {  
            word-wrap: break-word;          
            white-space: normal;
            padding: 5px;
        }
        a {
            text-decoration: none !important;
        }
        a:hover {
            text-decoration: underline !important;
        }
        div.popupLabel {
            padding-left: 20px;
            display: inline-block;
            width: 40%;
        }
        div.popupLabelBold {
            padding-left: 20px;
            display: inline-block;
            font-weight: bold;
            vertical-align: top;
            width: 40%;
        }
        div.popupValueHalfRight {
            padding-left: 5px;
            display: inline-block;
            text-align: right;
            width: 40%;
        }
        
        div.popupValueHalf {
            padding-left: 5px;
            display: inline-block;
            width: 40%;
        }
        
        div.popupValueFullRight {
            padding-left: 5px;
            display: inline-block;
            text-align: right;
            width: 80%;
        }
        
        div.popupValueFull {
            padding-left: 20px;
            display: inline-block;
            width: 80%;
        }
        
        .popupHeader {
            padding-left: 20px;
            padding-bottom: 5px;
            font-weight: bold;
            display: block;
        }
        .popupHeader2 {
            padding-left: 10px;
            padding-top: 10px;
            font-weight: bold;
            font-size: larger;
            display: block;
        }
        .align-right { text-align: right !important; }
        .highlight { font-weight: bold; }
        .panel-tool, .panel-title, .pagination-info, .tree-icon { display: none; }
        div.panel-header{ display: none; }
        .datagrid-header-row input {display: none;}
        
        .parentRow { background-color: white; } //RGB(197,225,234); }
        .childRow:hover, .parentRow:hover, .normalRow:hover { background-color: RGB(232, 246, 254); }
        .childRow { background-color: RGB(239, 240, 245); }
        .normalRow { background-color: white; }
        .tree-collapsed {background: url({!URLFOR($Resource.AssetSearchImages)}) no-repeat -79px 0px; }
        .tree-expanded {background: url({!URLFOR($Resource.AssetSearchImages)}) no-repeat -101px 0px; }
        .panel-header, .panel-body { border-color: rgb(224, 227, 229) !important; }
        .cpc-folder {
            background: url({!URLFOR($Resource.AssetSearchImages)}) no-repeat 0px -35px; 
            display: inline-block;
            height: 16px;
            width: 20px;
            margin-left: 5px;
            margin-top: -2px;
            margin-bottom: -2px;
        }
        .loading-window2 {
            background-color: rgba(0, 0, 0, 0.1);
            position: absolute;
            text-align: center;
            vertical-align: middle;
            display: none;
            border: 0px solid grey; 
            border-radius: 10px;
            padding-bottom: 10px;
            z-index: 999;
        }
        .loading-icon {
            height: 100%;
            width: 100%;
            background:url('{!URLFOR($Resource.treeviewGrid2983, 'css/images/loading.gif')}') no-repeat center center;
        }
        .input-wrapper2 {
            padding: 3px 10px 3px 10px;
            text-align: left; 
            display: inline-block; 
            background-color: RGB(206, 238, 247); 
            width: 99%; border: solid; 
            border-width: 1px; 
            border-color: #E0E0E0
        }
        .datagrid-row-selected{ background-color: RGB(221, 240, 220); }
        .datagrid-row-over{
            background: #E3F3FF;
        }
        .tree-indent, .tree-title {display: none;}
        tr.datagrid-row td {vertical-align: middle;}
        div.datagrid-pager td {vertical-align: middle;}
        
        .asset-link { color: blue; }
        .cancel-popup, .no-migrate-popup{ 
            width: 400px;
            height: 250px;
            background-color: white;
            border: solid black;
            border-width: 1px;
            border-radius: 10px;
            z-index: 999;
            position: absolute;
            margin: auto;
            display: none;
        }
        .cancel-green-wrapper {
            display: block;
            width: 80%;
            height: 80%; 
            position: relative;
            text-align: center;
            margin-left:auto;
            margin-right:auto;
        }
            
        .no-migrate-red-wrapper {
            display: block;
            width: 80%;
            height: 40%; 
            position: relative;
            text-align: center;
            margin-left:auto;
            margin-right:auto;
        }
        .cancel-green-text {
            color: green;
            font-weight: bold;
            font-size: 18px !important;
            display: block;
            clear: right;
            width: 100%;
            text-align: center;
            vertical-align: text-top;
            position: absolute;
            top: 0px;
            padding-top: 55px;
        }
        .cancel-end-wrapper {
            width: 80%;
            height: 40%;
            position: relative;
            margin-left:auto;
            margin-right:auto;
        }
        .cancel-end-text {
            display: block;
            text-align: center;
            vertical-align: middle;
            font-weight: bold;
        }
        .cancel-button-wrapper {
            width: 100%;            
            height: 20%;
            position: relative;
            vertical-align: middle;
            text-align: center;
        }
        .cancel-button-close { 
            width: 120px;
        }

        .no-migrate-red-text {
            color: red;
            font-weight: bold;
            font-size: 18px !important;
            display: block;
            clear: right;
            width: 100%;
            text-align: center;
            vertical-align: text-bottom;
            position: absolute;
            bottom: 0px;
        }
        
       .no-migrate-end-text {
           display: block;
           text-align: center;
           vertical-align: middle;
           font-style: italic;
       }
    </style>
</head>

<body>

<apex:pageMessages id="errorsMsg" />
<!-- Added By Sunil Sharma: Loading & Page Blurr section  -->
<div id="loadingSection" style="display:None">      
     <div id="salesforceSource_blurybackground" style="position:absolute; left:1px; top:1px; width:100%; height:100%; text-align:center; vertical-align: middle; background-color: #dcdcdc; opacity:0.6;filter:alpha(opacity=60)"></div>
       <div id="ManageMembersViewport_loading" class="waitingSearchDiv" style="width: 100%; height: 80%; display: ''; ">
           <div style="width: 144px;vertical-align: middle;" class="waitingHolder">
               <table align="center" valign="top" style="width: 100%; height: 30%">
               <tr align="center" valign="top" style="width: 100%; height: 30%">
                   <td valign="top"><img class="waitingImage" src="/img/loading.gif"/><span class="waitingDescription">Processing......</span></td>
               </tr> 
               </table> 
           </div>  
       </div>    
       <div id="ManageMembersViewport_loading" class="waitingSearchDiv" style="width: 100%; height: 100%; display: ''; "/>
       <script>document.getElementById('ManageMembersViewport_loading').height = window.innerHeight * (3/4);</script>
</div>
<apex:form id="OnlineSubscriptionsForm">
    <!-- Venkat Kolimarla : adding "Upgrade" BUTTON -->
    <div style="text-align: center">
        <input type="button" class="btn" id="upgrade_button"  onclick="gotoUpgrade(this.value);" value="Upgrade"/>
        <apex:outputpanel id="subscribeButtonVisiblity">
            <apex:commandButton id="subscribe_button" onclick="gotoSubscribe(this.value,'')" value="Subscribe" rendered="{!isSubscribeButtonVisible}" reRender="dummy"/>
            <apex:commandButton id="add_payroll_button" onclick="gotoPayroll(this.value)" value="Add Payroll" rendered="{!isPayrollButtonVisible}" reRender="dummy"/>
        </apex:outputpanel>
        
<!--         <input type="button" class="btn" id="subscribe_button"  onclick="gotoSubscribe(this.value)" value="Subscribe"/> -->
    </div>
    <!-- Venkat's Upgrade button changes - End  -->
    <!-- chakri : filterAssetId entered filter text. Fields : Wrapper -->
    <!-- DEBUG: isPartnerAccount = {!isPartnerAccount} -->
    <br/>
    <div class="input-wrapper2" id="input-wrapper2">
        <apex:outputLabel value="Search:" style="font-weight: bold;"/>&nbsp;&nbsp;<input autocomplete="off" id="filterAssetIdForSearch" maxlength="150" name="filterAssetIdForSearch" size="150" title="Filter asset" type="text" onkeyup="filterKeyUp2();" placeholder="Product Name, Status, Date..."/>
    </div>
    <div class="input-wrapper2 {!IF(isPartnerAccount,'showParentsCheckbox','hideParentsCheckbox')}" id="showParentsCheckbox" >
        <apex:inputCheckbox value="{!isShowingParentRelationships}" label="Show Parent Relationships"
             onchange="showParentsSelected = this.checked; reloadOnlineSubscriptionsTable( this.checked );" rendered="{!isPartnerAccount}" >
            <apex:actionSupport event="onchange" action="{!updateShowParentRelationships}" rerender="form" />
        </apex:inputCheckbox>
        <apex:outputLabel value="Show Asset Hierarchy" style="font-weight: bold;" rendered="{!isPartnerAccount}" />
    </div>
    <div style="float: left; clear both;width: 100%">    
        <!-- Chakri -->
        <!-- Added onSelect:updateButtons method (by Sunil Sharma)-->
        <table id="assetTreeGrid1" class="easyui-treegrid" title="Asset Hierarchy" width="100%" style="height:100px" sortname="Signup_Date__c" sortorder="desc"
                        data-options="
                                rownumbers: false,
                                animate: true,
                                collapsible: false,
                                fitColumns: true,
                                idField: 'id',
                                treeField: 'isCPC',
                                loadFilter: pagerFilter2,
                                pagination: {!isPaginated},
                                pageSize: 5,
                                pageList: [5,10,20,50,100],
                                singleSelect: true,
                                checkOnSelect: true,
                                rowStyler: styleBackground, 
                                onExpand: resizeView2,
                                onCollapse: resizeView2,
                                onClickRow: updateButtons2
                        ">
                <thead>
                        <tr>
                                <th field="ck" checkbox="true"></th>
                                <th data-options="field:'isCPC',width:8, resizable:false" sortable="false" >
                                </th> 
                                                              
                                <th data-options="field:'Online_Current_Product',formatter:formatAssetLink1,width:55,resizable:true" sortable="true" >
                                    <a href="" onclick="sortData2('Online_Current_Product__c');return false;"> <b>Product Name</b></a>
                                </th>
                                
                                 <th data-options="field:'StatusGlobal',width:50,resizable:true" sortable="true" >
                                    <a href="" onclick="sortData2('StatusGlobal__c');return false;"><b>Status</b></a>
                                </th>
                                
                                <th data-options="field:'Plan_Name',width:20,resizable:true" sortable="true" >
                                    <a href="" onclick="sortData2('Plan_Name__c');return false;"><b>Plan</b></a>
                                </th>
                                                                
                                <th id="signup-date-col" data-options="field:'Signup_Date',width:30,resizable:true" sortable="true" >
                                    <a href="" onclick="sortData2('Signup_Date__c');return false;"><b>Sign-Up</b></a>
                                </th>
                                                                
                                <th data-options="field:'Payment_Setup_Date',width:30,resizable:true" sortable="true" >
                                    <a href="" onclick="sortData2('Payment_Setup_Date__c');return false;"><b>Subscribe</b></a>
                                </th>
                                <th data-options="field:'Suspend_Date',formatter:formatPaymentLink2,width:30,resizable:true" sortable="true" >
                                    <a href="" onclick="sortData2('Suspend_Date__c');return false;"><b>Suspend</b></a>
                                </th>
                                                                                               
                                <th data-options="field:'Next_Charge_Date',width:35,resizable:true" sortable="true" >
                                    <a href="" onclick="sortData2('Next_Charge_Date__c');return false;"><b>Next Bill</b></a>
                                </th>
                                
                                <th data-options="field:'Projected_First_Charge_Date',width:35,resizable:false" sortable="true" >
                                    <a href="" onclick="sortData2('Projected_First_Charge_Date__c');return false;"><b>Projected First Charge Date</b></a>
                                </th>
                                
                                <th data-options="field:'Online_Expiry_Date',width:35,resizable:false" sortable="true" >
                                    <a href="" onclick="sortData2('Online_Expiry_Date__c');return false;"><b>Expiry</b></a>
                                </th>
                                <th data-options="field:'RelatedAccountId',width:35,resizable:true" sortable="false" >
                                    <a href="" onclick="sortData2('Related_Company_Id__c');return false;"><b>Related Account</b></a>
                                </th>
                                <th data-options="field:'RelatedAccountName',formatter:formatAssetLink10,width:35,resizable:true" sortable="false" >
                                    <a href="" ><b>Related Account Name</b></a>
                                </th>
                                <th data-options="field:'Family',width:35,resizable:true" sortable="false" >
                                    <a href="" onclick="sortData2('Online_Current_Product_Family__c');return false;"><b>Product Family</b></a>
                                </th>
                        </tr>
                </thead>
        </table>
    </div>
    <apex:actionFunction name="reRenderSubscribeButton" reRender="subscribeButtonVisiblity"/>
    <script type="text/javascript">
        OnlineAssetsJquery$ = jQuery.noConflict();
        //Venkat's Changes for Upgrade BEGIN
        
        OnlineAssetsJquery$.urlParam = function(name){
            var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            if (results == null){
                return null;
            } else {
                return results[1] || 0;
            }
        }
        OnlineAssetsJquery$( document ).ready( function() {
          // window.onload = function(){
          //alert('Window Loaded!');                                           
          var accID = OnlineAssetsJquery$.urlParam('id');
          sforce.connection.sessionId='{!GETSESSIONID()}';
          
          console.log('AccountID from URL @@@@@@ ',accID);
          
          var result = sforce.connection.query("SELECT Id,Country__c FROM Account WHERE id="+"'"+accID+"'");
          var records = result.getArray("records");
          //console.log('records @@@@@@@@@ ',records);
          console.log('Upgradable Asset count:'+{!Assets});
          console.log('1st record @@@@@@@@ records[0] ',records[0]);  
          if(records[0].Country__c !== 'USA'|| {!Assets}<1){
              OnlineAssetsJquery$("#upgrade_button").css('display','none');
              console.log('Account COUNTRY is @@@@@@@ ',records[0].Country__c);
          } else {
              console.log('Account COUNTRY is @@@@@@@ ',records[0].Country__c); 
          }
        });
                  
        var onlineSubsModalDialog;
        /*********  Venkat's Upgrade Changes ENDDDDDDDDDDD        *******/

        // added these variables as changes for Cloudspokes:3040
        // var lastSortOrder = 'DESC';
        var lastSortOrder = 'ASC';
        // DMD 4/26/2016: default sort by signup date
        var lastSortField = 'Siebel_Last_Updated_Date__c';
        // var lastSortField = 'Signup_Date__c';
        // DMD 4/27/2016: controls whether to display parents or child assets only
        var showParentsByDefault = {!isShowingParentRelationships};
        var showParentsSelected = showParentsByDefault;
        
        // Variable holding current account record id.
        // var accountId = '{!selectedAccountId}';
        // Get Account Id & Account Name from the apex:attribute. Added By Sunil Sharma
        var accountId = '{!accountid}';
        var accountName = '{!JSEncode(accountName)}';
           
        var relCompanyId = '{!selectedCompanyId}'; //aditya added
        var assetWinTimeoutIn = new Object();
        var assetWinTimeoutOut = new Object();
        var paymentWinTimeoutIn = new Object();
        var paymentWinTimeoutOut = new Object();
        var filterTimeout;
        var keyupDelay = 500;
        var hoverDelay = 750;
        var headerOffset = -111;
        var loadingOffset = -10;
        if (sforce != undefined && sforce.console != undefined && sforce.console.isInConsole()) {
            headerOffset = 0;
            loadingOffset = 0;
            sforce.console.setTabTitle('{!JSEncode(accountName)}')
        }
           
        /* Added by Venkat Kollimarla 23-JUNE-2016 */
        
        function updateButtons2(row){ 
            console.debug( "online subs comp: updateButtons2" );
            if (!OnlineAssetsJquery$.isEmptyObject(row)){
                // below is a hack to make radiobuttons instead of checkboxes work on the layout
                OnlineAssetsJquery$('#assetTreeGrid1 div.datagrid-row').each(function() {
                    console.debug( "online subs comp: unchecking input radio for name " + OnlineAssetsJquery$(this).find('input:radio').prop("name"));
                    OnlineAssetsJquery$(this).find('input:radio').prop('checked', false);
                    // OnlineAssetsJquery$('#assetTreeGrid1').find('input:radio').prop('checked', false);
                });
                var thisRadioButton = OnlineAssetsJquery$("tr[id*='" + row.id + "']").find('input:radio');
                console.debug("online subs comp: replacing checkbox with radio button for clicked row id : " + row.id);
                thisRadioButton.prop('checked', true);
                // OnlineAssetsJquery$(thisradiobutton).replaceWith('<input type="radio" name="' + OnlineAssetsJquery$(this).attr('name') + '" value="' + OnlineAssetsJquery$(this).attr('value') + '" checked="checked" />');
            } else {
                console.debug("online subs comp: ignoring click on empty row.");
            }
        }
  
    function closeDialog(){
        //OnlineAssetsJquery$modalDialog.dialog("close");
        onlineSubsModalDialog.dialog("destroy").remove();
    }
    
    function gotoPayroll(value){
    	var selectedRow = OnlineAssetsJquery$("#assetTreeGrid1").datagrid('getSelected');
		var selectedAssetID = '';
		
		if (!OnlineAssetsJquery$.isEmptyObject(selectedRow)){
			selectedAssetID = selectedRow.id;
			if (selectedRow.hasOwnProperty("id") && selectedRow.id.length >= 15 && selectedRow.Family === 'QuickBooks Online'){
				var payrollUrl = '/apex/OnlineSalesIncludeAddOn?asset=' + selectedAssetID + '&acct=' + accountId + '&from=acct';
				if (sforce != undefined && sforce.console != undefined && sforce.console.isInConsole()){ //Checks that it is in console
			        var openSubtab = function(result) {
			            sforce.console.openSubtab(result.id, payrollUrl + '&inConsole=true', true, 'Add New Subscription', null);
			        };
			        sforce.console.getEnclosingPrimaryTabId(openSubtab);
			    
			    } else {
			        parent.window.location = payrollUrl;
			    }
			} else {
				alert('Only "QuickBooks Online" Family Assets are allowed to add payroll');
			}
		} else {
			alert('Please select an asset to Add Payroll');
		}
    }
    
    function gotoSubscribe(Value,type){
        // Get the current row values.
        var selectedRow = OnlineAssetsJquery$("#assetTreeGrid1").datagrid('getSelected');
        var selectedAssetID = '';
        
        if (!OnlineAssetsJquery$.isEmptyObject(selectedRow)){
            selectedAssetID = selectedRow.id;
            if (selectedRow.hasOwnProperty("id") && selectedRow.id.length >= 15 && selectedRow.Family === 'QuickBooks Online'){
            var iframe_url;
                OnlineSubscriptionsListctrl.isSubscribeAvailable(selectedAssetID,type,function(result, event){
                    console.log(event);
                    if (event.status === true){
                        console.log(result);
                        if(result[0] == 'Not available for subscription'){
                            alert("Subscription is not available for this asset");
                        }else{
                            iframe_url = result;
                        }
                        if(typeof iframe_url != "undefined"){
                        	if (sforce != undefined && sforce.console != undefined && sforce.console.isInConsole()){ //#Sri - BTBS-6007. Updated Checks  
						        var openSubtab = function(result) {
						            sforce.console.openSubtab(result.id, iframe_url + '&inConsole=true', true, 'Account', null, openSuccess, 'Account');
						        };
						        sforce.console.getEnclosingPrimaryTabId(openSubtab);
						    
						    } else {
						        parent.window.location = iframe_url;
						    }
						    
							/*if(sforce.console.isInConsole()){   
					             sforce.console.openPrimaryTab(null,iframe_url,true,'Account', openSuccess, 'Account');
					        } else {
					             parent.window.location = iframe_url;
					        }*/
                        }
                    }else if(!event.status){
                        alert('Bad data exception on asset. Please contact to system administrator.');
                    }
                },{escape:false});
          } else {
              alert('Only "QuickBooks Online" Family Assets are allowed to subscribe');
          }
      } else {    
          alert('Please select an asset to subscribe');   
          console.log('No row selected : object empty()');
      }
    }
    
    function gotoUpgrade(Value){
        console.log('Online subs Upgrade Button Clicked! Value Received === ',Value);
        
        // Get the current row values.
        var selectedRow = OnlineAssetsJquery$("#assetTreeGrid1").datagrid('getSelected');
        var selectedAssetID = '';
        console.log('Selected Row === ',selectedRow);
        
        if (!OnlineAssetsJquery$.isEmptyObject(selectedRow)){
            if (selectedRow.hasOwnProperty("id") && selectedRow.id.length >= 15 && selectedRow.Family === 'QuickBooks Online'){
                selectedAssetID = selectedRow.id;
                           
            console.log('selectedAssetID = ',selectedAssetID);
            //If Offer Row - Selected, Navigate USER to QBOUpgrade Page
                   /**
     * ──────────────────────────────────────────────────────────────────────────────────────────────────────────┐
     * Updated if condition to create separate URL for Care Console/ Online Console apps
     * ──────────────────────────────────────────────────────────────────────────────────────────────────
     * Start BTBS-5474
     * Developer: Prerna Purwar 20 Jan 2017
     * 
     * ──────────────────────────────────────────────────────────────────────────────────────────────────────────┘
    **/
            
            if (sforce != undefined && sforce.console != undefined && sforce.console.isInConsole())
            {
                var iframe_url = '{!URLFOR("/apex/QBOUpgrade")}'+'isdtp=vw&id='+selectedAssetID; //#Sri - BTBS-6007. Added isdtp=vw
            }
            else{
                  var iframe_url = '{!URLFOR("/apex/QBOUpgrade?id=")}'+selectedAssetID;
                }
                
                //End BTBS-5474
			//If Offer Row - Selected, Navigate USER to QBOUpgrade Page
            //var iframe_url = '{!URLFOR("/apex/QBOUpgrade?id=")}'+selectedAssetID;
            var child_domain = iframe_url.substring(0, iframe_url.indexOf('/', 9));
            var parent_domain = window.location.protocol + '//' + window.location.host;
            onlineSubsModalDialog = OnlineAssetsJquery$('<div id="opppopup" onkeyup="closeDialog()"></div>')
                .html('<iframe id="iframeContentId" src="' + iframe_url + '" frameborder="0" height="370px" width="625px" marginheight="0" marginwidth="0" scrolling="no" onkeyup="closeDialog()"/>') 
                .dialog({ 
                        autoOpen: false, 
                        title: 'Upgrade Options', 
                        resizable: true, 
                        width: 625, 
                        height: 420, 
                        autoResize: true, 
                        modal: true, 
                        draggable: true
                        
                    });
            OnlineAssetsJquery$("#opppopup html").css('margin-top', '-20px');  
            //OnlineAssetsJquery$("#opppopup").css('overflow','auto');
            OnlineAssetsJquery$(document).keyup(function(e){
                 if (e.keyCode == 27) { 
                     console.log('hola - 27 esc'); 
                     //OnlineAssetsJquery$modalDialog.dialog("close"); 
                     onlineSubsModalDialog.dialog("destroy").remove();
                 }  
            });
            OnlineAssetsJquery$("#opppopup div:first").before("<div style='cursor:pointer;color:#393a3d;padding:5px;float:right;font-size:16px;font-weight:bold;' onClick=closeDialog()>X</div>");
        } else {
            alert('Only "QuickBooks Online" Family Assets are allowed to upgrade');
        }
      } else {    
          alert('Please select an asset to upgrade');   
          console.log('No row selected : object empty()');
      }
        
    }
    /** Venkat Changes END Here **/

           /* Added by Sunil Sharma
                assetTreeGrid1 table method. 
                When we click anywhere in the row, 
                1) radio button for that row gets checked, 
                2) Upgrade button gets enabled.
                3) If there is a suspend Date or Cancel Date in the selected row, Reactivate button becomes enabled.
           */
           function updateOSButtons(row) {
               console.debug( "updateOSButtons called..." );
                if (row) {   
                    // Upgrade Button gets enabled          
                    assetjQuery$("#upgrade_button").prop('disabled',false).removeClass('btnDisabled').addClass('btn');
                    
                    // Reactivate Button gets enabled, when there is a cancel date or suspend date.    
                    if (row.Suspend_Date || row.Online_Cancel_Date) {
                        assetjQuery$("#reactivate_button").prop('disabled',false).removeClass('btnDisabled').addClass('btn');                       
                    }
                    else {
                        assetjQuery$("#reactivate_button").prop('disabled',true).removeClass('btn').addClass('btnDisabled');
                    }
                    
                    // Radio button gets checked, when we click anywhere in the row. only one row can be selected at a time.
                    assetjQuery$('.datagrid-row').each(function() {
                        console.debug( "online subscription comp updateOSButtons found radio button" );
                        assetjQuery$(this).find('input:radio').prop('checked', false);
                    });
                    var thisradiobutton = assetjQuery$("tr[id*='" + row.id + "']").find('input:radio');
                    assetjQuery$(thisradiobutton).replaceWith('<input type="radio" name="' + assetjQuery$(this).attr('name') + '" value="' + assetjQuery$(this).attr('value') + '" checked="checked" />');
                }
                console.debug( "updateOSButtons done" );
            }
    
           
           /*   Added by Sunil Sharma
                On Upgrade & Reactivate button click, remote method to Controller class is getting called with parameters,
                i)   Button value, upgrade or Reactivate. It will get mapped with Opportunity type.
                ii)  Asset id
                iii) Current Product name.
           */
           function onSubscriptionButtonClick(value) {
                // On click Loading & Blurring screen               
                document.getElementById('loadingSection').style.display = 'block';
                assetjQuery$('#assetTreeGrid1').datagrid('loading');
                
                // Get the current row values.
                var row = assetjQuery$("#assetTreeGrid1").datagrid('getSelected');
                
                // Call the remote action to create new Opportunity
                Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.OnlineSubscriptionsListctrl.onlineSubscriptionAction}',
                          value, row.id, accountId, accountName, row.Online_Current_Product, function(result, event) {
                            if (event.status) {
                               window.location = result; 
                            } else if (event.type === 'exception') {    
                                document.getElementById('loadingSection').style.display = 'none';
                                alert(event.message);
                            } 
                        }, {escape:true});          
                    
           }      
    
            // Code for onkeyup delay
            
            function filterKeyUp2() {
                clearTimeout(filterTimeout);
                filterTimeout = setTimeout(function() {filterAssetData2();}, keyupDelay);
            }
            
            
            // Code added for Cloudspokes:3040 Method for performing sort data    
            function sortData2(currentSortField) {
                var sortOrder;
                if (currentSortField != lastSortField) {
                    sortOrder = 'ASC';
                } else {
                    if(lastSortOrder == 'ASC') {
                        sortOrder = 'DESC';                    
                    } else {
                        sortOrder = 'ASC';
                    }
                }
                loadSortedAssetData2(sortOrder, currentSortField);
            }
            
            // Code added for Cloudspokes:3040
            // Method for making js remote call for sorting data based on sort parameter and sort order 
            function loadSortedAssetData2(sortOrder, sortField) {
                console.debug( "loadSortedAssetData2( " + sortOrder + ", " + sortField + " )" );
                var filterText = OnlineAssetsJquery$("input[id*='filterAssetIdForSearch']").val();
                OnlineAssetsJquery$('#assetTreeGrid1').datagrid('loading');
                // making js remoting call.
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.OnlineSubscriptionsListctrl.filterAssetHierarchyData}', accountId, sortOrder, sortField, filterText, retrieveStatuses2(), relCompanyId, showParentsSelected, function(result, event){
                        if (event.status) {
                            OnlineAssetsJquery$('#assetTreeGrid1').treegrid({  
                                data: result
                            });

                            gotoPageOne2();
                            if (sortOrder == 'DESC') OnlineAssetsJquery$('.datagrid-sort-icon').attr('title','Sort Descending');
                            else if (sortOrder == 'ASC') OnlineAssetsJquery$('.datagrid-sort-icon').attr('title','Sort Ascending');  
                            updateSortInfo2(sortOrder, sortField);
                            setLinksAndHighlights2(filterText);
                            OnlineAssetsJquery$('#assetTreeGrid1').datagrid('loaded');
                        } else if (event.type === 'exception') {    
                            //alert(event.message);
                        } else {
                           alert(event.message);
                        }
                    }, {escape:true});
            }
        
            // Code added for Cloudspokes:3040  Updating the last sort details.
            function updateSortInfo2(sortOrder, sortField) {
                lastSortOrder = sortOrder;
                lastSortField = sortField;
            }
            
            /*  
                Code added for Cloudspokes:3040
                Method to perform filter for asset using the entered filter text.
                This method is called on keyup even to get the last search character enter by user.
            */
        
        /*  
            Code added for Cloudspokes:3040
            Method to perform filter for asset using the entered filter text.
            This method is called on keyup even to get the last search character enter by user.
        */
            //chakri
            function filterAssetData2() {
                var filterText = OnlineAssetsJquery$("input[id*='filterAssetIdForSearch']").val();
                
               //filterText = $('#filterAssetId').val();
                OnlineAssetsJquery$('#assetTreeGrid1').datagrid('loading');
                console.log('##'+ filterText);
                //filterText = '19';
                // making js remoting call
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.OnlineSubscriptionsListctrl.filterAssetHierarchyData}', accountId, lastSortOrder, lastSortField, filterText, retrieveStatuses2(), relCompanyId, showParentsSelected, function(result, event){
                    if (event.status) {
                        OnlineAssetsJquery$('#assetTreeGrid1').treegrid({  
                            data: result
                        });
                        gotoPageOne2();
                        setLinksAndHighlights2(filterText); 
                        if (lastSortOrder == 'DESC') OnlineAssetsJquery$('.datagrid-sort-icon').attr('title','Sort Descending');
                        else if (lastSortOrder == 'ASC') OnlineAssetsJquery$('.datagrid-sort-icon').attr('title','Sort Ascending');
                        reRenderSubscribeButton();
                        OnlineAssetsJquery$('#assetTreeGrid1').datagrid('loaded');
                    } else if (event.type === 'exception') {    
                        //alert(event.message);
                    } else {
                       alert(event.message);
                    }
                }, {escape:true});
            }
            
                    
            /*
                Method load the tree data using the JS remoting method call. 
            */
            //chakri
            function loadassetTreeGridData2() {
                var filterText = OnlineAssetsJquery$("input[id*='filterAssetIdForSearch']").val();
                // making js remoting call
                 Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.OnlineSubscriptionsListctrl.filterAssetHierarchyData}', accountId, lastSortOrder, lastSortField, filterText, retrieveStatuses2(), relCompanyId, showParentsSelected, function(result, event){
                    // '{!$RemoteAction.OnlineSubscriptionsListctrl.sortAssetHierarchyData}', accountId, lastSortOrder, lastSortField, retrieveStatuses2(),relCompanyId , function(result, event){
                    // alert('Response go it');
                    // console.log('##'+JSON.stringify(result));
                    if (event.status) {
                       // Chakri
                        OnlineAssetsJquery$('#assetTreeGrid1').treegrid({  
                            data: result
                        });
                        setLinksAndHighlights2(filterText);
                        gotoPageOne2();
                    } else if (event.type === 'exception') {    
                        //alert(event.message);
                    } else {
                       alert(event.message);
                    }
                }, {escape:true});
            }
            
            // Making initial data load call for tree view creating.
            // DMD moved to bottom of script as reloadOnlineSubscriptionsTable();
            // loadassetTreeGridData2();
            
                    
            // Method for formate checkbox for the boolean value returned as remote action call.
            function formatCheckBox2(value){
                if (value){
                    var s = '<input type="checkbox" checked="true" disabled="true" />';
                    return s;
                } else {
                    return '<input type="checkbox" disabled="true" />';
                }
            }
            
            //chakri - 
            function formatAssetLink1(value, row) {
                if (value) {
                                        
                    //return '<b><a href="#" data-assetId="' + row.id + '" class="online_link" >' + '<div style="color: red">' + value + '</div>' + '</a></b>';
                     return '<b><div  class="online_link" data-assetId="' + row.id + '">' + value + '</div></b>' ;
                }
            }
   
     function formatAssetLink10(value, row) {                 
                if (value.split("-")[0]!=null) {                     
                    var clientId=value.split("-")[1];
                    var clientName=value.split("-")[0];                    
                    return '<a href="#" onclick="navigateToRelatedAccount(\''+clientId+'\');">'+clientName+'</a>';                    
                }
            }
     function navigateToRelatedAccount(clientId) {           
          if(sforce != undefined && sforce.console != undefined && sforce.console.isInConsole()){           
             sforce.console.openPrimaryTab(null,'/'+clientId,true,'Account', openSuccess, 'Account');
        }
         else
             window.open('/'+clientId);       
         }
    
    var openSuccess = function openSuccess(result) {
         
      };
            function formatPaymentLink2(value, row) {
                if (value) {
                        return '<div><a href="#" data-assetId="' + row.id + '" class="payment_link" >' + value + '</a></div>';
                    }
                }
    
            function formatStatus2(value, row) {
                if (value) {
                    if (value=="Active") return '<div style="color: green">' + value + '</div>';
                    else return '<div style="color: red">' + value + '</div>';
                }
            }
            
            function formatSuspendDate2(value, row) {
                if (value) {
                    if (value != '--') return '<div style="color: red">' + value + '</div>';
                    else return '--';
                }
            }
            
            function styleBackground2(row, index) {
                if (row.isChildOdd) return { class:"childRow" };
                else if (row.isParent) return { class:"parentRow" };
                else return { class:"normalRow" };
            }
    
            function pagerFilter2(data){
                if (OnlineAssetsJquery$.isArray(data)){    // is array  
                    data = {  
                        total: data.length,  
                        rows: data  
                    }  
                }
                var dg = OnlineAssetsJquery$(this);  
                var state = dg.data('treegrid');
                var opts = dg.treegrid('options');  
                var pager = dg.treegrid('getPager');  
                pager.pagination({  
                    onSelectPage:function(pageNum, pageSize){  
                        opts.pageNumber = pageNum;  
                        opts.pageSize = pageSize;  
                        pager.pagination('refresh',{  
                            pageNumber:pageNum,  
                            pageSize:pageSize  
                        });  
                        dg.treegrid('loadData',data); 
                        var filterText = OnlineAssetsJquery$("input[id*='filterAssetIdForSearch']").val();
                        setLinksAndHighlights2(filterText); 
                    },
                    onBeforeRefresh: filterAssetData2  
                });  
                if (!data.topRows){  
                    data.topRows = [];
                    data.childRows = [];
                    for(var i=0; i<data.rows.length; i++){
                            var row = data.rows[i];
                            row._parentId ? data.childRows.push(row) : data.topRows.push(row);
                    }
                                    data.total = (data.topRows.length);
                }  
                var start = (opts.pageNumber-1)*parseInt(opts.pageSize);  
                var end = start + parseInt(opts.pageSize);  
                data.rows = OnlineAssetsJquery$.extend(true,[],data.topRows.slice(start, end).concat(data.childRows));
                                    
                return data;
            }
            
            var typewatch2 = function(){
                var timer = 0;
                return function(callback, ms){
                    clearTimeout (timer);
                    timer = setTimeout(callback, ms);
                }  
            }();
            var parseDateString = function(s) {
                var d = new Date(s);
                return (d.getDate() + 1) + '-' + parseMonthName(d.getMonth() + 1) + '-' +  d.getFullYear();
            }
            var parseMonthName = function(s) {
                switch(s) {
                    case 1 : return 'Jan'; break;
                    case 2 : return 'Feb'; break;
                    case 3 : return 'Mar'; break;
                    case 4 : return 'Apr'; break;
                    case 5 : return 'May'; break;
                    case 6 : return 'Jun'; break;
                    case 7 : return 'Jul'; break;
                    case 8 : return 'Aug'; break;
                    case 9 : return 'Sep'; break;
                    case 10 : return 'Oct'; break;
                    case 11 : return 'Nov'; break;
                    case 12 : return 'Dec'; break;
                }
            }
            
            var parseConfig = function(s) {
                var splits = s.split(';');
                var html_string = '<ul>';
                
                for (var i = 0; i<splits.length-1; i++)
                {
                    html_string += '<li>' + splits[i] + '</li>';
                }
                html_string += '</ul>';
                console.log(html_string);
                return html_string;
            }
            function retrieveStatuses2() {
                var theseStatuses = new Array();
                var i = 0;
                OnlineAssetsJquery$("input[id*='status']").each(function(index) {
                    if(OnlineAssetsJquery$(this).prop('checked')){
                            theseStatuses[i] = OnlineAssetsJquery$(this).val();
                            i++;
                        }
                    });
                return theseStatuses;
                
                }
    function formatDate(inputDate){           
        var formattedDate = new Date(inputDate);
        var d = formattedDate.getUTCDate();
        var m =  formattedDate.getUTCMonth()+1;        
        var month='';
        switch(m){
         case 1:
                month="Jan"; 
                break;
         case 2:
                month="Feb";
                break;
         case 3:
                month="Mar";
                break;
         case 4:
                month="Apr";
                break;
        case 5:
                month="May";
                break;
        case 6:
                month="Jun";
                break;
        case 7:
                month="Jul";
                break;
        case 8:
                month="Aug";
                break;
        case 9:
                month="Sep";
                break;
        case 10:
                month="Oct";
                break;
        case 11:
                month="Nov";
                break;
        case 12:
                month="Dec";
                break;
        }
        var y =  formattedDate.getUTCFullYear();
        
    return (d+'-'+month+'-'+y);
     }
          //chakri - to show on popup
            function loadSelectedAsset2(assetId, e) {
                openAssetWindow2(e, assetId);
                // making js remoting call.
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.OnlineSubscriptionsListctrl.findSelectedAsset}', assetId, function(result, event) {
                        if (event.status) {
                            clearAssetWindow2();
                           
                            if (result.Online_Current_Product__c) document.getElementById('selectedAstname').innerHTML = 'Asset:  ' + result.Online_Current_Product__c;
                              else document.getElementById('selectedAstname').innerHTML = 'Asset:  '+ '--' ;
                              
                            if (result.Online_Current_Product__c) document.getElementById('CurrentProduct').innerHTML = '<b> <text style="color: black"> Current Product: </text></b>'+result.Online_Current_Product__c;
                              else document.getElementById('CurrentProduct').innerHTML = '<b> <text style="color: black"> Current Product: </text> </b>' + '--';
                              
                            if (result.Online_Original_Product__c) document.getElementById('OriginalProduct').innerHTML = '<b> <text style="color: black"> Original Product: </text> </b>' + result.Online_Original_Product__c;
                            else document.getElementById('OriginalProduct').innerHTML = '<b> <text style="color: black"> Original Product: </text> </b>' + '--'; 
                            
                            if (result.Channel__c) document.getElementById('Channel').innerHTML = '<b> <text style="color: black"> Channel: </text> </b>' + result.Channel__c;
                            else document.getElementById('Channel').innerHTML = '<b> <text style="color: black"> Channel: </text> </b>' + '--'; 
                            
                            if (result.StatusGlobal__c) document.getElementById('BillingStatus').innerHTML = '<b> <text style="color: black">Status : </text> </b>'+ result.StatusGlobal__c;
                            else document.getElementById('BillingStatus').innerHTML = '<b> <text style="color: black"> Status: </text></b>' + '--';
                            
                            if (result.Signup_Date__c) document.getElementById('Signupdate').innerHTML = '<b> <text style="color: black">Sign-Up : </text> </b>'+formatDate(result.Signup_Date__c);
                            else document.getElementById('Signupdate').innerHTML = '<b> <text style="color: black">Sign-Up : </text></b>'+ '--';
                            
                            if (result.First_Charge_Date__c) document.getElementById('Firstchargedate').innerHTML = '<b> <text style="color: black"> First Charge : <text></b>'+formatDate(result.First_Charge_Date__c);
                            else document.getElementById('Firstchargedate').innerHTML ='<b><text style="color: black">First Charge : </text></b>'+ '--';
                            
                            if (result.Next_Charge_Date__c) document.getElementById('Nextchargedate').innerHTML = '<b><text style="color: black">Next Bill : </text></b>'+formatDate(result.Next_Charge_Date__c);
                            else document.getElementById('Nextchargedate').innerHTML = '<b><text style="color: black">Next Bill : </text></b>'+'--';
                            
                            if (result.Projected_First_Charge_Date__c) document.getElementById('Projectedfirstchargedate').innerHTML = '<b><text style="color: black">Projected First Charge Date : </text></b>'+formatDate(result.Projected_First_Charge_Date__c);
                            else document.getElementById('Projectedfirstchargedate').innerHTML = '<b><text style="color: black">Projected First Charge Date : </text></b>'+'--';
                            
                            if (result.Payment_Setup_Date__c) document.getElementById('Paymentsetupdate').innerHTML = '<b><text style="color: black">Subscribe : </text></b>'+formatDate(result.Payment_Setup_Date__c);
                            else document.getElementById('Paymentsetupdate').innerHTML = '<b><text style="color: black">Subscribe :</text> </b>'+'--';
                            
                            if (result.Suspend_Date__c) document.getElementById('Suspenddate').innerHTML = '<b><text style="color: black">Suspend  : </text></b>'+formatDate(result.Suspend_Date__c);
                            else document.getElementById('Suspenddate').innerHTML = '<b><text style="color: black">Suspend : </text></b>'+ '--';
                            
                           // else document.getElementById('selectedAssetPromotion').innerHTML = 'None';
                           // document.getElementById('selectedAssetPromotionRestrictions').innerHTML = 'No';
                            if (result.of_Logins__c) document.getElementById('logins').innerHTML = '<b><text style="color: black">No. of Trial Logins:</text> </b>'+result.of_Logins__c;
                            else document.getElementById('logins').innerHTML = '<b><text style="color: black"> No. of Trial Logins:</text> </b>' + '--';
                            
                             if (result.UIOnlyTZLastLoginDate__c) document.getElementById('Lastlogindate').innerHTML = '<b><text style="color: black">Last Trial Login  : </text></b>'+result.UIOnlyTZLastLoginDate__c;
                             else document.getElementById('Lastlogindate').innerHTML ='<b><text style="color: black">Last Trial Login : </text></b>'+ '--';
                            
                            if (result.Online_Expiry_Date__c) document.getElementById('OnlineExpirydate').innerHTML ='<b><text style="color: black">Expiry  : </text></b>'+formatDate( result.Online_Expiry_Date__c);
                            else document.getElementById('OnlineExpirydate').innerHTML ='<b><text style="color: black">Expiry  : </text></b>'+'--';
                            
                             /* if (result.Plan_Name__c) document.getElementById('planname').innerHTML = '<b><text style="color: black"> Plan : </text></b>'+result.Plan_Name__c;
                            else document.getElementById('planname').innerHTML = '<b><text style="color: black"> Plan :</text></b>' + '--';*/
                            
                            if (result.Online_Offer_Code__c) document.getElementById('planname').innerHTML = '<b><text style="color: black"> Offer Id : </text></b>'+result.Online_Offer_Code__c;
                            else document.getElementById('planname').innerHTML = '<b><text style="color: black"> Offer Id :</text></b>' + '--'; 
                            
                            /*if (result.Online_Trail_End_Date__c) document.getElementById('Traildate').innerHTML = '<b><text style="color: black"> Trial End  : </text></b>'+result.Online_Trail_End_Date__c;
                            else document.getElementById('Traildate').innerHTML = '<b> <text style="color: black"> Trial End  : </text></b>' + '--'; */
                            
                            // On Hover Pop up, display Asset Id instead of Asset Name.... Added by Sunil Sharma as part of COMP-407
                            document.getElementById('Assetnum').innerHTML = '<b><text style="color: black"> Asset Id:</text> </b>'+result.Id; 
                            
                            /* Instead of Asset Name, we need to display Asset Id. Commented by Sunil Sharma as part of COMP-407
                             if (result.Name) document.getElementById('Assetnum').innerHTML = '<b><text style="color: black"> Asset #:</text> </b>'+result.Name; 
                             else document.getElementById('Assetnum').innerHTML = '<b> <text style="color: black">Asset #:</text> </b>'+ '--' ;
                            */
                          /*   if (result.Online_Original_Product_SKU__c) document.getElementById('Online_Original_Product_SKU').innerHTML = '<b><text style="color: black"> Original SKU:</text> </b>'+result.Online_Original_Product_SKU__c; 
                             else document.getElementById('Online_Original_Product_SKU').innerHTML = '<b> <text style="color: black">Original SKU</text> </b>'+ '--' ;
                             
                             if (result.Online_Current_Product_SKU__c) document.getElementById('Online_Current_Product_SKU').innerHTML = '<b><text style="color: black"> Current SKU:</text> </b>'+result.Online_Current_Product_SKU__c; 
                             else document.getElementById('Online_Current_Product_SKU').innerHTML = '<b> <text style="color: black">Current SKU:</text> </b>'+ '--' ; */
                             
                             if (result.Cancel_Date__c) document.getElementById('Online_Cancel_Date').innerHTML = '<b><text style="color: black"> Cancel:</text> </b>'+formatDate(result.Cancel_Date__c); 
                             else document.getElementById('Online_Cancel_Date').innerHTML = '<b> <text style="color: black">Cancel:</text> </b>'+ '--' ;                            
                            
                             if (result.Delete_Date__c) document.getElementById('Online_Delete_Date').innerHTML = '<b><text style="color: black"> Delete:</text> </b>'+formatDate(result.Delete_Date__c); 
                             else document.getElementById('Online_Delete_Date').innerHTML = '<b> <text style="color: black">Delete:</text> </b>'+ '--' ;
                            
                            if (result.ReSubscribe_Date__c) document.getElementById('ReSubscribe_Date').innerHTML = '<b><text style="color: black"> ReSubscribe:</text> </b>'+formatDate(result.ReSubscribe_Date__c); 
                             else document.getElementById('ReSubscribe_Date').innerHTML = '<b> <text style="color: black">ReSubscribe:</text> </b>'+ '--' ;
                            
                            if (result.Migrate_In_Date__c) document.getElementById('Migrate_In_Date').innerHTML = '<b><text style="color: black"> Migrated In:</text> </b>'+formatDate(result.Migrate_In_Date__c); 
                             else document.getElementById('Migrate_In_Date').innerHTML = '<b> <text style="color: black">Migrated In:</text> </b>'+ '--' ;
                            
                            if (result.Migrate_Out_Date__c) document.getElementById('Migrate_Out_Date').innerHTML = '<b><text style="color: black"> Migrated Out:</text> </b>'+formatDate(result.Migrate_Out_Date__c); 
                             else document.getElementById('Migrate_Out_Date').innerHTML = '<b> <text style="color: black">Migrated Out:</text> </b>'+ '--' ;
                            
                            if (result.Upgrade_Date__c) document.getElementById('Upgrade_Date').innerHTML = '<b><text style="color: black"> Upgraded:</text> </b>'+formatDate(result.Upgrade_Date__c); 
                             else document.getElementById('Upgrade_Date').innerHTML = '<b> <text style="color: black">Upgraded:</text> </b>'+ '--' ;
                            
                            if (result.Downgrade_Date__c) document.getElementById('downgradeDate').innerHTML = '<b><text style="color: black"> Downgraded:</text> </b>'+formatDate(result.Downgrade_Date__c); 
                             else document.getElementById('downgradeDate').innerHTML = '<b> <text style="color: black">Downgraded:</text> </b>'+ '--' ;
                             
                            if (result.Trial_End_Date__c) document.getElementById('TrialEndDate').innerHTML = '<b><text style="color: black"> Trial End:</text> </b>'+formatDate(result.Trial_End_Date__c); 
                             else document.getElementById('TrialEndDate').innerHTML = '<b> <text style="color: black">Trial End:</text> </b>'+ '--' ;
                            
                              if (result.Num_of_Invoices__c) document.getElementById('Num_of_Invoices').innerHTML = '<b><text style="color: black"> # of Invoices:</text> </b>'+result.Num_of_Invoices__c; 
                             else document.getElementById('Num_of_Invoices').innerHTML = '<b> <text style="color: black"># of Invoices: </text> </b>'+ '--' ;
                               
                             if (result.OLB_Online_Banking__c) document.getElementById('OLB_Online_Banking').innerHTML = '<b><text style="color: black">Online Banking:</text> </b>'+ 'Yes'; 
                             else document.getElementById('OLB_Online_Banking').innerHTML = '<b> <text style="color: black">Online Banking: </text> </b>'+ '--' ;
                           
                                                     
                             
                             if (result.Score__c) document.getElementById('Score').innerHTML = '<b><text style="color: black">Score :</text> </b>'+ result.Score__c; 
                             else document.getElementById('Score').innerHTML = '' ;
                           
                              /* Start >> Added by chetan For BTBS-5375, BTBS-5376  */
                             if (result.Partner_Name__c) document.getElementById('PartnerName').innerHTML = '<b><text style="color: black"> Partner Name:</text> </b>'+result.Partner_Name__c; 
                             else document.getElementById('PartnerName').innerHTML = '<b> <text style="color: black">Partner Name:</text> </b>'+ '--' ; 
                             
                             if (result.Payroll_Company_Id__c) document.getElementById('PayrollCompanyId').innerHTML = '<b><text style="color: black"> Payroll Company Id:</text> </b>'+result.Payroll_Company_Id__c; 
                             else document.getElementById('PayrollCompanyId').innerHTML = '<b> <text style="color: black">Payroll Company Id:</text> </b>'+ '--' ; 
                             /* End >> Added by chetan For BTBS-5375, BTBS-5376  */
                            openAssetWindow2(e, assetId);
                            closeLoadingWindow();
                               
                        } else if (event.type === 'exception') {    
                             alert(event.message);
                        } else {
                           
                           alert(event.message);
                        }
                    }, {escape:true});
            }
            
            
           /* function loadSelectedPayment(assetId, e) {
                openPaymentWindow(e, assetId);
                // making js remoting call.
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.OnlineSubscriptionsListctrl.findSelectedAsset}', assetId, function(result, event) {
                        if (event.status) {
                            clearPaymentWindow();
                            if (result.Online_Current_Product__c) document.getElementById('selectedPaymentBillingProfile').innerHTML = result.Online_Current_Product__c;
                            if (result.Signup_Date__c) document.getElementById('selectedPaymentBDOM').innerHTML = result.Signup_Date__c;
                           
                            if ((OnlineAssetsJquery$(e).offset().top + OnlineAssetsJquery$(e).height() + 17 + OnlineAssetsJquery$("#payment_win").height()) > OnlineAssetsJquery$(window).height() - 40) { openPaymentWindow(e, assetId); }
                            //To stop Async loading
                            closeLoadingWindow();
                        } else if (event.type === 'exception') {    
                             alert(event.message);
                        } else {
                           alert(event.message);
                        }
                    }, {escape:true});
            } */
            
            
    
            function openAssetWindow2(e, assetId) {
                OnlineAssetsJquery$("#asset_online").css({
                    "left": function() {
                        return OnlineAssetsJquery$(e).offset().left + OnlineAssetsJquery$(e).width() + 20;
                    },
                    "top": function() {           
                        return OnlineAssetsJquery$(e).offset().top - 189 + headerOffset;
                    },
                    "display": "block"
                });
                OnlineAssetsJquery$("#asset_online").mouseenter(function() {
                    clearTimeout(assetWinTimeoutOut[assetId]);
                }).mouseleave(function() {
                    clearTimeout(assetWinTimeoutOut[assetId]);
                    assetWinTimeoutOut[assetId] = setTimeout(function() {closeAssetWindow2();}, hoverDelay);
                });
                OnlineAssetsJquery$("#asset_arrow_left2").css({
                    "left": function() {
                        return OnlineAssetsJquery$(e).offset().left + OnlineAssetsJquery$(e).width();
                    },
                    "top": function() {
                                return OnlineAssetsJquery$(e).offset().top - 8 + headerOffset;
                            },
                    "display": "block"
                });
                OnlineAssetsJquery$("#asset_arrow_left2_inner").css({
                    "left": function() {
                        return OnlineAssetsJquery$(e).offset().left + OnlineAssetsJquery$(e).width() + 2;
                    },
                    "top": function() {
                                return OnlineAssetsJquery$(e).offset().top - 8 + headerOffset;
                            },
                    "display": "block"
                });
                openLoadingWindow(OnlineAssetsJquery$("#asset_online").offset().left, OnlineAssetsJquery$("#asset_online").offset().top, (OnlineAssetsJquery$("#asset_online").width() + 2), OnlineAssetsJquery$("#asset_online").height(), true);
            }
            
            function closeAssetWindow2() {
                console.log('## Hide');
                OnlineAssetsJquery$('#asset_online').css("display","none");
                OnlineAssetsJquery$("#asset_arrow_left2").css("display","none");
                OnlineAssetsJquery$("#asset_arrow_left2_inner").css("display","none");
            }
            
            function openLoadingWindow(x, y, w, h, rounded) {
                OnlineAssetsJquery$("#loading-window2").css({
                    "left": x + loadingOffset,
                    "top": y + headerOffset,
                    "width": w,
                    "height": h,
                    "display": "block",
                    "border-radius": function() {
                        if (rounded==true) { return "10px"; }
                        else return "0px";
                    }
                });
            }
            function closeLoadingWindow() {
                OnlineAssetsJquery$("#loading-window2").css("display", "none");
            }
            
          
            //chakri
            function setLinksAndHighlights2(filterText) {
                OnlineAssetsJquery$(".online_link").each(function() {
                    var assetId = this.getAttribute('data-assetId');
                    OnlineAssetsJquery$(this).mouseenter(function() {                       
                        clearTimeout(assetWinTimeoutIn[assetId]);
                        clearTimeout(assetWinTimeoutOut[assetId]);
                        var thisObject = this;
                        assetWinTimeoutIn[assetId] = setTimeout(function() { loadSelectedAsset2(assetId, thisObject); }, hoverDelay);
                    });
                    OnlineAssetsJquery$(this).mouseleave(function() {
                        clearTimeout(assetWinTimeoutOut[assetId]);
                        clearTimeout(assetWinTimeoutIn[assetId]);
                        assetWinTimeoutOut[assetId] = setTimeout(function() {closeAssetWindow2();}, hoverDelay);
                    });
                });
                
               
                OnlineAssetsJquery$('.datagrid-row td input:checkbox').each(function() {
                    console.debug( "online subscriptions comp setLinksAndHighlights2 turning checkbox into radio button." );
                    OnlineAssetsJquery$(this).replaceWith('<input type="radio" name="' + OnlineAssetsJquery$(this).attr('name') + '" value="' + OnlineAssetsJquery$(this).attr('value') + '" />');
                });
                OnlineAssetsJquery$('.datagrid-row td').highlight(filterText);
                OnlineAssetsJquery$('.datagrid-cell:empty').text('--');
                resizeView2();
            }
            
            //chakri
            function resizeView2() {                
                if (!OnlineAssetsJquery$('.datagrid-row:visible').length){
                    var vc = OnlineAssetsJquery$('#assetTreeGrid1').datagrid('getPanel').children('div.datagrid-view');
                    vc.children('div.datagrid-empty').remove();
                    var d = OnlineAssetsJquery$('<div class="datagrid-empty"></div>').html('No Online subscriptions').appendTo(vc);
                    d.css({
                        position:'absolute',
                        left:0,
                        top:35,
                        width:'100%',
                        textAlign:'left',
                        'padding-left': '10px',
                        'padding-top': '15px'
                    });
                    OnlineAssetsJquery$('#assetTreeGrid1').treegrid('resize', { height: 110 });
                }
                else{
                    var vc = OnlineAssetsJquery$('#assetTreeGrid1').datagrid('getPanel').children('div.datagrid-view');
                    vc.children('div.datagrid-empty').remove();
                    var rowHeights = OnlineAssetsJquery$('.datagrid-header-row').height() + 50; 
                    OnlineAssetsJquery$('.datagrid-row:visible').each(function() {
                        rowHeights += OnlineAssetsJquery$(this).height(); 
                    });
                    OnlineAssetsJquery$('#assetTreeGrid1').treegrid('resize', { height: rowHeights });
                }
            }
            function addRowSelectHander2() {
                 OnlineAssetsJquery$('.datagrid-row').each(function() {
                    OnlineAssetsJquery$(this).click(function() {
                        OnlineAssetsJquery$(this).find('td input:radio').each(function() {
                            OnlineAssetsJquery$(this).attr('checked', 'checked');
                        });
                    });
                });
            }
            
            //chakri
            function clearAssetWindow2() {
                document.getElementById('selectedAstname').innerHTML = '&nbsp;';
                document.getElementById('CurrentProduct').innerHTML = '&nbsp;';
                document.getElementById('OriginalProduct').innerHTML = '&nbsp;';
                document.getElementById('logins').innerHTML = '&nbsp;';
                document.getElementById('BillingStatus').innerHTML = '&nbsp;';
                document.getElementById('planname').innerHTML = '&nbsp;';
                document.getElementById('Assetnum').innerHTML = '&nbsp;';
                document.getElementById('Signupdate').innerHTML = '&nbsp;';
                document.getElementById('Firstchargedate').innerHTML = '&nbsp;';
                document.getElementById('Nextchargedate').innerHTML = '&nbsp;';
                document.getElementById('Projectedfirstchargedate').innerHTML = '&nbsp;';
                document.getElementById('Paymentsetupdate').innerHTML = '&nbsp;';
                document.getElementById('Suspenddate').innerHTML = '&nbsp;';
                document.getElementById('Lastlogindate').innerHTML = '&nbsp;';
                //document.getElementById('Traildate').innerHTML = '&nbsp;';
                document.getElementById('OnlineExpirydate').innerHTML = '&nbsp;';
                //document.getElementById('Online_Original_Product_SKU').innerHTML = '&nbsp;';
                //document.getElementById('Online_Current_Product_SKU').innerHTML = '&nbsp;';
                document.getElementById('Online_Cancel_Date').innerHTML = '&nbsp;';
                document.getElementById('Online_Delete_Date').innerHTML = '&nbsp;';
                document.getElementById('ReSubscribe_Date').innerHTML = '&nbsp;';                
                document.getElementById('Migrate_In_Date').innerHTML = '&nbsp;';
                document.getElementById('Migrate_Out_Date').innerHTML = '&nbsp;';
                document.getElementById('Upgrade_Date').innerHTML = '&nbsp;'; 
                document.getElementById('downgradeDate').innerHTML= '&nbsp';
                document.getElementById('TrialEndDate').innerHTML = '&nbsp;';                
                document.getElementById('Num_of_Invoices').innerHTML = '&nbsp;';
                document.getElementById('OLB_Online_Banking').innerHTML = '&nbsp;';
                document.getElementById('Score').innerHTML = '&nbsp;';
                
               
                document.getElementById('PartnerName').innerHTML = '&nbsp;';   //Chetan Added BTBS-5375
                document.getElementById('PayrollCompanyId').innerHTML = '&nbsp;';   //Chetan Added BTBS-5376
            }
            
          
            function clearCancelAutorenewalWindow2() {
                document.getElementById('cancel-green-text').innerHTML = '&nbsp;';
                //document.getElementById('cancel-end-text').innerHTML = '&nbsp;';
            }
            
          
            
            function gotoPageOne2() {
                var pager = OnlineAssetsJquery$('#assetTreeGrid1').treegrid('getPager');  
                pager.pagination('select', 1); 
            }
        
        // DMD 
        // Copy of method loadassetTreeGridData2 for making js remote call for loading the tree data  
        // with flattened list method called instead
        function loadAssetTreeGridDataAsFlattenedList() {
            var filterText = OnlineAssetsJquery$("input[id*='filterAssetIdForSearch']").val();
            // making js remoting call
             Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.OnlineSubscriptionsListctrl.filterAssetHierarchyData}', accountId, lastSortOrder, lastSortField, filterText, retrieveStatuses2(), relCompanyId , 'false', function(result, event){
                // alert('Response go it');
                // console.log('##'+JSON.stringify(result));
                if (event.status) {
                    // Chakri
                    OnlineAssetsJquery$('#assetTreeGrid1').treegrid({  
                       
                        data: result
                    });
                    setLinksAndHighlights2(filterText);
                    // DMD 4/26/2016: resize the UI
                    // sortData2('Signup_Date__c'); 
                    // gotoPageOne2();
                } else if (event.type === 'exception') {    
                    //alert(event.message);
                } else {
                   alert(event.message);
                }
            }, {escape:true});
        }
        
        
        var osFirstTime = true;
        
        // DMD 4/27/2016: 
        function reloadOnlineSubscriptionsTable( showParentRelationships ) {
            // var showParentRelationships = isShowingParentRelationships;
            console.debug( "reloadOnlineSubscriptionsTable showParentRelationships = " + showParentRelationships );
            console.debug( "showParentsSelected = " + showParentsSelected );
            // var filterText = OnlineAssetsJquery$("input[id*='filterAssetIdForSearch']").val();
            // console.debug( "filterText = " + filterText );
            if ( osFirstTime ) {
                osFirstTime = false;
                console.debug( "reloadOnlineSubscriptionsTable first time.  Calling loadassetTreeGridData2()..." );
                // on initial load sort by sign up date, descending
                lastSortField = 'Signup_Date__c';
                lastSortOrder = 'DESC';
                // show descending link in UI
                OnlineAssetsJquery$('.datagrid-sort-icon').attr('title','Sort Descending');
                loadassetTreeGridData2();
            } else if ( showParentRelationships != null && showParentRelationships == true ) {
                // make call to display UI with parent relationships intact (tree view)
                console.debug( "reloadOnlineSubscriptionsTable calling loadassetTreeGridData2()..." );
                loadassetTreeGridData2();
                // sort by Signup Date and resize the table
                // console.debug( "reloadOnlineSubscriptionsTable calling sortData2('Signup_Date__c')..." );
            } else {
                // make call to display UI with flattened view
                console.debug( "reloadOnlineSubscriptionsTable calling loadAssetTreeGridDataAsFlattenedList()..." );
                loadAssetTreeGridDataAsFlattenedList();
                // sort by Signup Date and resize the table
                // sortData2('Signup_Date__c');
            }
        }
        
        // DMD 4/27/2016: kick off initial load of data (method above) 
        reloadOnlineSubscriptionsTable( showParentsByDefault );
    
	/**
     * ──────────────────────────────────────────────────────────────────────────────────────────────────────────┐
     * Added If account is open in care console only tab should be reloaded
     * Function : redirectToAccountDetail
     * ──────────────────────────────────────────────────────────────────────────────────────────────────
     * Start BTBS-5474
     * Developer: Harsh Rawat 26 Jan 2017
     * 
     * ──────────────────────────────────────────────────────────────────────────────────────────────────────────┘
    **/
        function redirectToAccountDetail(){
        	if(sforce != undefined && sforce.console != undefined && sforce.console.isInConsole()){
        		sforce.console.getFocusedPrimaryTabId(function(result){
        			sforce.console.openPrimaryTab(result.id, "/{!accountid}", true,'');
       			});
        	}else{
        		window.top.location.href = "/" + accountId;
        	}
        }
        /*
        *End BTBS-5474
        */
        </script>
</apex:form>
 
   <!-- Chakri-Detail Window -->
  <div id="asset_online"  class="popup-class" style="width:500px;" >
        <div class="popup-top-border"></div>
            <div style="display: inline-block; width: 50%; height: 100%; float: left;">
            
                 <div class="popupHeader2" id="selectedAstname"></div><br /><br />
                 <div class="popupValueFull" id="Assetnum"></div>
                 <div class="popupValueFull" id="planname" style="word-wrap: break-word;"></div>
                 <div class="popupValueFull" id="BillingStatus"></div>
                 <div class="popupValueFull" id="CurrentProduct"></div>
                 <!--div class="popupValueFull" id="Online_Current_Product_SKU"></div> -->
                 <div class="popupValueFull" id="OriginalProduct"></div>
                 <div class="popupValueFull" id="Channel"></div>    
                 
                            
                  <div class="popupValueFull" id="PartnerName"></div><!--Chetan Added BTBS-5375-->         
                  <div class="popupValueFull" id="PayrollCompanyId"></div><!--Chetan Added BTBS-5376-->  
                             
                 <div class="popupHeader"></div>
                 <div class="popupHeader"></div>
                 <div class="popupHeader"></div>
                 <div class="popupHeader"></div>
                 <div class="popupHeader"></div>
                 <div class="popupValueFull" id="Num_of_Invoices"></div>
                 <div class="popupValueFull" id="OLB_Online_Banking"></div>
                
                
           </div>
            
            <div style="display: inline-block; width: 50%; height: 100%; float: left;">
                 <br /><br />
                <div class="popupHeader">**** Dates ****</div>
                <div class="popupValueFull" id="Signupdate"></div>
                <div class="popupValueFull" id="TrialEndDate"></div>
                <div class="popupValueFull" id="Paymentsetupdate"></div>
                <div class="popupValueFull" id="Firstchargedate"></div>
                <div class="popupValueFull" id="Nextchargedate"></div>
                <div class="popupValueFull" id="Projectedfirstchargedate"></div>
                <div class="popupValueFull" id="Upgrade_Date"></div>
                <div class="popupValueFull" id="downgradeDate"></div>
                <div class="popupValueFull" id="Suspenddate"></div>
                <div class="popupValueFull" id="Online_Cancel_Date"></div>
                <div class="popupValueFull" id="Online_Delete_Date"></div>
                <div class="popupValueFull" id="ReSubscribe_Date"></div>
                <div class="popupValueFull" id="Migrate_In_Date"></div>
                <div class="popupValueFull" id="Migrate_Out_Date"></div>
                <div class="popupValueFull" id="OnlineExpirydate"></div><br />
                       
                
               <div class="popupHeader"></div> 
               <div class="popupHeader"></div>
               <div class="popupHeader">**** Trial Logins ****</div>
               <div class="popupValueFull" id="logins"></div>
               <div class="popupValueFull" id="Lastlogindate"></div>
               <div class="popupValueFull" id="Score"></div>
               
            </div>
            
    </div>
   
    <div class="arrow-up" id="payment_arrow_up"></div>       
    <div class="arrow-up-inner" id="payment_arrow_up_inner"></div>
    <div class="arrow-left" id="asset_arrow_left2"></div>       
    <div class="arrow-left-inner" id="asset_arrow_left2_inner"></div>
    <div class="arrow-down" id="payment_arrow_down"></div>
    <div class="arrow-down-inner" id="payment_arrow_down_inner"></div>
    <div class="loading-window2" id="loading-window2" ><div class="loading-icon"></div></div>
    <div class="cancel-popup" id="cancel-popup">
        <div class="cancel-green-wrapper">
            <div class="cancel-green-text" id="cancel-green-text"></div>
        </div>
        <!--<div class="cancel-end-wrapper">
            <div class="cancel-end-text" id="cancel-end-text"></div>
        </div> -->
        <div class="cancel-button-wrapper">
            <input type="button" class="btn cancel-button-close" onclick="OnlineAssetsJquery$('#cancel-popup').css('display','none');" value="Ok"/>
        </div>
        
    </div>
    
    <script>
    OnlineAssetsJquery$ = jQuery.noConflict();
    OnlineAssetsJquery$.fn.highlight = function(pat) {
     function innerHighlight2(node, pat) {
      var skip = 0;
      if (node.nodeType == 3) {
       var pos = node.data.toUpperCase().indexOf(pat);
       if (pos >= 0) {
        var spannode = document.createElement('span');
        spannode.className = 'highlight';
        var middlebit = node.splitText(pos);
        var endbit = middlebit.splitText(pat.length);
        var middleclone = middlebit.cloneNode(true);
        spannode.appendChild(middleclone);
        middlebit.parentNode.replaceChild(spannode, middlebit);
        skip = 1;
       }
      }
      else if (node.nodeType == 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {
       for (var i = 0; i < node.childNodes.length; ++i) {
        i += innerHighlight2(node.childNodes[i], pat);
       }
      }
      return skip;
     }
     return this.length && pat && pat.length ? this.each(function() {
      innerHighlight2(this, pat.toUpperCase());
     }) : this;
    };

    OnlineAssetsJquery$.fn.removeHighlight = function() {
     return this.find("span.highlight").each(function() {
      this.parentNode.firstChild.nodeName;
      with (this.parentNode) {
       replaceChild(this.firstChild, this);
       normalize();
      }
     }).end();
    };
    
    OnlineAssetsJquery$.fn.center = function () {
        this.css("position","absolute");
        this.css("top", Math.max(0, ((OnlineAssetsJquery$(window).height() - OnlineAssetsJquery$(this).outerHeight()) / 2) + 
                                                    OnlineAssetsJquery$(window).scrollTop()) + "px");
        this.css("left", Math.max(0, ((OnlineAssetsJquery$(window).width() - OnlineAssetsJquery$(this).outerWidth()) / 2) + 
                                                    OnlineAssetsJquery$(window).scrollLeft()) + "px");
        return this;
    }

    </script>
</body>
</html>
</apex:component>