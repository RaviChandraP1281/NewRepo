<!-- BillingHistoryProfileList.page and BillingHistoryList.page share the same component BillingHistoryPopups for billing history table and its associated popups -->
<!-- When a new column is added to billing history table, both pages and the component need to be modified accordingly -->
<!-- For the pages, this means add a new column to the table with class 'display' -->
<!-- For the component, this means: adding an entry to 'Column index constants' for the new column, adding an entry to getFieldFromCurrentRow() for the new column, and adding the new column to 'columnDefs' of data table if it's a hidden column -->
<apex:component controller="BillingPopupController">
<apex:includeScript value="{!URLFOR($Resource.treeviewGrid2983, 'jquery.min.js')}" />

<apex:includeScript value="{!URLFOR($Resource.JQueryDataTablesZip, 'DataTables/jquery.dataTables.min.js')}" />

<apex:stylesheet value="{!URLFOR($Resource.JQueryDataTablesZip, 'DataTables/css/jquery.dataTables.min.css')}"/>

<apex:includeScript value="{!URLFOR($Resource.JQueryDataTablesZip, 'DataTables/moment.min.js')}" />

<apex:includeScript value="{!URLFOR($Resource.JQueryDataTablesZip, 'DataTables/datetime-moment.js')}" />

<apex:stylesheet value="{!URLFOR($Resource.JQueryDataTablesZip, 'DataTables/css/select.dataTables.min.css')}" />

<apex:includeScript value="{!URLFOR($Resource.JQueryDataTablesZip, 'DataTables/dataTables.select.min.js')}" />

<apex:stylesheet value="{!$Resource.BillingHistoryListCSS}"/>

<!-- ********************************************* CSS stylesheets ******************************************************-->

<style>
    /* 8/18/15: add filterMatches for search match highlighting */

    .filterMatches { background-color: #FFFF00; }    
    .relatedMatches { background-color: #d8e2f4 !important; }    

        .LoadingBillingHistoryListSpinner {
            height:100%; 
            width:100%; 
            background-color: #D6D6D2; 
            z-index:1500; 
            opacity:0.8; 
            position:absolute; 
            display:none; 
            text-align: center;"            
        }
        .parentTr td:first-child
        {        
         color:blue !important; 
         font-weight:bold;
        }
        .childTr td:first-child
        {        
         color:blue !important;          
        }

</style>

    <script type="text/javascript" language="javascript">
    <apex:includeScript value="/soap/ajax/28.0/connection.js"/>
        /* Global variables. Used to retrieve data into popups. Values are populated from hidden fields in billing history table.
        */
        // connect to API
        sforce.connection.sessionId='{!GETSESSIONID()}';
    

        var accountPOID_value;
        var eventTypePOID_value;
        var eventPOID_value;
        var itemPOID_value;
        var accountId;
        var filterTimeout;   
        var keyupDelay = 500;
        var billingHistTable;
        
        /* Global variables to store charge details. Used to display values in Make Adjustment Dialog box.*/
        
        var makeAdjlineItem;
        var makeAdjLineItemAmount;
        var makeAdjSalesTaxAmount;
        var makeAdjustmentTotalAmount;
        
        // Column index constants
        
       /* const DATE_COLUMN = 0;
        const AMOUNT_COLUMN = DATE_COLUMN + 1;
        const TYPE_COLUMN = AMOUNT_COLUMN + 1;
        const LINE_ITEM_COLUMN = TYPE_COLUMN + 1;
        const PAYMENT_METHOD_COLUMN = LINE_ITEM_COLUMN + 1;
        const ORDER_NUMBER_COLUMN = PAYMENT_METHOD_COLUMN + 1;
        const PSON_NUMBER_COLUMN = ORDER_NUMBER_COLUMN + 1;
        const BILL_NUMBER_COLUMN = PSON_NUMBER_COLUMN + 1;
        const ACCOUNT_POID_COLUMN = BILL_NUMBER_COLUMN + 1;
        const EVENT_TYPE_COLUMN = ACCOUNT_POID_COLUMN + 1;
        const EVENT_COLUMN = EVENT_TYPE_COLUMN + 1;
        const ITEM_POID_COLUMN = EVENT_COLUMN + 1;
        const BILLINFO_POID_COLUMN = ITEM_POID_COLUMN + 1;
        const PAYMENT_TYPE_COLUMN = BILLINFO_POID_COLUMN + 1;
        const SFDC_ACCOUNT_COLUMN = PAYMENT_TYPE_COLUMN + 1;
        */
        
        const BILL_NUMBER_COLUMN =0;
        const DATE_COLUMN = BILL_NUMBER_COLUMN + 1;
        const AMOUNT_COLUMN = DATE_COLUMN + 1;
        const TYPE_COLUMN = AMOUNT_COLUMN + 1;
        const LINE_ITEM_COLUMN = TYPE_COLUMN + 1;
        const PAYMENT_METHOD_COLUMN = LINE_ITEM_COLUMN + 1;
        const ORDER_NUMBER_COLUMN = PAYMENT_METHOD_COLUMN + 1;
        const PSON_NUMBER_COLUMN = ORDER_NUMBER_COLUMN + 1;
        const ACCOUNT_POID_COLUMN = PSON_NUMBER_COLUMN + 1;
        const EVENT_TYPE_COLUMN = ACCOUNT_POID_COLUMN + 1;
        const EVENT_COLUMN = EVENT_TYPE_COLUMN + 1;
        const ITEM_POID_COLUMN = EVENT_COLUMN + 1;
        const BILLINFO_POID_COLUMN = ITEM_POID_COLUMN + 1;
        const PAYMENT_TYPE_COLUMN = BILLINFO_POID_COLUMN + 1;
        const SFDC_ACCOUNT_COLUMN = PAYMENT_TYPE_COLUMN + 1;
        
        console.debug('DATE_COLUMN = ' + DATE_COLUMN + ' AMOUNT_COLUMN = ' + AMOUNT_COLUMN + ' SFDC_ACCOUNT_COLUMN = ' + SFDC_ACCOUNT_COLUMN );
        console.debug(' BILLINFO_POID_COLUMN = ' + BILLINFO_POID_COLUMN + ' PAYMENT_TYPE_COLUMN = ' + PAYMENT_TYPE_COLUMN);   
        popupjQuery$ = jQuery.noConflict();
        
        // quick check against null
        function verify(value) {
            return (value ? value : '');
        }
        
        // Use number.toFixed() to prevent large number to be represented in exponent, aka. scientific notation
        function verifyPOID(value) {
            return (value ? parseFloat(value).toFixed() : '');
        }        

        popupjQuery$(document).ready(function() {
            // SOQL for billing history of a BP is not working so for now we use REST API only for account billing history
            if (!isBillingProfile) {
                // display spinner
                popupjQuery$('div .LoadingBillingHistoryListSpinner').show();
        
                try {
        
                    // start the query and build the table
                    console.debug("CAN = " + popupjQuery$('#billingHistId').attr("data-accountCAN"));
            
                    var whereClause = '';
                
                    if (isBillingProfile) {
                        whereClause = "WHERE CAN__c = '" + popupjQuery$('#billingHistId').attr("data-accountCAN") + 
                            "' AND Billinfo_POID__c = " + popupjQuery$('#billingHistId').attr("data-billingProfileId");                 
                    } else {
                        whereClause = "WHERE CAN__c = '" + popupjQuery$('#billingHistId').attr("data-accountCAN") + "'"; 
                    }
               
                    console.debug("BP whereClause = " + whereClause);
                
                    // Note: Must add 'id' to the query, otherwise it won't get generated since we are using REST API here 
                    var result = sforce.connection.query("SELECT EVENT_DATE_PACIFIC__c, EVENT_DATE__c, Total__c, EVENT__c, Item__c, PSON_Number__c, " + 
                        "Billinfo_POID__c, PAY_TYPE__c, BILLING_PROFILE_ID__c, PAYMENT_METHOD__c, Order__c, EventID__c, Account_POID__c, " + 
                        "Event_POID_Type__c, Event_POID__c, Item_POID__c  from V_ODATA_CUST_BILL_HISTS__x " + whereClause + 
                        " order by EVENT_DATE__c DESC limit 10000");
                
                    sforce.connection.batchSize="2000";  
                    var tbody = popupjQuery$('#billingHistId').find('tbody');

                    var queryMore = true;
                    while (queryMore) {
                        var records = result.getArray("records");
                        console.debug("records length -- " + records.length);
            
                        for (var i = 0; i < records.length; i++) {
                            var record = records[i];
                            // create a table row for this Order__x record
                            var tr = popupjQuery$('<tr/>').appendTo(tbody);
                    
                            // Attach all fields in the records to the row
                            // Note: Field names are case-sensitive here since this is JavaScript.  So, get it right
                            tr.append('<td class="billNumber">' + verify(record.EventID__c) + '</td>');
                            tr.append('<td>' + verify(record.EVENT_DATE_PACIFIC__c) + '</td>');
                            tr.append('<td styleClass="amountValue">' + verify(record.Total__c) + '</td>');
                            // no popup for payment
                            var typeClass;
                            if (!(record.EVENT__c) || record.EVENT__c == 'Payment') {
                                typeClass = '';
                            } else {
                                typeClass = 'popper';
                            }
                            var typeColor = 'black';
                            if (!record.EVENT__c) {
                                typeColor = 'black';
                            } else if (record.EVENT__c == 'Charge') {
                                typeColor = '#4e9e19';
                            } else if (record.EVENT__c == 'Refund') {
                                typeColor = '#d81e00';
                            } else if (record.EVENT__c == 'Adjustment') {
                                typeColor = '#7b2cd6';
                            } else {
                                typeColor = 'black';
                            }
                        
                            tr.append('<td class="' + typeClass + '" data-popbox="" styleClass="typeValue" style="color: ' + typeColor + '">' + verify(record.EVENT__c) + '</td>');
                            tr.append('<td>' + verify(record.Item__c) + '</td>');
                            tr.append('<td class="popper" data-popbox="" styleClass="typeValue">' + verify(record.PAYMENT_METHOD__c) + '</td>');
                            tr.append('<td>' + verify(record.Order__c) + '</td>');
                            tr.append('<td styleClass="psonNumber">' + verify(record.PSON_Number__c) + '</td>');                            
                        
                            // Hidden columns. These values are used to post an adjustment on a charge
                        
                            tr.append('<td styleClass="accountPOID">' + verifyPOID(record.Account_POID__c) + '</td>');
                            tr.append('<td styleClass="eventTypePOID">' + record.Event_POID_Type__c + '</td>');
                            tr.append('<td styleClass="eventPOID">' + verifyPOID(record.Event_POID__c) + '</td>');
                            tr.append('<td styleClass="itemPOID">' + verifyPOID(record.Item_POID__c) + '</td>');
                            tr.append('<td styleClass="billInfoPoid">' + verifyPOID(record.Billinfo_POID__c) + '</td>');
                            tr.append('<td styleClass="payType">' + record.PAY_TYPE__c + '</td>');
                            tr.append('<td styleClass="accountId">' + popupjQuery$('#billingHistId').attr("data-accountId") + '</td>');
                        
                            console.debug("accountId = " + popupjQuery$('#billingHistId').attr("data-accountId"));

                        }
                        if (result.getBoolean("done") || records.length == 0) {
                            queryMore = false;
                        } else {
                            result = sforce.connection.queryMore(result.queryLocator);
                        }
                    }
        
                } catch (ex) {
                    console.error('Error occurred: ', ex);
                    alert('An error occurred and it is likely a networking issue.  Please try again.  If the problem persists, please contact system admin.');
                } finally {
                    // always take down loading spinner
                    popupjQuery$('div .LoadingBillingHistoryListSpinner').hide();
                }
            }

            var moveLeft = 0;

            var moveDown = 0;
        
            console.debug('Init Data Table');

            // 8/18/15: add control logic for DataTables
    
            // Use moment.js for date time sorting.  
            // See moment.js documentation at http://momentjs.com/docs/#/displaying/ if we decide to change date time format
            popupjQuery$.fn.dataTable.moment( 'DD-MMM-YYYY hh:mm:ss A' );
    
            // modify jquery.dataTables.min.css for the layout: Filter to the left and Length to the right
            // columnDefs section defines all hidden fields
            // tableTools defines single row selection
            // order defines sorting order at startup
            // fnRowCallback, currently inactive, contains code for search match highlighting
            billingHistTable = popupjQuery$('[id$="billingHistId"]')
            .on( 'draw.dt', function () { ParentChildHierarchy();ToggleHierarchy();})  
            .DataTable({
            <!-- BTBS-4439 : Changes Starts Here -->
            <!-- BTBS-4439 : Removing select & single row selection properties of data table -->
            //    select: true,
               "pageLength": 100,
                "columnDefs": [
                    {
                        "targets": [ ACCOUNT_POID_COLUMN, EVENT_TYPE_COLUMN, EVENT_COLUMN, ITEM_POID_COLUMN, BILLINFO_POID_COLUMN, PAYMENT_TYPE_COLUMN, SFDC_ACCOUNT_COLUMN],
                        "visible": false,
                        "searchable": false
                    }
                ],
            /*    
                tableTools: {
                    "sRowSelect": "single"
                },
            */    
            <!-- BTBS-4439 : Changes Ends Here -->
                "order": [[ DATE_COLUMN, 'desc' ]]/*,
                "fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    var settings = this.fnSettings();
                    var str = settings.oPreviousSearch.sSearch;
                    if (str != "") {
                        var regex = new RegExp( str + "(?!([^<]+)?>)", 'i');
                        popupjQuery$('td', nRow).each( function(i) {
                            if (!!aData[i]) {
                                this.innerHTML = aData[i].replace( regex, function(matched) { return "<span class='filterMatches'>"+matched+"</span>";});
                            }
                        });
                        return nRow;
                    }
                }*/
               
            });
        
            // TODO: finish refresh icon
            // addRefreshButton();
            /***  disabled for now
            billingHistTable.on( 'select', function ( e, dt, type, indexes ) {
                console.debug('select type =' + type);
                console.debug('select index =' + indexes[0]);
                // Do we have good pson data?
                if ( type === 'row' ) {
                    // index 6 for PSON
                    var pson = billingHistTable.cells(indexes[0], PSON_NUMBER_COLUMN).data()[0];
                
                    popupjQuery$('[id$="billingHistId"]').find('tr.relatedMatches').removeClass('relatedMatches');
                
                    console.debug('pson =' + pson);
                    if (pson != null && pson != '') {
                        // look for related entry based on pson
                        billingHistTable.rows().every( function ( rowIdx, tableLoop, rowLoop ) {
                            var d = this.data();
                            var thisPson = billingHistTable.cells(this.index(), PSON_NUMBER_COLUMN).data()[0];
                            if (thisPson != null && thisPson == pson) {
                                console.debug('A match at index ' + this.index());
                                if (indexes[0] != this.index()) {
                                    this.nodes().to$().addClass('relatedMatches');
                                    // if the row is not visible, don't refresh (otherwise it'd jump back to page 1): invalidate, but not re-draw
                                    this.invalidate();
                                }
                            }  
                        });
                     
                    }
 
                }
            });
        
            ******/
            
            // turn on table display
            popupjQuery$('[id$="billingHistId"]').show();
            ParentChildHierarchy();
       
        }); // end of document.ready()

        function addRefreshButton() {
            // append refresh button to pagination control
            popupjQuery$('<button id="refresh" onclick="reloadTable();">Refresh</button>').insertAfter('div.dataTables_info');
        }
    
        var getFieldFromCurrentRow = function($this, fieldName) {

            <!-- BTBS-4439 : Changes Starts Here -->
            // clear all selections
           // popupjQuery$('[id$="billingHistId"]').find('tr.selected').removeClass('selected');

            // this is a <span> element, so we need to move up to tr
            var tr = $this.parent();
    
           // tr.addClass('selected');
            <!-- BTBS-4439 : Changes Ends Here -->
    
            var index;
    
            switch(fieldName) {
                case 'amountValue':
                    index = AMOUNT_COLUMN;
                    break;
                case 'billNumber':
                    index = BILL_NUMBER_COLUMN;
                    break;
                case 'psonNumber':
                    index = PSON_NUMBER_COLUMN;
                    break;
                case 'accountPOID':
                    index = ACCOUNT_POID_COLUMN;
                    break;
                case 'eventTypePOID':
                    index = EVENT_TYPE_COLUMN;
                    break;
                case 'eventPOID':
                    index = EVENT_COLUMN;
                    break;
                case 'itemPOID':
                    index = ITEM_POID_COLUMN;
                    break;
                case 'billInfoPoid':
                    index = BILLINFO_POID_COLUMN;
                    break;
                case 'payType':
                    index = PAYMENT_TYPE_COLUMN;
                    break;
                case 'accountId':
                    index = SFDC_ACCOUNT_COLUMN;
                    break;
                default:
                    index = -1;
            }
    
            if (index == -1)
                return null;
        
            <!-- BTBS-4439 : Changes Starts Here -->
           // var field = billingHistTable.cells('.selected', index).data()[0]; 
            var field = billingHistTable.cells(tr, index).data()[0]; 
            <!-- BTBS-4439 : Changes Ends Here -->

            console.debug(fieldName + ' =' + field);
               
            return field;            
        } 
    
        function reloadTable() {
            console.debug('In reloadTable()');
            billingHistTable.clear();
            reloadBillingHistory();
        
        }
               

        /*  
            This method displays an overlay screen.
        */
        function overlayDialogBox() {

            el = document.getElementById("overlayDialogBox");
          
            el.style.visibility = (el.style.visibility == "visible") ? "hidden" : "visible";

            el.style.opacity = 0.8;
            

        }

        
        /*  
            This method closes overlay screen.
        */
        function closeOverlayDialogBox() {

            el = document.getElementById("overlayDialogBox");

            el.style.visibility = "hidden";

           
        }
        
        
        /*  
            This method displays Make Adjustment Dialog box.
        */
        function showMakeAdustmentDialog() {
        
            closePopup();
            overlayDialogBox();
            
            clearMakeAdjustmentFormLabels();
            clearMakeAdjustmentValidationErrorLabels();
        
            document.getElementById("MALineItemLabel").innerHTML = makeAdjlineItem;
            document.getElementById("MALineItemValueLabel").innerHTML = makeAdjLineItemAmount;
            document.getElementById("MASalesTaxValueLabel").innerHTML = makeAdjSalesTaxAmount;
            document.getElementById("MATotalValueLabel").innerHTML = makeAdjustmentTotalAmount;
            
            mainContainer = document.getElementById("AdjustmentDialogMainContainer");

            mainContainer.style.display = "inline-block";
            
            var tempAmountInput = document.getElementById('adjustmentAmountValue');
            tempAmountInput.onchange = function(){validateAdjustmentForm();};
        }
        
        
        /*  
            This method closes Make Adjustment Dialog box.
        */
        function closeMakeAdjustmentDialog() {
            
            closeOverlayDialogBox();
            mainContainer = document.getElementById("AdjustmentDialogMainContainer");
            mainContainer.style.display = "none";

        }
        
        /*  
            This method resets all rows displayed in tables within popups..
        */
        function clearPopupTableRows(tableId) {
            var table = document.getElementById(tableId);
            
            while(table.rows.length > 1) {
                table.deleteRow(1);
            }
        }
        
        /*  
            This method closes popups.
        */
        function closePopup() {
            popupjQuery$('.popbox').hide();
        }

 
        function reloadPage() {
        
            overlayDialogBox();
            popupjQuery$('#LoadingSpinnerOverlay').css("display", "block");
            location.reload();
            
        }
        
         /*  
            This function handles web call to BRM adjustment service to post an adjsutment on a charge.
        */
        function submitAdjustment() {
        
        //Clear validation error labels
        clearMakeAdjustmentValidationErrorLabels();
        
         
            try {
                
                
                var formValidated = validateAdjustmentForm();
                if(!formValidated)
                    return;
                
                popupjQuery$('.LoadingSpinner').css("display", "block");
                
                sforce.connection.sessionId = "{!$Api.Session_ID}"; 
                
                var billNumber_value = document.getElementById("chargeBillNumberLabel").innerHTML 
                
                var adjustmentReason = document.getElementById("adjustmentReasonDropdown").value;

                var adjustmentAmount = document.getElementById("adjustmentAmountValue").value;

                var includeTax = document.getElementById("includeTaxCheckbox").checked;
                
                var agentNotes = document.getElementById("agentNotes").value;
               
                console.log('billNumber:' + billNumber_value + 'eventPOID:'+ eventPOID_value + 'accountPOID: '+ accountPOID_value + 'eventTypePOID: '+eventTypePOID_value + 'adjustmentReason: ' + adjustmentReason + 'adjustmentAmount: '+ adjustmentAmount + 'includeTax: '+includeTax + 'Agent Notes: '+agentNotes + 'Account Id'+accountId);

                
                result = sforce.apex.execute('BillingServiceFacade','submitAdjustment',

                {billNumber: billNumber_value,
                
                 eventTypePOID: eventTypePOID_value,

                 eventPOID: eventPOID_value,

                 accountPOID: accountPOID_value,
                 
                 adjustmentReason: adjustmentReason,
                 
                 adjustmentAmount: adjustmentAmount,
                 
                 includeTax: includeTax,
                 
                 agentNotes: agentNotes,
                 
                 accountId: accountId

                 });

                popupjQuery$('.LoadingSpinner').css("display", "none");
                
                alert(result);
                closeMakeAdjustmentDialog();
                reloadPage();
            }

            catch(e) {

                alert(e);
                closeMakeAdjustmentDialog();
                console.log(e);

            }
    
        }
        
        /*This function validates the MakeAdjustment form which appears when the user clicks on
           Make Adjustment button on Charge details popup. */
        
        function validateAdjustmentForm() {
            var totalChargeAmount = parseFloat(makeAdjustmentTotalAmount);
            totalChargeAmount = totalChargeAmount.toFixed(2);
            
            var adjAmount = document.getElementById("adjustmentAmountValue").value;
            
            
            // Regex to accept floating point numberes with 2 decimal point precision.
            var floatRegex = /^\d+\.?[0-9]{0,2}?$/;
            
            if(!floatRegex.test(adjAmount)){
                document.getElementById("valErrorAdjustmentAmount").innerHTML = "Invalid Amount";
                document.getElementById("adjustmentAmountValue").style.border = "solid red";
                
                return false;
            }
            
           
            if(parseFloat(adjAmount) > totalChargeAmount || parseFloat(adjAmount) <= 0) {
                
                document.getElementById("valErrorAdjustmentAmount").innerHTML = "Error: Must be between $0.01 and $"+totalChargeAmount;
                document.getElementById("adjustmentAmountValue").style.border = "solid red";
                
                return false;
            }
            else{
                clearMakeAdjustmentValidationErrorLabels();
                document.getElementById("adjustmentAmountTotalValue").innerHTML = "$" + document.getElementById("adjustmentAmountValue").value;
            }
            return true;
        }
        
        
        /*This function clears/resets all validation error labels and properties on the Make Adjustment dialog form
          and is invoked prior to loading the dialog form and before the user submits the adjustment*/
          
        function clearMakeAdjustmentValidationErrorLabels() {
            document.getElementById("valErrorAdjustmentAmount").innerHTML = " ";
            document.getElementById("adjustmentAmountValue").style.removeProperty('border');
            
            
            
        }
        
        /*This function clears/resets all labels on the Make Adjustment dialog form
          and is invoked prior to loading the dialog form.*/
          
        function clearMakeAdjustmentFormLabels() {
            //Clear Charge Container labels
            document.getElementById("MALineItemLabel").innerHTML = " ";
            document.getElementById("MALineItemValueLabel").innerHTML = " ";
            document.getElementById("MASalesTaxValueLabel").innerHTML = " ";
            document.getElementById("MATotalValueLabel").innerHTML = " ";
            
            document.getElementById("adjustmentAmountValue").value = "";
            document.getElementById("adjustmentAmountTotalValue").innerHTML = "$0.00";
        }

         /*  
            Event initialization to load popups.
        */
        popupjQuery$(document).on("click", '.popper', function (e) {
        
             var popupDisplayOffset = {

                left: e.pageX + 50,

                top: e.pageY - 75

            };
           
            closePopup();
           
            
            if(popupjQuery$(this).html()== "Refund") {


                popupjQuery$(this).attr("data-popbox", "RefundDetailsPopup");
                
                itemPOID_value = getFieldFromCurrentRow(popupjQuery$(this), 'itemPOID').replace(/,/g,'');
                var billNumber = getFieldFromCurrentRow(popupjQuery$(this), 'billNumber');  
                var amountValue = getFieldFromCurrentRow(popupjQuery$(this), 'amountValue');
                
                var target = '#' + (popupjQuery$(this).attr('data-popbox'));
                popupjQuery$(target).show().offset(popupDisplayOffset);
                popupjQuery$('.LoadingSpinner').css("display", "inline");
                
                clearPopupTableRows("refundPopupTable");
                <!-- BTBS: 3522 Refreshing inner popup data before loading -->
                document.getElementById("Refund_Total_Label").innerHTML = " ";
                document.getElementById("Refund_Status_Label").innerHTML = " ";
                document.getElementById("Refund_Details_Header_Label").innerHTML = " ";

                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.BillingPopupController.getRefundDetails}',

                itemPOID_value,

                function(result,event) {

                if(event.status) {

                if(result != null) {
                    popupjQuery$('.LoadingSpinner').css("display", "none");
                 
                    var row;
                    var cell;
                    var resultListSize = result.length;
                    var table = document.getElementById("refundPopupTable");
                    
                    if(result[0] != null && result[0].STATUS__c != null && result[0].STATUS__c == 'Allocated'){
                        document.getElementById('Refund_Status_Label').style = "color: green";
                    }
                    if(result[0] != null && result[0].STATUS__c != null && result[0].STATUS__c == 'Open'){
                        document.getElementById('Refund_Status_Label').style = "color: red";
                    }
                        
                        for(i=1; i<=resultListSize; i++) {
                            row = table.insertRow(i);
                            cell = row.insertCell(0);
                            if(result[i-1] != null) {
                            
                                if(result[i-1].ALLOCATION_DATE_PACIFIC__c != null)
                                    cell.innerHTML = result[i-1].ALLOCATION_DATE_PACIFIC__c;
                                cell = row.insertCell(1);
                                
                                if(result[i-1].ALLOCATION_AMT__c != null)
                                    cell.innerHTML = result[i-1].ALLOCATION_AMT__c;
                                    
                                cell = row.insertCell(2);
                                
                                if(result[i-1].BILL_ITEM_NO__c != null)
                                    cell.innerHTML = result[i-1].BILL_ITEM_NO__c;
                                
                                cell = row.insertCell(3);
                                
                                if(result[i-1].ITEM_DESCRIPTION__c != null)
                                    cell.innerHTML = result[i-1].ITEM_DESCRIPTION__c;
                                    
                                
                            }
                            row.style.background= "white";
                        }
                        
                         document.getElementById("Refund_Total_Label").innerHTML = amountValue;
                         
                         if(result[0] != null) {
                             if(result[0].STATUS__c != null)
                                 document.getElementById("Refund_Status_Label").innerHTML = result[0].STATUS__c;
                             
                             if(result[0].AR_ITEM_NO__c != null)
                                 document.getElementById("Refund_Details_Header_Label").innerHTML = result[0].AR_ITEM_NO__c;
                         }
                         

                }
                else if(result == null) {
                    alert("Could not retrieve data. Please try again later.");
                }
                }
                    else if (event.type === 'exception') {

                                alert("Could not retrieve data. Please try again later.");
 
                            } else {

                                alert("Could not retrieve data. Please try again later.");

                          
                            }

                        },

                        {escape: true}

                    );

                }

            else if(popupjQuery$(this).html()== "Adjustment") {


                popupjQuery$(this).attr("data-popbox", "AdjustmentDetailsPopup");
                itemPOID_value = getFieldFromCurrentRow(popupjQuery$(this), 'itemPOID').replace(/,/g,'');
                var billNumber = getFieldFromCurrentRow(popupjQuery$(this), 'billNumber');      
                var amountValue = getFieldFromCurrentRow(popupjQuery$(this), 'amountValue');
                var target = '#' + (popupjQuery$(this).attr('data-popbox'));
                popupjQuery$(target).show().offset(popupDisplayOffset);
                popupjQuery$('.LoadingSpinner').css("display", "inline");
                
                clearPopupTableRows("adjustmentPopupTable");
                <!-- BTBS: 3522 Refreshing inner popup data before loading -->
                document.getElementById("Adjustment_Total_Label").innerHTML = " ";
                document.getElementById("Adjustment_Status_Label").innerHTML = " ";
                
                

                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.BillingPopupController.getAdjustmentDetails}',

                itemPOID_value,

                function(result,event) {

                if(event.status) {

                if(result != null) {
                    popupjQuery$('.LoadingSpinner').css("display", "none");
                 
                    var row;
                    var cell;
                    var resultListSize = result.length;
                    var table = document.getElementById("adjustmentPopupTable");
                    
                    if(result[0] != null) {
                    
                        if(result[0].STATUS__c != null && result[0].STATUS__c == 'Allocated'){
                            document.getElementById('Adjustment_Status_Label').style = "color: green";
                        }
                        if(result[0].STATUS__c != null && result[0].STATUS__c == 'Open'){
                            document.getElementById('Adjustment_Status_Label').style = "color: red";
                        }
                    }
                    
                        for(i=1; i<=resultListSize;i++) {
                            row = table.insertRow(i);
                            cell = row.insertCell(0);
                            
                            if(result[i-1] != null) {
                                if(result[i-1].ALLOCATION_DATE_PACIFIC__c != null)
                                    cell.innerHTML = result[i-1].ALLOCATION_DATE_PACIFIC__c;
                                cell = row.insertCell(1);
                                if(result[i-1].ALLOCATION_AMT__c != null)
                                    cell.innerHTML = result[i-1].ALLOCATION_AMT__c;
                                cell = row.insertCell(2);
                                if(result[i-1].BILL_ITEM_NO__c != null)
                                    cell.innerHTML = result[i-1].BILL_ITEM_NO__c;
                                
                                cell = row.insertCell(3);
                                if(result[i-1].ITEM_DESCRIPTION__c != null)
                                    cell.innerHTML = result[i-1].ITEM_DESCRIPTION__c;
                                
                            }
                            row.style.background= "white";
                        }
                        
                         document.getElementById("Adjustment_Total_Label").innerHTML = amountValue;
                         if(result[0] != null && result[0].STATUS__c != null)
                             document.getElementById("Adjustment_Status_Label").innerHTML = result[0].STATUS__c;
                         

                }
                else if(result == null) {
                    alert("Could not retrieve data. Please try again later.");
                }
                }
                    else if (event.type === 'exception') {

                                alert("Could not retrieve data. Please try again later.");

                                
                            } else {

                                alert("Could not retrieve data. Please try again later.");

                                
                            }

                        },

                        {escape: true}

                    );
            }

            else if(popupjQuery$(this).html()== "Charge") {

                accountPOID_value = getFieldFromCurrentRow(popupjQuery$(this), 'accountPOID');

                eventTypePOID_value = getFieldFromCurrentRow(popupjQuery$(this), 'eventTypePOID');
    
                eventPOID_value = getFieldFromCurrentRow(popupjQuery$(this), 'eventPOID');
    
                itemPOID_value = getFieldFromCurrentRow(popupjQuery$(this), 'itemPOID');
    
                billNumber = getFieldFromCurrentRow(popupjQuery$(this), 'billNumber');
                
                accountId = getFieldFromCurrentRow(popupjQuery$(this), 'accountId');
                
                var psonNumber = getFieldFromCurrentRow(popupjQuery$(this), 'psonNumber');
                
                var amountValue = getFieldFromCurrentRow(popupjQuery$(this), 'amountValue');

                popupjQuery$(this).attr("data-popbox", "ChargeDetailsPopup");
                var target = '#' + (popupjQuery$(this).attr('data-popbox'));
                popupjQuery$(target).show().offset(popupDisplayOffset);
                
                popupjQuery$('.LoadingSpinner').css("display", "inline");
                
                //BTBS: 3204: Show/Hide 'Make Adjustment' button in charge popup based on user permission.
                var makeAdjustmentPermission = '{!makeAdjustmentPermission}';
                if(makeAdjustmentPermission == 'true') {
                     popupjQuery$('#MakeAdjustmentButton').css("visibility", "visible");
                }
                
                
                <!-- BTBS: 3522 Refreshing inner popup data before loading -->
                document.getElementById("chargeBillNumberLabel").innerHTML = " ";
                document.getElementById("chargePurchaseOrderLabel").innerHTML = " ";
                
                     
                document.getElementById("chargeLineItemLabel").innerHTML = " ";
                
                
                document.getElementById("chargeLineItemAmountLabel").innerHTML = " ";
                document.getElementById("chargeSalesTaxAmountLabel").innerHTML = " ";
                document.getElementById("chargeTotalAmountLabel").innerHTML = " ";
                
                
                <!--Refresh Global Variables used to Make Adjustment to a charge-->
                makeAdjlineItem = '';
                makeAdjLineItemAmount = '0.00';
                makeAdjSalesTaxAmount = '0.00';
                makeAdjustmentTotalAmount = '0.00';

                /*  
                    Remote Action to load detials into Charge popup.
                */
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.BillingPopupController.getChargeDetails}',

                itemPOID_value,

                function(result,event) {

                if(event.status) {

                  if(result != null) {   
                     var lineItemAmount = "n/a";
                     if (result[0] != null && result[0].AMOUNT__c != null) {
                         lineItemAmount = parseFloat(result[0].AMOUNT__c).toFixed(2);
                         
                     }
                     var salesTaxAmount = "n/a";
                     if (result[1] != null && result[1].AMOUNT__c != null) {
                         salesTaxAmount = parseFloat(result[1].AMOUNT__c).toFixed(2);
                         
                     }
                     popupjQuery$('.LoadingSpinner').css("display", "none");
                    
                    
                     document.getElementById("chargeBillNumberLabel").innerHTML = billNumber;
                     document.getElementById("chargePurchaseOrderLabel").innerHTML = psonNumber;
                     
                     
                     if(result[0] != null && result[0].ITEM_DESCRIPTION__c != null) {
                         document.getElementById("chargeLineItemLabel").innerHTML = result[0].ITEM_DESCRIPTION__c;
                         makeAdjlineItem = result[0].ITEM_DESCRIPTION__c;
                     }
                         
                     document.getElementById("chargeSalesTaxLabel").innerHTML = "Sales Tax:";
                     document.getElementById("chargeTotalLabel").innerHTML = "Total:";
                     
                     document.getElementById("chargeLineItemAmountLabel").innerHTML = lineItemAmount;
                     document.getElementById("chargeSalesTaxAmountLabel").innerHTML = salesTaxAmount;
                     document.getElementById("chargeTotalAmountLabel").innerHTML = amountValue;
                     
                     makeAdjLineItemAmount = lineItemAmount;
                     makeAdjSalesTaxAmount = salesTaxAmount;
                     makeAdjustmentTotalAmount = amountValue.replace(/[a-zA-Z ]/g, "");
                         

                    }
                    else if(result == null) {
                        alert("Could not retrieve data. Please try again later.");
                    }
                }
                    else if (event.type === 'exception') {
     
                                alert("Could not retrieve data. Please try again later.");

                            } else {

                                alert("Could not retrieve data. Please try again later.");


                            }

                        },

                        {escape: true}

                    );

            }

            else {
                
                var payType = getFieldFromCurrentRow(popupjQuery$(this), 'payType');
                billInfoPoid = parseInt(getFieldFromCurrentRow(popupjQuery$(this), 'billInfoPoid').replace(/,/g,''));
                //console.debug("billInfoPoid:"+billInfoPoid);
                popupjQuery$(this).attr("data-popbox", "PaymentMethodDetailsPopup");
                var target = '#' + (popupjQuery$(this).attr('data-popbox'));
                popupjQuery$(target).show().offset(popupDisplayOffset);
                
                
                popupjQuery$('.LoadingSpinner').css("display", "inline");
                
                <!-- BTBS: 3522 Refreshing inner popup data before loading -->
                document.getElementById("paymentPopupLabel1").innerHTML = " ";
                document.getElementById("paymentPopupLabel2").innerHTML = " ";
                document.getElementById("paymentPopupLabel3").innerHTML = " ";
                document.getElementById("paymentPopupLabel4").innerHTML = " ";
                document.getElementById("paymentPopupLabel5").innerHTML = " ";
                document.getElementById("paymentPopupLabel6").innerHTML = " ";
                
                document.getElementById("paymentPopupLabelValue1").innerHTML = " ";
                document.getElementById("paymentPopupLabelValue2").innerHTML = " ";
                document.getElementById("paymentPopupLabelValue3").innerHTML = " ";
                document.getElementById("paymentPopupLabelValue4").innerHTML = " ";
                document.getElementById("paymentPopupLabelValue5").innerHTML = " ";
                document.getElementById("paymentPopupLabelValue6").innerHTML = " ";
                

                
                /*  
                    Remote Action to load detials into Billling Profile popup.
                */
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.BillingPopupController.getPaymentDetails}',

                billInfoPoid,

                function(result,event) {

                if(event.status) {
                
                    if(result != null) {
       
                     popupjQuery$('.LoadingSpinner').css("display", "none");
                     
                     <!-- 09/08 Added trailing ':' to each of the below labels.-->
                     document.getElementById("paymentPopupLabel1").innerHTML = "Billing Profile:";
                     if(result[0] != null && result[0].BP_NAME__c != null)
                         document.getElementById("paymentPopupLabelValue1").innerHTML = '<a href="#Foo" onclick="profileLinkClick(' + billInfoPoid + '); return false;">' + result[0].BP_NAME__c + '</a>';
                        
                     
                     if(payType.indexOf('cc') > -1) {
                     
                         // credit card
                         
                         if(result[0] != null) {
                           
                             document.getElementById("paymentPopupLabel2").innerHTML = "Billing Day of Month:";
                             if(result[0].BDOM__c != null)
                                 document.getElementById("paymentPopupLabelValue2").innerHTML = result[0].BDOM__c;
                             
                             document.getElementById("paymentPopupLabel3").innerHTML = "Name On Credit Card:";
                             if(result[0].NAME_ON_CC__c !=null)
                                 document.getElementById("paymentPopupLabelValue3").innerHTML = result[0].NAME_ON_CC__c;
                             
                             document.getElementById("paymentPopupLabel4").innerHTML = "Credit Card Number:";
                             if(result[0].EFT_CC_NUMBER__c != null)
                                 document.getElementById("paymentPopupLabelValue4").innerHTML = result[0].EFT_CC_NUMBER__c;
                          
                             document.getElementById("paymentPopupLabel5").innerHTML = "Card Type:";
                             if(result[0].CC_TYPE__c !=null)
                                 document.getElementById("paymentPopupLabelValue5").innerHTML = result[0].CC_TYPE__c;
                             
                             document.getElementById("paymentPopupLabel6").innerHTML = "Expiration Year:";
                             if(result[0].CC_EXPIRATION_YEAR__c != null)
                                 document.getElementById("paymentPopupLabelValue6").innerHTML = result[0].CC_EXPIRATION_YEAR__c;
                             }
                     }
                     else if(payType.indexOf('dd') > -1){
                     
                         // EFT
                         document.getElementById("paymentPopupLabel6").innerHTML = " ";
                         document.getElementById("paymentPopupLabelValue6").innerHTML = " ";
                         
                         if(result[0] != null) {
                         
                             document.getElementById("paymentPopupLabel2").innerHTML = "Contact Name:";
                             if(result[0].BP_CONTACT_NAME__c != null)
                                 document.getElementById("paymentPopupLabelValue2").innerHTML = result[0].BP_CONTACT_NAME__c;
                             
                             document.getElementById("paymentPopupLabel3").innerHTML = "Bank Account:";
                             if(result[0].BP_BANK_ACCOUNT_NAME__c != null)
                                 document.getElementById("paymentPopupLabelValue3").innerHTML = result[0].BP_BANK_ACCOUNT_NAME__c;
                             
                             
                             document.getElementById("paymentPopupLabel4").innerHTML = "Date:";
                             if(result[0].BP_LAST_UPDATED_DATE__c != null)
                                 document.getElementById("paymentPopupLabelValue4").innerHTML = new Date(result[0].BP_LAST_UPDATED_DATE__c);
                             
                             document.getElementById("paymentPopupLabel5").innerHTML = "Status:";
                             if(result[0].BP_STATUS__c !=nul)
                                 document.getElementById("paymentPopupLabelValue5").innerHTML = result[0].BP_STATUS__c;
                         }
                         
                        
                     }
                     else if(payType.indexOf('invoice') > -1) {
                     
                         // Net Term
                         document.getElementById("paymentPopupLabel5").innerHTML = " ";
                         document.getElementById("paymentPopupLabelValue5").innerHTML = " ";
                         
                         document.getElementById("paymentPopupLabel6").innerHTML = " ";
                         document.getElementById("paymentPopupLabelValue6").innerHTML = " ";
                         
                         
                         if(result[0] != null) {
                         
                             document.getElementById("paymentPopupLabel2").innerHTML = "Contact Name:";
                             if(result[0].BP_CONTACT_NAME__c != null)
                                 document.getElementById("paymentPopupLabelValue2").innerHTML = result[0].BP_CONTACT_NAME__c;
                                                      
                             // TODO: display format
                             document.getElementById("paymentPopupLabel3").innerHTML = "Date:";
                             if(result[0].BP_LAST_UPDATED_DATE__c != null)
                                 document.getElementById("paymentPopupLabelValue3").innerHTML = new Date(result[0].BP_LAST_UPDATED_DATE__c);
                             
                             document.getElementById("paymentPopupLabel4").innerHTML = "Status:";
                             if(result[0].BP_STATUS__c != null)
                                 document.getElementById("paymentPopupLabelValue4").innerHTML = result[0].BP_STATUS__c;
                         }
                         
                         
                     }
              
                }
                else if(result == null) {
                    alert("Could not retrieve data. Please try again later.");
                }
            }
                    else if (event.type === 'exception') {

                                alert("Could not retrieve data. Please try again later.");

                            } else {

                                alert("Could not retrieve data. Please try again later.");
      

                            }

                        },

                        {escape: true}

                    );
            }

            popupjQuery$('.popbox').mouseover(function (e) {

            popupjQuery$(target).stop().focus();

            });
        }

        );

           
        document.addEventListener('keyup', function (event) {

                if ( event.keyCode == 27 )   {

                el = document.getElementById("overlayDialogBox");

                el.style.visibility = "hidden";

                mainContainer = document.getElementById("AdjustmentDialogMainContainer");

                mainContainer.style.display = "none";

            }

        });
        
        
        //Start - SA-632 : Give agents the ability to view billing hierarchy on the billing profile table - Changes done by Avinash
        
        function toggleRows() 
        {
            var billId = popupjQuery$(this).text().split(',')[0];
            popupjQuery$('.'+billId+'_child').toggle(10, function()
            {
               console.log('The toggle() method is finished!');                                                             
            });
        }
        function ToggleHierarchy()
        {
            popupjQuery$('.billNumber').unbind('click',toggleRows);
            popupjQuery$('.billNumber').bind('click',toggleRows);           
        }
        
        
         function ParentChildHierarchy()
         {
                               
             var idArr = [];
             popupjQuery$('td.billNumber').each(function()
             {
                              var billId = popupjQuery$(this).text();                                        
                              if(billId.indexOf(',') != -1)
                              {                                    
                                 console.log('test');            
                                   if(typeof idArr[billId.split(',')[0]] == 'undefined') 
                                   {            
                                       console.log('test1');                                               
                                       idArr[billId.split(',')[0]] = billId.split(',')[1];
                                   }
                                   else if(billId.split(',')[1] > idArr[billId.split(',')[0]]) 
                                   { 
                                       console.log('test2');                                                           
                                       idArr[billId.split(',')[0]] = billId.split(',')[1];
                                   }
                                            
                             }
             });
 
             var toGroupArr = [];
             for(var key in idArr)
             {
                  if(idArr[key] > 1)
                     toGroupArr[key] = idArr[key];
             }                        
 
 
             for(var key in toGroupArr)
             {
                 var currentParent = popupjQuery$('td.billNumber:contains("'+key+','+toGroupArr[key]+'")').parent();
                 currentParent.addClass(key+'_parent');
                 currentParent.addClass('parentTr');                                       
                 for(i = 0; i < toGroupArr[key]; i++)
                 {
                  console.log('test');
                   var currentTr = popupjQuery$('td.billNumber:contains("'+key+','+i+'")').parent();  
                   currentTr.insertAfter(currentParent);
                   currentTr.addClass('childTr');
                   currentTr.addClass(key+'_child');
                 }
             }
             popupjQuery$('.childTr').hide();                        
                        
                        
        }
        //End - SA-632 : Give agents the ability to view billing hierarchy on the billing profile table
        
        </script>
        
        
 <!-- ************************************ Overlay **********************************************-->
 
     <div id="overlayDialogBox">
     
     <div id="LoadingSpinnerOverlay" class="LoadingSpinner" style="height:100%; width:100%; background-color: #D6D6D2; opacity:0.8; position:absolute; display:none; text-align: center;">
            
                
                <img src="{!$Resource.SFDC_Loading}"/>
                <p style="font-size: large;">Loading...</p>
           
            </div>
     
     </div>
     
 <!-- *************************************************    ***************************************************-->
 
 <!-- ***********************************  Refund Details Popup *********************************************-->

        

        <div id="RefundDetailsPopup" class="popbox"   style="z-index:998; width:600px;">

            <div class="popup-top-border"></div>
            <div> 
                <a href="javascript:void(0)" class="popboxCloseButton" onclick='closePopup()'></a>
            </div>
            
            <div class="LoadingSpinner" style="height:100%; width:100%; background-color: #D6D6D2; opacity:0.8; position:absolute; display:none; text-align: center;">
            
                
                <img src="{!$Resource.SFDC_Loading}"/>
                <p>Loading...</p>
           
            </div>
                <div style="display: inline-block; width: 100%; margin-left: 25px;">
        
                   <div class="popupHeader">Refund Details <label id = "Refund_Details_Header_Label"></label></div><br /><br />
        
                    
        
                        <div>
        
                          
        
                            <table style="width:90%" class ="innerPopupTable" id="refundPopupTable">
                            
                                <tr>
        
                                    <th>Date</th>
        
                                    <th>Amount</th>     
        
                                    <th>Applied To</th>
        
                                    <th>Line item</th>
        
                                    
        
                                </tr>
        
        
                            </table>
        
                        </div>
        
                        <br /><br />
        
                        <hr style="margin-left: 0px;  width: 80%;"></hr>
        
                        <div id="RefundPopupBlock1">
        
                            <div style="display: inline;">
        
                                <label style="font-weight: bold;">Total Refund: </label>
        
                                <label id = "Refund_Total_Label" style="font-weight: bold;"></label><br /><br />
        
                            </div>
        
                            <div style="display: inline;">
        
                                <label style="font-weight: bold;">Refund Status: </label>
        
                                <label id = "Refund_Status_Label" style="font-weight: bold;"></label><br /><br />
        
                            </div>
        
        
                        </div>
        
                       
        
                        <br /><br />
        
                    
        
                </div>
           

        </div>

       
        <!-- ***********************************  *********************************************-->
        
        <!-- ***********************************  Adjustment Details Popup *********************************************-->

        

        <div id="AdjustmentDetailsPopup" class="popbox"  style="z-index:998; width:600px;">

            <div class="popup-top-border"></div>

            <div> 
                <a href="javascript:void(0)" class="popboxCloseButton" onclick='closePopup()'></a>
            </div>
            
             <div class="LoadingSpinner" style="height:100%; width:100%; background-color: #D6D6D2; opacity:0.8; position:absolute; display:none; text-align: center;">
            
                
                <img src="{!$Resource.SFDC_Loading}"/>
                <p>Loading...</p>
           
            </div>
            
            <div style="display: inline-block; width: 100%; margin-left: 25px;">

               <div class="popupHeader">Adjustment Details</div><br /><br />

                    <div>

                        <table style="width:90%" class="innerPopupTable" id="adjustmentPopupTable">

                            <tr>

                                <th>Date</th>

                                <th>Amount</th>     

                                <th>Applied To</th>

                                <th>Line item</th>


                            </tr>
           

                        </table>

                    </div>

                    <br /><br />

                    <hr style="margin-left: 0px;  width: 80%;"></hr>

                    <div id="AdjustmentPopupBlock1">
        
                            <div style="display: inline;">
        
                                <label style="font-weight: bold;">Total: </label>
        
                                <label id = "Adjustment_Total_Label" style="font-weight: bold;"></label><br /><br />
        
                            </div>
        
                            <div style="display: inline;">
        
                                <label style="font-weight: bold;">Status: </label>
        
                                <label id = "Adjustment_Status_Label" style="font-weight: bold;"></label><br /><br />
        
                            </div>
        
        
                        </div>
                    

                    <br /><br />

                

            </div>

        </div>

        

        <!-- ***********************************  *********************************************-->
     

        <!-- ***********************************  Charge Details Popup *********************************************-->

        

        <div id="ChargeDetailsPopup" class="popbox"  style="z-index:998;">

            <div class="popup-top-border"></div>
            
            <div> 
                <a href="javascript:void(0)" class="popboxCloseButton" onclick='closePopup()'></a>
            </div>
            
            <div class="LoadingSpinner" style="height:100%; width:100%; background-color: #D6D6D2; opacity:0.8; position:absolute; display:none; text-align: center;">
            
                <img src="{!$Resource.SFDC_Loading}"/>
                <p>Loading...</p>
           
            </div>

            <div style="display: inline-block; width: 100%; margin-left: 25px;">

               <div class="popupHeader">Charge Details</div><br /><br />

                  
                  <div style="text-align:left;">

                        <label style="font-weight: bold;">Bill #: </label><label id = "chargeBillNumberLabel"></label><br /><br />
                        
                        <label style="font-weight: bold;">Purchase Order: </label><label id = "chargePurchaseOrderLabel"></label><br /><br />


                  </div>

                    <!-- 09/08 Changed font size and weight-->
                    <p><label style="font-weight: bold; font-size:small;">Charge Breakdown:</label></p>

                    <hr style="margin-left: 0px;  width: 90%;"></hr>

                   
                    <div style="display:inline-block;">
                        <div style="text-align: right;float: left; display: block; margin: 20px;">
        
                            
                            <label id = "chargeLineItemLabel"></label><br /><br />
                            <label id = "chargeSalesTaxLabel"></label><br /><br />
                            <!-- 09/08 Changed font size and weight-->
                            <label style="font-weight: bold; font-size:small;" id = "chargeTotalLabel"></label>
        
                           
                        </div>
                            
                        <div style="text-align: right; float: right; display: block; margin:20px; padding-left:20px;">
                            
                            <label id = "chargeLineItemAmountLabel"></label><br /><br />
                            <label id = "chargeSalesTaxAmountLabel"></label><br /><br />
                            
                            <!-- 09/08 Changed font size and weight-->
                            <label style="font-weight: bold; font-size:small;" id = "chargeTotalAmountLabel"></label><br /><br />
                        </div>
                    </div>
                

                    <!--<hr style="margin-left: 0px;  width: 80%;"></hr> -->

                    <div id="RefundPopupBlock2" style="text-align:right; clear: top; margin-right:50px;">

                       
                    
                        <!-- 10/13 Activating adjustment service window.-->
                        <button id="MakeAdjustmentButton" onClick="showMakeAdustmentDialog()">Make Adjustment</button>
                        
                        <!--<button id="MakeAdjustmentButton">Make Adjustment</button>-->

                    </div>

                

            </div>

        </div>

        

        <!-- ***********************************  *********************************************-->

        

         <!-- ***********************************  Make Adjustment Modal Dialog box(In Progress!!) *********************************************-->

        
   
        <div id="AdjustmentDialogMainContainer">
                
            <div class="popup-top-border"></div>
            
            <div class="LoadingSpinner" style="width:100%; height:100%; background-color: #D6D6D2; z-index:2000; position: absolute; opacity:0.8; display:none; text-align: center;">
               
                <img src="{!$Resource.SFDC_Loading}"/>
                <p style="font-size: large; font-weight: bold;">Processing...</p>
                
            </div>
               
                <div id="ChargeContainer" style="z-index:300;">

                    <div style = "float: left;">

                        <p style="font-size: large; margin-left: 10px; line-height: 75px; padding-bottom:30px;"> Make Adjustment </p>

                    </div>
            

                    <div style = "float: right;">
                    
                        <table style="line-height: 25px;">
                            <tr>
                                <td style="text-align: right; padding-right: 15px;"><label id = "MALineItemLabel"></label></td>
                                <td style="text-align: right;"><label id = "MALineItemValueLabel"></label></td>
                            </tr>
                            
                            <tr>
                                <td style="text-align: right; padding-right: 15px;"><label id = "MASalesTaxLabel">Sales Tax</label></td>
                                <td style="text-align: right;"><label id = "MASalesTaxValueLabel"></label></td>
                            </tr>
                            
                            <tr>
                                <td style="text-align: right; padding-right: 15px;"><label id = "MATotalLabel">Total</label></td>
                                <td style="text-align: right;"><label id = "MATotalValueLabel"></label></td>
                            </tr>
                            
                        </table>
                            
                    </div>
                    
                </div>

                <br /><br />
                
                

                <div id="AdjustmentDetails">

                     <apex:form id="AdjustmentDetailsDialogForm">
                 
                        <table style="width: 100%; margin: auto; display:block;">
                            
                            <tr>
                                <td style="text-align: right;"><label for="AR">Adjustment Reason</label></td>
                                <td style="text-align: left; padding-left:15px;">
                                    <select id ="adjustmentReasonDropdown">
                             
                                         <option value="Pricing Adjustment">Pricing Adjustment</option>
                                         <option value="Return Reserve">Return Reserve</option>
        
                                    </select>
                                </td>
                                
                            </tr>
                            
                            <tr>
                                <td style="text-align: right;"><label for="">Adjustment Amount</label></td>
                                <td style="text-align: left; padding-left:15px;"><input id="adjustmentAmountValue" type="text" placeholder="0.00" name="Adjustment Amount" value="" style = "height:15px; margin-bottom:7px;"></input></td>
                                
                            </tr>
                            
                            <tr>
                                <td style="text-align: right;"></td>
                                <td style="text-align: left; padding-left:15px;"><span style="color:red;"><label id="valErrorAdjustmentAmount"></label></span></td>
                            </tr>
                            
                            <tr>
                                <td style="text-align: right;"><label for="">Include Tax</label></td>
                                <td style="text-align: left; padding-left:15px;"><input id="includeTaxCheckbox" type="checkbox" name="Include Tax" value="Include Tax" style = "margin-bottom:10px;"></input></td>   
                                                           
                            </tr>
                            
                            <tr>
                                <td style="text-align: right;"><label for="">Adjustment Total</label></td>
                                <td style="text-align: left; padding-left:15px; margin-bottom:10px;"><span style="font-weight:bold;"><label id="adjustmentAmountTotalValue">$0.00</label></span></td>
                                
                            </tr>
                            
                            
                            <!-- Agent Notes Box.-->
                            <tr>
                                <td style="text-align: right;"><label for="">Agent Notes (Optional)</label></td>
                                <td style="text-align: left; padding-left:15px;"><textarea id="agentNotes" rows="4" cols="30"></textarea></td>
                                    
                            </tr>
                           
                            
                        </table>
                          
                            
                          
                        
                         
                         <div style = "clear: both; margin: 10%;">

                            
                            
                            <button id="MakeAdjustmentSubmitButton" type = "button" onClick="submitAdjustment()">Make Adjustment</button>

                            <button id="CancelAdjustmentButton" type = "reset" onClick="closeMakeAdjustmentDialog()">Cancel</button>

                         </div>

                     

                     </apex:form>

                    

                </div>
          
        </div>

        <!-- ***********************************  *********************************************-->

        <!-- ***********************************  Billing Profile Details Popup *********************************************-->

        

        <div id="PaymentMethodDetailsPopup" class="popbox"  style="z-index:998;">

            <div class="popup-top-border"></div>
            
            <div style="align:right;"> 
                <a href="javascript:void(0)" class="popboxCloseButton" onclick='closePopup()'></a>
            </div>
            
            <div class="LoadingSpinner" style="height:100%; width:100%; background-color: #D6D6D2; z-index:1500; opacity:0.8; position:absolute; display:none; text-align: center;">
            
                <img src="{!$Resource.SFDC_Loading}"/>
                <p>Loading...</p>
           
            </div>

            <div style="display: inline-block; width: 100%; margin-left: 25px;">

               <div class="popupHeader">Payment Method Details</div><br /><br />
   
               <div>
                    
                     <table style="margin-right:5%;">
                    
                        <tr>
                            <td style="padding: 5px;"><label id = "paymentPopupLabel1"></label></td>
                            <td style="padding: 5px; width:40%;"><label id = "paymentPopupLabelValue1"></label></td>
                            
                            <!-- td style="padding: 5px; width:40%;"><a id = "paymentPopupLabelValue1" href="#Foo" onclick="profileLinkClick(billinfoPoid); return false;"></a></td>-->
                        </tr>
                        <tr>
                            <td style="padding: 5px;"><label id = "paymentPopupLabel2"></label></td>
                            <td style="padding: 5px; width:40%;"><label id = "paymentPopupLabelValue2"></label></td>
                        </tr>
                        <tr>
                            <td style="padding: 5px;"><label id = "paymentPopupLabel3"></label></td>
                            <td style="padding: 5px; width:40%;"><label id = "paymentPopupLabelValue3"></label></td>
                        </tr>
                        <tr>
                            <td style="padding: 5px;"><label id = "paymentPopupLabel4"></label></td>
                            <td style="padding: 5px; width:40%;"><label id = "paymentPopupLabelValue4"></label></td>
                        </tr>
                        <tr>
                            <td style="padding: 5px;"><label id = "paymentPopupLabel5"></label></td>
                            <td style="padding: 5px; width:40%;"><label id = "paymentPopupLabelValue5"></label></td>
                        </tr>
                        <tr>
                            <td style="padding: 5px;"><label id = "paymentPopupLabel6"></label></td>
                            <td style="padding: 5px; width:40%;"><label id = "paymentPopupLabelValue6"></label></td>
                        </tr>
                    
                </table>
                 <!--<div style="text-align:left; float: left; margin:10px; display: block; width:30%;">

                        <label id = "paymentPopupLabel1"></label><br /><br />
                        <label id = "paymentPopupLabel2"></label><br /><br />
                        <label id = "paymentPopupLabel3"></label><br /><br />
                        <label id = "paymentPopupLabel4"></label><br /><br />
                        <label id = "paymentPopupLabel5"></label><br /><br />
                        <label id = "paymentPopupLabel6"></label><br /><br />
                     
                    </div>

                    

                    <div style="text-align:left; float: right; display: block; margin:10px; padding-left:20px; width:50%;">

                        <label id = "paymentPopupLabelValue1"></label><br /><br />
                        <label id = "paymentPopupLabelValue2"></label><br /><br />
                        <label id = "paymentPopupLabelValue3"></label><br /><br />
                        <label id = "paymentPopupLabelValue4"></label><br /><br />
                        <label id = "paymentPopupLabelValue5"></label><br /><br />
                        <label id = "paymentPopupLabelValue6"></label><br /><br />
                       
                    </div>-->
                    
                   
                </div>
                

            </div>

        </div>
 
        <!-- ***********************************  *********************************************-->
        
        

</apex:component>