<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <description>This step stores the UserOrGroupId to a Collection Variable.</description>
        <name>Assign_Group_Id_for_Role</name>
        <label>Assign Group Id for Role</label>
        <locationX>434</locationX>
        <locationY>146</locationY>
        <assignmentItems>
            <assignToReference>GroupIdList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GrpMemRec1.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Group_Member_List</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignContacts</name>
        <label>AssignContacts</label>
        <locationX>1411</locationX>
        <locationY>785</locationY>
        <assignmentItems>
            <assignToReference>varInputParameterLoop.Survey_Email__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EmailID</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varInputParameterLoop.SurveyContactId__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ContactID</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varInputParameterLoop.Trigger_Survey__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ContactRecordId.Last_Survey_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>StoreContacts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>CollectSubGrpMembers</name>
        <label>CollectSubGrpMembers</label>
        <locationX>1536</locationX>
        <locationY>439</locationY>
        <assignmentItems>
            <assignToReference>GroupIdList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>SubGrpMemLoopVar.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopSubGrpMemList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>EmptyGrpList</name>
        <label>EmptyGrpList</label>
        <locationX>867</locationX>
        <locationY>10</locationY>
        <assignmentItems>
            <assignToReference>GroupIdList</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EmptyCollectionVariable</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>RelatedIDListisNotNull</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>FetchOptyRecords</name>
        <label>FetchOptyRecords</label>
        <locationX>48</locationX>
        <locationY>118</locationY>
        <assignmentItems>
            <assignToReference>varOptyId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varInputParameterLoop.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varOptyOwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varInputParameterLoop.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varOptyStage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varInputParameterLoop.StageName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Lookup_Group</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>IncrementIterationVariable</name>
        <label>Increment Iteration Variable</label>
        <locationX>859</locationX>
        <locationY>133</locationY>
        <assignmentItems>
            <assignToReference>varPreventIteration</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CheckIterationPrvention</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>PublicGrpNameAssignment</name>
        <label>PublicGrpNameAssignment</label>
        <locationX>598</locationX>
        <locationY>205</locationY>
        <assignmentItems>
            <assignToReference>PublicGroupList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varPublicGroupName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopGroupIdList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>This Step gather RelatedID and Store it in Collection Variable.</description>
        <name>RelatedIdAssignment</name>
        <label>RelatedIdAssignment</label>
        <locationX>435</locationX>
        <locationY>299</locationY>
        <assignmentItems>
            <assignToReference>RelatedIDList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varRelatedID</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopGroupIdList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetFlag1</name>
        <label>SetFlag1</label>
        <locationX>198</locationX>
        <locationY>364</locationY>
        <assignmentItems>
            <assignToReference>varCheck</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GrpMemList_Loop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>If Role ID found then set to True.</description>
        <name>SetFlag2</name>
        <label>SetFlag2</label>
        <locationX>1234</locationX>
        <locationY>120</locationY>
        <assignmentItems>
            <assignToReference>varCheck2</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>FindOptyRoleID</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetFlag3</name>
        <label>SetFlag3</label>
        <locationX>892</locationX>
        <locationY>669</locationY>
        <assignmentItems>
            <assignToReference>VarCheck3</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopSubGrpMemListcollection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>StoreContacts</name>
        <label>StoreContacts</label>
        <locationX>1411</locationX>
        <locationY>907</locationY>
        <assignmentItems>
            <assignToReference>ContactCollectionToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>ContactRecordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>StoreOptys</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>StoreOptys</name>
        <label>StoreOptys</label>
        <locationX>1405</locationX>
        <locationY>1014</locationY>
        <assignmentItems>
            <assignToReference>OptyCollectionToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varInputParameterLoop</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopInputParameterFromFlow</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>varIncreamentContactRole</name>
        <label>varIncreamentContactRole</label>
        <locationX>341</locationX>
        <locationY>712</locationY>
        <assignmentItems>
            <assignToReference>variContactRoles</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_number_of_Contact_varaible</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Constant to Store Group Name</description>
        <name>Const_GroupName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>SOA VOC Survey</stringValue>
        </value>
    </constants>
    <constants>
        <name>Const_OptyID</name>
        <dataType>String</dataType>
        <value>
            <stringValue>00619000005p5lKAAQ</stringValue>
        </value>
    </constants>
    <constants>
        <description>Atul&apos;s ID</description>
        <name>Const_OptyOwnerId</name>
        <dataType>String</dataType>
        <value>
            <stringValue>00519000001ErLAAA0</stringValue>
        </value>
    </constants>
    <constants>
        <description>This Constant is to prevent circular iteration if occurs.</description>
        <name>Const_Prevent_Iteration</name>
        <dataType>Number</dataType>
        <value>
            <numberValue>2.0</numberValue>
        </value>
    </constants>
    <constants>
        <description>Constant to store Opportunity Stage</description>
        <name>Const_Stage</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Closed Won</stringValue>
        </value>
    </constants>
    <decisions>
        <name>CehckOptyOwnerIdRoleId</name>
        <label>CehckOptyOwnerIdRoleId</label>
        <locationX>1361</locationX>
        <locationY>219</locationY>
        <defaultConnector>
            <targetReference>FindOptyRoleID</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>Match</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarGrpIDList1</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>varOptyOwnerRoleId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetFlag2</targetReference>
            </connector>
            <label>Match</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Flag</name>
        <label>Check Flag</label>
        <locationX>268</locationX>
        <locationY>582</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>If_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCheck</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Validate_Opty_Stage_and_Role_of_the_Owner</targetReference>
            </connector>
            <label>If True</label>
        </rules>
        <rules>
            <name>If_False</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCheck</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lookup_Opportunity_Owner_Role</targetReference>
            </connector>
            <label>If False</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Primary_Record_Exists</name>
        <label>Check if Primary Record Exists</label>
        <locationX>917</locationX>
        <locationY>987</locationY>
        <defaultConnector>
            <targetReference>LoopInputParameterFromFlow</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ContactID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Fetch_Survey_Fields_on_Contact</targetReference>
            </connector>
            <label>Exists</label>
        </rules>
    </decisions>
    <decisions>
        <description>This step is to validate if the Opportunity Owner Id exists in the List obtained in step &quot;Query GroupMember&quot;</description>
        <name>Check_Opportunity_Owner_Id</name>
        <label>Check Opportunity Owner Id</label>
        <locationX>49</locationX>
        <locationY>586</locationY>
        <defaultConnector>
            <targetReference>GrpMemList_Loop</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>Y</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GrpMemberRecord.UserOrGroupId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>varOptyOwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetFlag1</targetReference>
            </connector>
            <label>Y</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckFlag3</name>
        <label>CheckFlag3</label>
        <locationX>406</locationX>
        <locationY>535</locationY>
        <defaultConnector>
            <targetReference>LoopInputParameterFromFlow</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>True_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarCheck3</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Validate_Opty_Stage_and_Role_of_the_Owner</targetReference>
            </connector>
            <label>True_Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckforNullValues</name>
        <label>Check for Null Values</label>
        <locationX>692</locationX>
        <locationY>343</locationY>
        <defaultConnector>
            <targetReference>LoopGroupIdList</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>PublicGrpNameNotNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varPublicGroupName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PublicGrpNameAssignment</targetReference>
            </connector>
            <label>Public Grp Name Not Null</label>
        </rules>
        <rules>
            <name>Related_Id_Not_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varRelatedID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RelatedIdAssignment</targetReference>
            </connector>
            <label>Related Id Not Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckIterationPrvention</name>
        <label>Check Iteration Prvention</label>
        <locationX>869</locationX>
        <locationY>232</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>Iteration_Less_than_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Const_Prevent_Iteration</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>varPreventIteration</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopPublicGroupList</targetReference>
            </connector>
            <label>Iteration Less than 2</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckOptyOwnerId</name>
        <label>CheckOptyOwnerId</label>
        <locationX>1119</locationX>
        <locationY>520</locationY>
        <defaultConnector>
            <targetReference>LoopSubGrpMemListcollection</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>OwnerIdMatch</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varSubGrpMemListCollection</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>varOptyOwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetFlag3</targetReference>
            </connector>
            <label>OwnerIdMatch</label>
        </rules>
    </decisions>
    <decisions>
        <name>Criteria_to_validate_the_associated_Contact_Roles</name>
        <label>Criteria to validate the associated Contact Roles</label>
        <locationX>540</locationX>
        <locationY>1015</locationY>
        <defaultConnector>
            <targetReference>LoopInputParameterFromFlow</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>opportunity_with_single_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>variContactRoles</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Find_Opportunity_Contact_Role_for_single_record</targetReference>
            </connector>
            <label>opportunity with single contact</label>
        </rules>
        <rules>
            <name>opportunity_with_multiple_contacts</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>variContactRoles</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Find_Opportunity_Contact_Role_for_many_records</targetReference>
            </connector>
            <label>opportunity with multiple contacts</label>
        </rules>
    </decisions>
    <decisions>
        <name>OptyOwnerRoleNotBlank</name>
        <label>OptyOwnerRoleNotBlank</label>
        <locationX>268</locationX>
        <locationY>52</locationY>
        <defaultConnector>
            <targetReference>LoopInputParameterFromFlow</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Blank</defaultConnectorLabel>
        <rules>
            <name>NotBlank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varOptyOwnerRoleId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Group_Member_List</targetReference>
            </connector>
            <label>NotBlank</label>
        </rules>
    </decisions>
    <decisions>
        <description>This is to Check if the SOA VOC Survey Group has any internal Groups associated along with Roles and Users.</description>
        <name>PublicGrpListNotNull</name>
        <label>PublicGrpListNotNull</label>
        <locationX>1066</locationX>
        <locationY>101</locationY>
        <defaultConnector>
            <targetReference>LoopInputParameterFromFlow</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>GrpListnotNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PublicGroupList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IncrementIterationVariable</targetReference>
            </connector>
            <label>GrpListnotNull</label>
        </rules>
    </decisions>
    <decisions>
        <description>This can happen when the Group only has other Groups with NO Users or Roles associated.</description>
        <name>RelatedIDListisNotNull</name>
        <label>RelatedIDListisNotNull</label>
        <locationX>1020</locationX>
        <locationY>7</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>ListNotNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RelatedIDList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>FindOptyRoleID</targetReference>
            </connector>
            <label>ListNotNull</label>
        </rules>
        <rules>
            <name>ListisNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RelatedIDList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PublicGrpListNotNull</targetReference>
            </connector>
            <label>ListisNull</label>
        </rules>
    </decisions>
    <decisions>
        <description>If Role is found then Trigger Survey, Else see if there are any Groups associated with the SOA VOC Survey Group.</description>
        <name>RoleFound</name>
        <label>RoleFound</label>
        <locationX>1600</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>YesRoleFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCheck2</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Validate_Opty_Stage_and_Role_of_the_Owner</targetReference>
            </connector>
            <label>Yes-RoleFound</label>
        </rules>
        <rules>
            <name>Role_Not_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCheck2</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PublicGrpListNotNull</targetReference>
            </connector>
            <label>Role Not Found</label>
        </rules>
    </decisions>
    <decisions>
        <description>This step validates the Opportunity Stage = &quot;Closed Won&quot; and Roles associated with Owner of the Opportunity.</description>
        <name>Validate_Opty_Stage_and_Role_of_the_Owner</name>
        <label>Validate Opty Stage and Role of the Owner</label>
        <locationX>1408</locationX>
        <locationY>576</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>ConditionisTrue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varOptyStage</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Const_Stage</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Number_Of_Contact_Roles</targetReference>
            </connector>
            <label>Condition is True</label>
        </rules>
    </decisions>
    <decisions>
        <name>Validate_Survey_Fields_on_Opportunity_Contact</name>
        <label>Validate Survey Fields on Opportunity Contact</label>
        <locationX>1220</locationX>
        <locationY>789</locationY>
        <defaultConnector>
            <targetReference>LoopInputParameterFromFlow</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>True</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>EmailID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CheckDate</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>$Flow.CurrentDateTime</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varLastSurveyDate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignContacts</targetReference>
            </connector>
            <label>True</label>
        </rules>
    </decisions>
    <formulas>
        <name>Assignment</name>
        <dataType>String</dataType>
        <expression>{!varRelatedID}+&apos;,&apos;+{!varGroupMemType}</expression>
    </formulas>
    <formulas>
        <name>CheckDate</name>
        <dataType>Date</dataType>
        <expression>{!varLastSurveyDate}+30</expression>
    </formulas>
    <formulas>
        <name>formulaRoles</name>
        <dataType>Boolean</dataType>
        <expression>OR(CONTAINS({!varOptyOwnerRoleId}, &quot;Admin&quot;),CONTAINS({!varOptyOwnerRoleId}, &quot;Campaign Agent&quot;),CONTAINS({!varOptyOwnerRoleId}, &quot;Campaign Lead Dev&quot;),CONTAINS({!varOptyOwnerRoleId}, &quot;Inbound Agent&quot;),CONTAINS({!varOptyOwnerRoleId}, &quot;Market Response Agent&quot;),CONTAINS({!varOptyOwnerRoleId}, &quot;Payroll Inbound Agent&quot;),CONTAINS({!varOptyOwnerRoleId}, &quot;Pipeline Agent&quot;),CONTAINS({!varOptyOwnerRoleId}, &quot;POS Lead Gen&quot;),CONTAINS({!varOptyOwnerRoleId}, &quot;QBO Chat OB&quot;))</expression>
    </formulas>
    <interviewLabel>SOA VOC Survey Validation Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SOA VOC Survey Validation Flow</label>
    <loops>
        <name>FindOptyRoleID</name>
        <label>FindOptyRoleID</label>
        <locationX>1339</locationX>
        <locationY>2</locationY>
        <assignNextValueToReference>VarGrpIDList1</assignNextValueToReference>
        <collectionReference>RelatedIDList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CehckOptyOwnerIdRoleId</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>RoleFound</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>GrpMemList_Loop</name>
        <label>GrpMemList-Loop</label>
        <locationX>45</locationX>
        <locationY>459</locationY>
        <assignNextValueToReference>GrpMemberRecord</assignNextValueToReference>
        <collectionReference>GrpMemList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_Opportunity_Owner_Id</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Check_Flag</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>This loop is to iterate through the GrpMemList and fetch the UserOrGroupID&apos;s into a Collection Variable. 
NOTE: The GrpMemList contactins both User ID&apos;s and Group ID&apos;s as well.
1) After we obtain the Group ID&apos;s we use them to query against the Group table to fetch corresponding Related ID for each Group Id.
2) Then Use the Related ID to compare aginst the Opportunity Role Id</description>
        <name>Loop_Group_Member_List</name>
        <label>Loop Group Member List</label>
        <locationX>482</locationX>
        <locationY>8</locationY>
        <assignNextValueToReference>GrpMemRec1</assignNextValueToReference>
        <collectionReference>GrpMemList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Group_Id_for_Role</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>LoopGroupIdList</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Reason for the Step is Flow doesn&apos;t allow to filter records using a collection variable or Sobject collection variable. So, we have to iterate through the Collection variable again here and do a Record lookup to fetch the Role Id stored in Group Table.</description>
        <name>LoopGroupIdList</name>
        <label>LoopGroupIdList</label>
        <locationX>669</locationX>
        <locationY>9</locationY>
        <assignNextValueToReference>LoopVariable</assignNextValueToReference>
        <collectionReference>GroupIdList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Fetch_Group_Ids_for_Roles</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>EmptyGrpList</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopInputParameterFromFlow</name>
        <label>LoopInputParameterFromFlow</label>
        <locationX>49</locationX>
        <locationY>4</locationY>
        <assignNextValueToReference>varInputParameterLoop</assignNextValueToReference>
        <collectionReference>varOptyList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>FetchOptyRecords</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateOptys</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopPublicGroupList</name>
        <label>LoopPublicGroupList</label>
        <locationX>1063</locationX>
        <locationY>257</locationY>
        <assignNextValueToReference>VarPublicGrpLoop</assignNextValueToReference>
        <collectionReference>PublicGroupList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SubGroup</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>LoopSubGrpMemListcollection</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopSubGrpMemList</name>
        <label>LoopSubGrpMemList</label>
        <locationX>1253</locationX>
        <locationY>437</locationY>
        <assignNextValueToReference>SubGrpMemLoopVar</assignNextValueToReference>
        <collectionReference>SubGrpMemList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CollectSubGrpMembers</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>LoopPublicGroupList</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopSubGrpMemListcollection</name>
        <label>LoopSubGrpMemListcollection</label>
        <locationX>792</locationX>
        <locationY>472</locationY>
        <assignNextValueToReference>varSubGrpMemListCollection</assignNextValueToReference>
        <collectionReference>GroupIdList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CheckOptyOwnerId</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CheckFlag3</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Update_number_of_Contact_varaible</name>
        <label>Update number of Contact varaible</label>
        <locationX>583</locationX>
        <locationY>715</locationY>
        <assignNextValueToReference>OptyContactRole</assignNextValueToReference>
        <collectionReference>ListOfOptyContactRole</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>varIncreamentContactRole</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Criteria_to_validate_the_associated_Contact_Roles</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>To Fetch Related ID (Role ID) from the Group Table and compare against the Opportunity Owner Role Id.</description>
        <name>Fetch_Group_Ids_for_Roles</name>
        <label>Fetch Group Ids for Roles</label>
        <locationX>836</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckforNullValues</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>LoopVariable</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>varPublicGroupName</assignToReference>
            <field>Name</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>varRelatedID</assignToReference>
            <field>RelatedId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Fetch_Survey_Fields_on_Contact</name>
        <label>Fetch Survey Fields on Contact</label>
        <locationX>923</locationX>
        <locationY>817</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Validate_Survey_Fields_on_Opportunity_Contact</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ContactID</elementReference>
            </value>
        </filters>
        <object>Contact</object>
        <outputAssignments>
            <assignToReference>EmailID</assignToReference>
            <field>Email</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>ContactRecordId.Id</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>varLastSurveyDate</assignToReference>
            <field>Last_Survey_Date__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Find_Opportunity_Contact_Role_for_many_records</name>
        <label>Find Opportunity Contact Role for many records</label>
        <locationX>913</locationX>
        <locationY>1114</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Primary_Record_Exists</targetReference>
        </connector>
        <filters>
            <field>IsPrimary</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varOptyId</elementReference>
            </value>
        </filters>
        <object>OpportunityContactRole</object>
        <outputAssignments>
            <assignToReference>ContactID</assignToReference>
            <field>ContactId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Find_Opportunity_Contact_Role_for_single_record</name>
        <label>Find Opportunity Contact Role for single record</label>
        <locationX>735</locationX>
        <locationY>818</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Fetch_Survey_Fields_on_Contact</targetReference>
        </connector>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varOptyId</elementReference>
            </value>
        </filters>
        <object>OpportunityContactRole</object>
        <outputAssignments>
            <assignToReference>ContactID</assignToReference>
            <field>ContactId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>This step queries the Group Table and fetched Id of the Group &quot;SOA VOC Survey&quot; defined in constant &quot;GroupName&quot;.</description>
        <name>Lookup_Group</name>
        <label>Lookup Group</label>
        <locationX>47</locationX>
        <locationY>208</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Query_GroupMember</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varGroupName</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>varGroupID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>Fetch Role of the Owner associated with Opportunity using varOpportunityOwnerID</description>
        <name>Lookup_Opportunity_Owner_Role</name>
        <label>Lookup_Opportunity_Owner_Role</label>
        <locationX>270</locationX>
        <locationY>267</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>OptyOwnerRoleNotBlank</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varOptyOwnerId</elementReference>
            </value>
        </filters>
        <object>User</object>
        <outputAssignments>
            <assignToReference>varOptyOwnerRoleId</assignToReference>
            <field>UserRoleId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Number_Of_Contact_Roles</name>
        <label>Number Of Contact Roles</label>
        <locationX>1091</locationX>
        <locationY>708</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_number_of_Contact_varaible</targetReference>
        </connector>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varOptyId</elementReference>
            </value>
        </filters>
        <object>OpportunityContactRole</object>
        <outputReference>ListOfOptyContactRole</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>ContactId</queriedFields>
        <queriedFields>IsPrimary</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>This Step Queries the Group Member Table using the Group ID  obtained from Step &quot;Lookup Group&quot; and stores the result &quot;UserOrGroupId&quot; in GrpMemList</description>
        <name>Query_GroupMember</name>
        <label>Query GroupMember</label>
        <locationX>45</locationX>
        <locationY>339</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GrpMemList_Loop</targetReference>
        </connector>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varGroupID</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
        <outputReference>GrpMemList</outputReference>
        <queriedFields>UserOrGroupId</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>SubGroup</name>
        <label>SubGroup</label>
        <locationX>935</locationX>
        <locationY>435</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SubGrpMembers</targetReference>
        </connector>
        <faultConnector>
            <targetReference>LoopPublicGroupList</targetReference>
        </faultConnector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarPublicGrpLoop</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>varSubGrpId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>SubGrpMembers</name>
        <label>SubGrpMembers</label>
        <locationX>1077</locationX>
        <locationY>439</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopSubGrpMemList</targetReference>
        </connector>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varSubGrpId</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
        <outputReference>SubGrpMemList</outputReference>
        <queriedFields>UserOrGroupId</queriedFields>
    </recordLookups>
    <recordUpdates>
        <name>UpdateContacts</name>
        <label>UpdateContacts</label>
        <locationX>1106</locationX>
        <locationY>1102</locationY>
        <inputReference>ContactCollectionToUpdate</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateOptys</name>
        <label>UpdateOptys</label>
        <locationX>1104</locationX>
        <locationY>999</locationY>
        <connector>
            <targetReference>UpdateContacts</targetReference>
        </connector>
        <inputReference>OptyCollectionToUpdate</inputReference>
    </recordUpdates>
    <startElementReference>LoopInputParameterFromFlow</startElementReference>
    <variables>
        <name>ContactCollectionToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>ContactID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>ContactRecordId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>EmailID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>This is created to Empty the Collection set as we don;t have methods to remove elements from the collection.</description>
        <name>EmptyCollectionVariable</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>EmptySobjectCollectionVar</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>GroupIdList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>GrpMemberRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>GrpMemList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>GrpMemRec1</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <description>This will featch the list of contact roles</description>
        <name>ListOfOptyContactRole</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>OpportunityContactRole</objectType>
    </variables>
    <variables>
        <name>LoopVariable</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>OptyCollectionToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>OptyContactRole</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>OpportunityContactRole</objectType>
    </variables>
    <variables>
        <name>PublicGroupList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>RelatedIDList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SubGrpMemList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>SubGrpMemListCollection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SubGrpMemLoopVar</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>varCheck</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>varCheck2</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>VarCheck3</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>This stores the Group ID</description>
        <name>varGroupID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varGroupMemType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varGroupName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <elementReference>Const_GroupName</elementReference>
        </value>
    </variables>
    <variables>
        <name>VarGrpIDList1</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>variContactRoles</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varInputParameterLoop</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>varLastSurveyDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varOptyId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varOptyList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>varOptyOwnerId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Variable to hold the Role associated with Opportunity Owner</description>
        <name>varOptyOwnerRoleId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varOptyStage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varPreventIteration</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varPublicGroupName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>VarPublicGrpLoop</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varRelatedID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varSubGrpId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varSubGrpMemListCollection</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varSurveyCounter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>1</scale>
    </variables>
</Flow>
