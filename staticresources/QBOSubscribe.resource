[{"attributes":{"type":"skuid__Page__c","url":"/services/data/v36.0/sobjects/skuid__Page__c/a2f19000000GvPIAA0"},"Id":"a2f19000000GvPIAA0","Name":"QBOSubscribe","skuid__Type__c":"Desktop","skuid__UniqueId__c":"_QBOSubscribe","skuid__Module__c":null,"skuid__Composer_Settings__c":null,"skuid__MasterPage__c":null,"skuid__MasterPage__r":null,"skuid__IsMaster__c":false,"skuid__Layout__c":"<skuidpage unsavedchangeswarning=\"yes\" personalizationmode=\"server\" showsidebar=\"false\" showheader=\"true\" theme=\"Intuit\"><models><model id=\"AssetModel\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" type=\"\" sobject=\"Asset\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Company_Id__c\"/><field id=\"Product2Id\"/><field id=\"AccountId\"/><field id=\"Account.Name\"/><field id=\"Trial_End_Date__c\"/><field id=\"Signup_Date__c\"/><field id=\"StatusGlobal__c\"/><field id=\"TrialStarted__ui\" uionly=\"true\" displaytype=\"FORMULA\" label=\"Trial Started\" precision=\"9\" scale=\"2\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{Signup_Date__c}} != '',MONTH_NAME({{Signup_Date__c}}) + ' ' + DAY({{Signup_Date__c}}) + ',' + YEAR_UTC({{Signup_Date__c}}),'')</formula></field><field id=\"Suspend_Date__c\"/><field id=\"SuspendedDate__ui\" uionly=\"true\" displaytype=\"FORMULA\" label=\"Suspended\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{Suspend_Date__c}} != '',MONTH_NAME({{Suspend_Date__c}}) + ' ' + DAY({{Suspend_Date__c}}) + ',' + YEAR_UTC({{Suspend_Date__c}}),'')</formula></field><field id=\"isTrialExpired__ui\" uionly=\"true\" displaytype=\"FORMULA\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"BOOLEAN\" label=\"Trial Expired\"><formula>{{Trial_End_Date__c}} - TODAY() &lt; 0</formula></field><field id=\"TrialExpiryDate__ui\" uionly=\"true\" displaytype=\"FORMULA\" label=\"Trial Expiry Date\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{Trial_End_Date__c}} != '',MONTH_NAME({{Trial_End_Date__c}}) + ' ' + DAY({{Trial_End_Date__c}}) + ',' + YEAR_UTC({{Trial_End_Date__c}}),'')</formula></field><field id=\"RemainExpireDays__ui\" uionly=\"true\" displaytype=\"FORMULA\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"DOUBLE\" precision=\"9\" scale=\"0\" label=\"Remain Expire Days\"><formula>ABS(ROUND(({{Trial_End_Date__c}} - TODAY())/(1000*60*60*24)))</formula></field><field id=\"Account.Country__c\"/><field id=\"Current_Product__r.Name\"/><field id=\"First_Charge_Date__c\"/><field id=\"LastPayment__ui\" uionly=\"true\" displaytype=\"FORMULA\" label=\"Last payment\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{First_Charge_Date__c}} != '',MONTH_NAME({{First_Charge_Date__c}}) + ' ' + DAY({{First_Charge_Date__c}}) + ',' + YEAR_UTC({{First_Charge_Date__c}}),'')</formula></field><field id=\"Cancel_Date__c\"/><field id=\"Status\"/><field id=\"CancelledDate__ui\" uionly=\"true\" displaytype=\"FORMULA\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{Cancel_Date__c}} != '',MONTH_NAME({{Cancel_Date__c}}) + ' ' + DAY({{Cancel_Date__c}}) + ',' + YEAR_UTC({{Cancel_Date__c}}),'')</formula></field></fields><conditions><condition type=\"param\" value=\"Id\" field=\"Id\" operator=\"=\" enclosevalueinquotes=\"true\" novaluebehavior=\"\"/></conditions><actions/></model><model id=\"BillingProfile\" limit=\"1\" query=\"false\" createrowifnonefound=\"true\" type=\"\" sobject=\"Billing_Profile__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Credit_Card_Type__c\"/><field id=\"Credit_Card_Number__c\"/><field id=\"Credit_Card_Verification_Number__c\" overridemetadata=\"true\" ogdisplaytype=\"STRING\" displaytype=\"TEXT\" length=\"3\"/><field id=\"Name_of_Credit_Card__c\"/><field id=\"Payment_Method__c\" overridemetadata=\"false\" ogdisplaytype=\"PICKLIST\" displaytype=\"PICKLIST\"><picklistentries><entry value=\"DIRECT_DEBIT\" label=\"Debit Card\"/><entry value=\"Credit Card\" label=\"Credit Card\"/></picklistentries></field><field id=\"Bank_Account_Name__c\"/><field id=\"Bank_Account_Number__c\"/><field id=\"Bank_Routing_Number__c\"/><field id=\"CreditCardNumber_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Card Number\"/><field id=\"Expiry_Month__c\" overridemetadata=\"true\" ogdisplaytype=\"PICKLIST\" displaytype=\"PICKLIST\" defaultValue=\"\"><picklistentries><entry value=\"\" label=\"month\"/><entry value=\"01\" label=\"Jan\"/><entry value=\"02\" label=\"Feb\"/><entry value=\"03\" label=\"March\"/><entry value=\"04\" label=\"April\"/><entry value=\"05\" label=\"May\"/><entry value=\"06\" label=\"June\"/><entry value=\"07\" label=\"July\"/><entry value=\"08\" label=\"Aug\"/><entry value=\"09\" label=\"Sep\"/><entry value=\"10\" label=\"Oct\"/><entry value=\"11\" label=\"Nov\"/><entry value=\"12\" label=\"Dec\"/></picklistentries></field><field id=\"Expiry_Year__c\" overridemetadata=\"true\" ogdisplaytype=\"DOUBLE\" displaytype=\"PICKLIST\" precision=\"\" scale=\"\"><picklistentries><entry value=\"2016\" label=\"2016\"/></picklistentries></field><field id=\"ccType__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"Account_ID__c\"/><field id=\"Account_ID__r.Name\"/><field id=\"Id\"/><field id=\"Address_ID__c\"/><field id=\"Address_ID__r.Name\"/><field id=\"RequiredError__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Required Error\"/><field id=\"ExistingCardNo__ui\" uionly=\"true\" displaytype=\"FORMULA\" label=\"Existing Card No\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{Credit_Card_Number__c}} != '','**** **** **** '+RIGHT({{Credit_Card_Number__c}},4),'Not Specified')</formula></field><field id=\"isUsingExisting__ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"Using Existing\" ogdisplaytype=\"TEXT\" defaultvaluetype=\"fieldvalue\" defaultValue=\"false\"/><field id=\"TokanizationError__ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"Tokanization Error\" ogdisplaytype=\"TEXT\" defaultvaluetype=\"fieldvalue\" defaultValue=\"false\"/><field id=\"isTokenized_ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"isTokenized_ui\" ogdisplaytype=\"TEXT\" defaultvaluetype=\"fieldvalue\" defaultValue=\"false\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"Account_ID__c\" operator=\"=\" model=\"AssetModel\" enclosevalueinquotes=\"true\" mergefield=\"AccountId\" novaluebehavior=\"deactivate\" state=\"\" inactive=\"false\"/></conditions><actions/></model><model id=\"BillingAddress\" limit=\"1\" query=\"true\" createrowifnonefound=\"true\" type=\"\" sobject=\"Address__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\" orderby=\"LastModifiedDate desc\"><fields><field id=\"Id\"/><field id=\"Bill_To_Address__c\"/><field id=\"Name\"/><field id=\"City__c\"/><field id=\"State__c\" overridemetadata=\"true\" ogdisplaytype=\"STRING\" displaytype=\"PICKLIST\" picklistsource=\"manual\" defaultvaluetype=\"fieldvalue\" defaultValue=\"\"><picklistentries><entry value=\"\" label=\"State\"/></picklistentries></field><field id=\"Postal_Code__c\"/><field id=\"RequiredError__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Required Error\"/><field id=\"Country__c\"/><field id=\"Primary__c\"/><field id=\"Account__c\"/><field id=\"Account__r.Name\"/><field id=\"UpdateAccount\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"Update account w/ this address\" defaultValue=\"false\" readonly=\"true\"/><field id=\"hasError\" uionly=\"true\" displaytype=\"BOOLEAN\" defaultValue=\"false\"/><field id=\"SameAsCompAddr_ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"Same as company address\"/><field id=\"Country_4CA_ui\" uionly=\"true\" displaytype=\"PICKLIST\" label=\"Country\" defaultValue=\"Canada\"><picklistentries><entry value=\"Canada\" label=\"Canada\"/><entry value=\"USA\" label=\"United States\"/></picklistentries></field><field id=\"alreadySaved_ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"AlreadySaved\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"Account__r.Id\" operator=\"=\" model=\"AssetModel\" enclosevalueinquotes=\"true\" mergefield=\"AccountId\" novaluebehavior=\"deactivate\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Bill_To_Address__c\"/></conditions><actions><action><actions><action type=\"custom\" snippet=\"updateAccountAndBillingFlag\"/></actions><events><event>row.created</event></events></action></actions></model><model id=\"UpgradeTable\" limit=\"2\" query=\"false\" createrowifnonefound=\"false\" type=\"\" sobject=\"Offered_Product__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Name__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Product\"/><field id=\"PayrollDiscount__ui\" uionly=\"true\" displaytype=\"DOUBLE\" label=\"Payroll Discount\" precision=\"9\" scale=\"2\"/><field id=\"QBODiscount__ui\" uionly=\"true\" displaytype=\"DOUBLE\" label=\"QBO Discount\" precision=\"9\" scale=\"2\"/><field id=\"QBOOriginal__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"QBO Original Price\"/><field id=\"PayrollOriginal__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Payroll Original Price\"/><field id=\"PayrollDiscountDescription__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Payroll Discount\"/><field id=\"QBODiscountDescription__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"QBO Discount\"/><field id=\"isSelected__ui\" uionly=\"true\" displaytype=\"FORMULA\" label=\"Selected\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"TEXT\"/><field id=\"BillingStartDate__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"IsWithPayroll__ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"isWithpayroll\" ogdisplaytype=\"TEXT\"/><field id=\"QBOPricebookEntryId__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"QBOPricebookEntryId\"/><field id=\"PayrollPricebookEntryId__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"PayrollPricebookEntryId\"/><field id=\"offeringIdValue__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"QBOpayablePrice__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"payrollPayablePrice__ui\" uionly=\"true\" displaytype=\"TEXT\"/></fields><conditions/><actions/></model><model id=\"UpgradeAsset\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" type=\"\" sobject=\"Asset\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"PurchaseIncludes__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Purchase Includes\"/><field id=\"BillingStarts__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Billing Starts\" readonly=\"false\" returntype=\"TEXT\" ogdisplaytype=\"FORMULA\"><formula>IF(DAY({{ProductExpiresOn__ui}} - NOW()) &gt;= 0,FORMAT_DATE('MM dd, yy',{{ProductExpiresOn__ui}},FORMAT_DATE('MM dd, yy',NOW()))</formula></field><field id=\"ProductExpiresOn__ui\" uionly=\"true\" displaytype=\"DATE\" label=\"Product Expires On\"/><field id=\"QBOListPrice__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"PayrollListPrice__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"QBODiscountPrice__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"PayrollDiscountPrice__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"QBOPriceBookEntryId__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"PayrollPriceBookEntryId__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"offeringIdValue__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"payrollPayablePrice__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"QBOpayablePrice__ui\" uionly=\"true\" displaytype=\"TEXT\"/></fields><conditions/><actions/></model><model id=\"CCTokenInfo\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" type=\"\" sobject=\"CreditCard_Tokenization_URL__c\" datasource=\"salesforce\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Name\"/><field id=\"Id\"/><field id=\"URL__c\"/><field id=\"URL_EndPoint__c\"/><field id=\"URL_Header__c\"/><field id=\"CurrencyIsoCode\"/></fields><conditions/><actions/></model><model id=\"UserSelections\" limit=\"1\" query=\"true\" createrowifnonefound=\"true\" type=\"\" sobject=\"User\" datasource=\"salesforce\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Name\"/><field id=\"errorStatus\" uionly=\"true\" displaytype=\"TEXT\" label=\"errorStatus\"/><field id=\"success_ui\" uionly=\"true\" displaytype=\"BOOLEAN\" readonly=\"false\" label=\"success_ui\" length=\"\" defaultvaluetype=\"fieldvalue\" ogdisplaytype=\"TEXT\" defaultValue=\"false\"/></fields><conditions><condition type=\"userinfo\" value=\"\" field=\"Id\" operator=\"=\" enclosevalueinquotes=\"true\" userinfotype=\"userid\" state=\"filterableon\" inactive=\"false\" name=\"SubFiilter\"/></conditions><actions/></model><model id=\"ErrorDB\" limit=\"1\" query=\"false\" createrowifnonefound=\"true\" type=\"\" sobject=\"Error__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Detail_Message__c\"/><field id=\"Error_Code__c\"/><field id=\"Error_Description__c\"/><field id=\"Id\"/><field id=\"SFDCId__c\"/></fields><conditions/><actions/></model><model id=\"NewOpportunity\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Opportunity\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" orderby=\"CreatedDate DESC\"><fields><field id=\"Name\"/><field id=\"AccountId\"/><field id=\"Account.Name\"/><field id=\"CurrencyIsoCode\"/><field id=\"Product_Family_of_Interest__c\"/><field id=\"LeadSource\"/><field id=\"StageName\"/><field id=\"CloseDate\"/><field id=\"Pricebook2Id\"/><field id=\"Pricebook2.Name\"/><field id=\"Type\"/><field id=\"Asset__c\"/><field id=\"Asset__r.Name\"/><field id=\"Siebel_Order_id__c\"/><field id=\"CreatedDate\"/></fields><conditions logic=\"1 AND 2\"><condition type=\"modelmerge\" value=\"\" field=\"AccountId\" operator=\"=\" userinfotype=\"userid\" model=\"AssetModel\" enclosevalueinquotes=\"true\" mergefield=\"AccountId\" novaluebehavior=\"deactivate\"/><condition type=\"multiple\" value=\"\" field=\"StageName\" operator=\"not in\" enclosevalueinquotes=\"true\"><values><value>Closed Won</value><value>Closed Lost</value></values></condition></conditions><actions><action><actions><action type=\"requeryModel\" model=\"NewOpportunity\" behavior=\"standard\"/></actions><events><event>models.saved</event></events></action></actions></model><model id=\"OpportunityLineItem\" limit=\"2\" query=\"false\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"OpportunityLineItem\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"OpportunityId\"/><field id=\"Opportunity.Name\"/><field id=\"PricebookEntryId\"/><field id=\"PricebookEntry.Name\"/><field id=\"Product2Id\"/><field id=\"Product2.Name\"/><field id=\"UnitPrice\"/></fields><conditions/><actions/></model><model id=\"PricebookEntryLookup\" limit=\"2\" query=\"false\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"PricebookEntry\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Product2Id\"/><field id=\"Product2.Name\"/><field id=\"Pricebook2Id\"/><field id=\"Pricebook2.Name\"/></fields><conditions logic=\"(1OR2)\"><condition type=\"modelmerge\" value=\"\" field=\"Id\" operator=\"=\" model=\"UpgradeAsset\" enclosevalueinquotes=\"true\" mergefield=\"QBOPriceBookEntryId__ui\" novaluebehavior=\"deactivate\"/><condition type=\"modelmerge\" value=\"\" field=\"Id\" operator=\"=\" model=\"UpgradeAsset\" enclosevalueinquotes=\"true\" mergefield=\"PayrollPriceBookEntryId__ui\" novaluebehavior=\"deactivate\"/></conditions><actions/></model><model id=\"CurrentDate\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"User\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"CurrentDate__ui\" uionly=\"true\" displaytype=\"FORMULA\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"DATE\"><formula>TODAY()</formula></field></fields><conditions/><actions/></model><model id=\"ExistingBillAddress\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Address__c\"><fields><field id=\"Account__c\"/><field id=\"Account__r.Name\"/><field id=\"Name\"/><field id=\"Bill_To_Address__c\"/><field id=\"Country__c\"/><field id=\"Postal_Code__c\"/><field id=\"Primary__c\"/><field id=\"Id\"/><field id=\"State__c\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"Account__c\" operator=\"=\" model=\"AssetModel\" enclosevalueinquotes=\"true\" mergefield=\"AccountId\" novaluebehavior=\"noquery\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Bill_To_Address__c\"/></conditions><actions/></model><model id=\"AddressDBMatch\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Address__c\" orderby=\"CreatedDate DESC\"><fields><field id=\"Account__c\"/><field id=\"Account__r.Name\"/><field id=\"Name\"/><field id=\"Bill_To_Address__c\"/><field id=\"City__c\"/><field id=\"Country__c\"/><field id=\"Postal_Code__c\"/><field id=\"Id\"/><field id=\"State__c\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Name\" operator=\"=\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchName\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Postal_Code__c\" operator=\"=\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchZIP\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"City__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchCity\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"State__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchState\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Account__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchAccID\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Bill_To_Address__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchBillTOAddress\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Primary__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchPrimary\"/></conditions><actions/></model><model id=\"Account\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Account\"><fields><field id=\"Id\"/><field id=\"Name\"/><field id=\"CAN__c\"/><field id=\"Company_ID__c\"/><field id=\"Country__c\"/><field id=\"BillingCountry\"/></fields><conditions><condition type=\"param\" value=\"AccountId\" field=\"Id\" operator=\"=\" enclosevalueinquotes=\"true\" novaluebehavior=\"deactivate\" state=\"filterableoff\" inactive=\"true\" name=\"AccountIDPageParameter\"/></conditions><actions/></model><model id=\"OnlineSalesKey\" limit=\"20\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Online_Sales_Key__c\"><fields><field id=\"Value__c\"/><field id=\"Name\"/></fields><conditions><condition type=\"fieldvalue\" value=\"OnlineSales_ProductionOrg\" enclosevalueinquotes=\"true\" field=\"Name\"/></conditions><actions/></model></models><components><wrapper uniqueid=\"sk-3sniNK-126\"><components><template multiple=\"false\" uniqueid=\"AccountBreadcrumb\" model=\"AssetModel\" allowhtml=\"true\" cssclass=\"subscribeUpdateInfo\"><contents>&lt;span style=\"font-style: bold; font-size: 14px; color: #0077c5\"&gt;&lt;a href=\"javascript:skuid.events.publish('exitPopup', ['AccountList']);\"&gt;Accounts&lt;/a&gt; &gt; \n&lt;a href=\"javascript:skuid.events.publish('exitPopup', ['AccountID']);\"&gt;{{{Account.Name}}}&lt;/a&gt; &gt;&lt;span&gt;\n&lt;span style=\"font-size: 14px; font-style: AvenirNextLTPro-Demi; color: #8d9096\"&gt; {{#$Param.optn}}Sign up for{{/$Param.optn}}{{#$Param.sub}}Resubscribe to{{/$Param.sub}} QBO&lt;span&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"AssetModel\" sourcetype=\"snippet\" nosourcerowbehavior=\"deactivate\" sourcesnippet=\"IsInConsole\"/></renderconditions></template><wrapper uniqueid=\"sk-JaD7s-670\" cssclass=\"subscribeUpdateInfo\"><components><template multiple=\"false\" uniqueid=\"sk-3tGGth-834\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:22px;\"&gt;&lt;span style=\"font-size: 30px\"&gt;{{#$Param.optn}}Sign up for{{/$Param.optn}}{{#$Param.sub}}Resubscribe to{{/$Param.sub}} QBO&lt;/div&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-JdgTZ-1200\"><components><grid uniqueid=\"sk-2xwYQK-415\"><divisions><division behavior=\"flex\" minwidth=\"100px\" ratio=\"1\" verticalalign=\"top\"><components><grid uniqueid=\"optinGrid\" cssclass=\"subscribeUpdateInfo\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"50%\" uniqueid=\"optInView\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"AssetModel\" buttonposition=\"\" uniqueid=\"sk-3sr12G-210\" mode=\"readonly\" layout=\"\"><columns><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Current_Product__r.Name\" valuehalign=\"\" type=\"\"><label>Current Trial</label></field><field id=\"TrialStarted__ui\" valuehalign=\"\" type=\"\"/><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\"><label>Trial Expires</label><template>{{TrialExpiryDate__ui}}&lt;br/&gt;\n{{#isTrialExpired__ui}}Expired, Day {{RemainExpireDays__ui}} of {{$Param.gracePeriod}} day grace period{{/isTrialExpired__ui}}\n{{^isTrialExpired__ui}}{{RemainExpireDays__ui}} days left{{/isTrialExpired__ui}}</template></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"AssetModel\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" sourceparam=\"optn\" value=\"true\"/></renderconditions></basicfieldeditor><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"AssetModel\" buttonposition=\"\" uniqueid=\"sk-MeFNv-618\" mode=\"readonly\" layout=\"\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Current_Product__r.Name\" valuehalign=\"\" type=\"\"/><field id=\"TrialStarted__ui\" valuehalign=\"\" type=\"\"><label>Signed up</label></field><field id=\"SuspendedDate__ui\" valuehalign=\"\" type=\"\"><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"AssetModel\" sourcetype=\"fieldvalue\" field=\"Status\" value=\"Cancelled Subscription\"/></renderconditions><enableconditions/></field><field id=\"CancelledDate__ui\" valuehalign=\"\" type=\"\"><label>Cancelled</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"AssetModel\" sourcetype=\"fieldvalue\" value=\"Cancelled Subscription\" field=\"Status\"/></renderconditions><enableconditions/></field><field id=\"LastPayment__ui\" valuehalign=\"\" type=\"\"/></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"AssetModel\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" sourceparam=\"sub\" value=\"true\"/></renderconditions></basicfieldeditor></components></division><division behavior=\"specified\" verticalalign=\"top\" width=\"50%\" cssclass=\"subscriptionInfo\"><components><wrapper uniqueid=\"sk-Javyk-698\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"UpgradeAsset\" buttonposition=\"\" uniqueid=\"sk-3sr1f3-220\" mode=\"readonly\" layout=\"\"><columns><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"PurchaseIncludes__ui\" valuehalign=\"\" type=\"\"><label>Your Purchase Includes</label></field><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\"><label>List Price</label><template>{{#QBODiscountPrice__ui}}QBO: &lt;strike&gt;{{QBOListPrice__ui}}&lt;/strike&gt;{{/QBODiscountPrice__ui}}\n{{^QBODiscountPrice__ui}}QBO: &lt;b&gt;{{QBOListPrice__ui}}&lt;/b&gt;{{/QBODiscountPrice__ui}}\n{{#PayrollDiscountPrice__ui}}{{#PayrollListPrice__ui}}&lt;br&gt;Payroll: &lt;strike&gt;{{PayrollListPrice__ui}}&lt;/strike&gt;{{/PayrollListPrice__ui}}{{/PayrollDiscountPrice__ui}}\n{{^PayrollDiscountPrice__ui}}{{#PayrollListPrice__ui}}&lt;br&gt;Payroll: &lt;b&gt;{{PayrollListPrice__ui}}&lt;/b&gt;{{/PayrollListPrice__ui}}{{/PayrollDiscountPrice__ui}}</template></field><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\"><label>Discounted Price</label><template>{{#QBODiscountPrice__ui}}QBO: &lt;span style=\"color:green;\"&gt;&lt;b&gt;{{{QBODiscountPrice__ui}}}&lt;/b&gt;&lt;/span&gt;{{/QBODiscountPrice__ui}}\n{{^QBODiscountPrice__ui}}QBO: None{{/QBODiscountPrice__ui}}\n{{#PayrollDiscountPrice__ui}}&lt;br&gt;Payroll: &lt;span style=\"color:green;\"&gt;&lt;b&gt;{{{PayrollDiscountPrice__ui}}}&lt;/b&gt;&lt;/span&gt;{{/PayrollDiscountPrice__ui}}\n{{#PayrollListPrice__ui}}{{^PayrollDiscountPrice__ui}}&lt;br&gt;Payroll: None{{/PayrollDiscountPrice__ui}}{{/PayrollListPrice__ui}}</template></field><field id=\"BillingStarts__ui\" valuehalign=\"\" type=\"\"/></fields></section></sections><renderconditions logictype=\"and\"/></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" borders=\"left,\"><styles><styleitem property=\"border-left\" value=\"15px solid transparent\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/><styleitem property=\"background-color\" value=\"#EBF9FF\"/><styleitem property=\"border-radius\" value=\"7px\"/></styles><renderconditions logictype=\"and\"/></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"/></grid><wizard deferstepcontentsrendering=\"false\" buttonslocation=\"top\" uniqueid=\"mywizard\"><steps><step stepid=\"step1\" steplabel=\"\"><components><wrapper uniqueid=\"sk-NxlU5-933\"><components><grid uniqueid=\"sk-JWf6l-558\"><divisions><division behavior=\"flex\" minwidth=\"100px\" ratio=\"1\" verticalalign=\"top\"><components><template multiple=\"false\" uniqueid=\"sk-JWhjv-568\" allowhtml=\"true\"><contents>&lt;b&gt;Offer Options&lt;/b&gt;</contents></template></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components/></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"priceCurrency\" allowhtml=\"true\"><contents>&lt;b&gt;*All prices are in &lt;span class=\"currency\"&gt;&lt;/span&gt;&lt;/b&gt;</contents></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid><skootable showconditions=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" searchmethod=\"server\" searchbox=\"false\" showexportbuttons=\"false\" pagesize=\"10\" createrecords=\"false\" model=\"UpgradeTable\" buttonposition=\"\" mode=\"readonly\" uniqueid=\"UpgradeTable\" instantfilters=\"false\" emptysearchbehavior=\"query\"><fields><field id=\"Name__ui\" valuehalign=\"\" type=\"\" uniqueid=\"fi-wKeLh-509\" showbydefault=\"false\" hideable=\"false\"/><field id=\"PayrollDiscountDescription__ui\" hideable=\"false\" uniqueid=\"fi-3FyKdk-536\" valuehalign=\"\" type=\"\" showbydefault=\"false\"/><field id=\"QBODiscountDescription__ui\" hideable=\"false\" uniqueid=\"fi-3FyKdk-535\" valuehalign=\"\" type=\"\" showbydefault=\"true\"/></fields><rowactions><action type=\"multi\" label=\"Select Offer\" icon=\"fa-circle-o\" snippet=\"updateUpgradeAssetInfo\"><actions/></action></rowactions><massactions usefirstitemasdefault=\"true\"/><views/><searchfields/><renderconditions logictype=\"and\"/></skootable></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" margin=\"\"><styles><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/><styleitem property=\"min-height\" value=\"37vh\"/></styles></wrapper><template multiple=\"false\" uniqueid=\"sk-3vjWlX-1915\" allowhtml=\"true\"><contents>&lt;span style=\"font-style:normal; color:red; font-size:8pt; font-weight:bold; display:none;\" class=\"productErrorMsg\"&gt;*Select a product first&lt;/span&gt;</contents></template><pagetitle model=\"AssetModel\" uniqueid=\"sk-3xzPEW-593\"><actions><action type=\"multi\" label=\"Back\" cssclass=\"whiteButton\"><actions><action type=\"blockUI\" message=\"Loading\"/><action type=\"custom\" snippet=\"1PageBack\"/></actions></action><action type=\"multi\" label=\"Next\"><actions><action type=\"custom\" snippet=\"stylePicklist\"/><action type=\"custom\" snippet=\"styleYearPicklist\"><onerroractions><action type=\"blockUI\" message=\"Error in Year Picklist \" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"styleMonthPicklist\"><onerroractions><action type=\"blockUI\" message=\"Error in Month Picklist \" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"ccTokenInit\"><onerroractions><action type=\"blockUI\" message=\"Error in CC Token Initialization\" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"NavigateToStep2\"><onerroractions/></action></actions></action></actions></pagetitle></components><actions/></step><step stepid=\"step2\" steplabel=\"\"><components><grid uniqueid=\"sk-3xtQgN-247\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"50%\"><components><wrapper uniqueid=\"sk-1e9Dsa-732\"><components><wrapper uniqueid=\"sk-284ktN-3038\"><components><template multiple=\"false\" uniqueid=\"sk-284nd6-3048\" allowhtml=\"true\"><contents>&lt;span style=\"font-size:22px; font-weight:bold\"&gt;Billing Address&lt;/span&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles></wrapper><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"BillingAddress\" buttonposition=\"\" uniqueid=\"billingAddressInfo\" mode=\"edit\" layout=\"above\"><columns><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\" cssclass=\"\"><template>&lt;span style=\"font-style:normal; color:red; font-size:12pt; font-weight:bold\" class=\"billingAddreswsError\"&gt;Missing Required Field Values&lt;/span&gt;</template><renderconditions logictype=\"or\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"skipandnorender\" field=\"errorStatus\" value=\"AddressValuesMissing\" enclosevalueinquotes=\"true\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingAddress\" sourcetype=\"fieldvalue\" field=\"RequiredError__ui\" value=\"FieldsMissing\"/></renderconditions><enableconditions/></field><field id=\"Name\" valuehalign=\"\" type=\"\" required=\"true\"><label>Billing Address</label></field><field id=\"City__c\" valuehalign=\"\" type=\"\"/></fields><renderconditions logictype=\"and\"/></section></sections></column><column width=\"100%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><columns layoutmode=\"fixed\"><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"State__c\" valuehalign=\"\" type=\"CUSTOM\" cssclass=\"picklistCustom picklistMonth picklistState\" readonly=\"false\" required=\"true\" snippet=\"picklistState\"/></fields></section></sections></column><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Postal_Code__c\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"fixedZipWidth\"><label>Zip</label></field></fields><renderconditions logictype=\"and\"/></section></sections></column></columns></fields></section></sections></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"\" margin=\"right,\"><styles><styleitem property=\"margin-right\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components></division><division behavior=\"specified\" verticalalign=\"top\" width=\"50%\"><components><wrapper uniqueid=\"cardInfoWrapper\"><components><wrapper uniqueid=\"sk-3zLVx4-343\"><components><template multiple=\"false\" uniqueid=\"sk-3zLTO6-339\" allowhtml=\"true\"><contents>&lt;span style=\"font-size:22px; font-weight:bold\"&gt;Credit Card Information&lt;/span&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles></wrapper><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"BillingProfile\" buttonposition=\"\" uniqueid=\"sk-3zLdJ9-356\" mode=\"edit\" layout=\"above\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\"><template>&lt;span style=\"font-style:normal; color:red; font-size:12pt; font-weight:bold\" class=\"creditCardError\"&gt;Missing Required Field Values&lt;/span&gt;</template><renderconditions logictype=\"or\" onhidedatabehavior=\"keep\"><rendercondition type=\"multiple\" operator=\"in\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"skipandnorender\" field=\"errorStatus\" value=\"\" enclosevalueinquotes=\"true\"><values><value>invalidCC</value><value>invalidYear</value><value>invalidCVV</value><value>requiredValuesMissing</value></values></rendercondition></renderconditions><enableconditions logictype=\"and\"/></field><field id=\"Payment_Method__c\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"newUserPicklist paymentMethod\"><label>&lt;span style=\"color:white\"&gt;Payment Method&lt;/span&gt;</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"param\" sourceparam=\"country\" value=\"United Kingdom\"/></renderconditions><enableconditions/></field><field id=\"Name_of_Credit_Card__c\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"existingDisabled labelWidthFull\"><label>Name on Card</label></field><field id=\"CreditCardNumber_ui\" valuehalign=\"\" type=\"\" cssclass=\"addCCImages cardNumberEdit\" required=\"true\" readonly=\"false\"><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"false\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"isUsingExisting__ui\" value=\"false\"/></renderconditions><enableconditions/></field><field id=\"ExistingCardNo__ui\" valuehalign=\"\" type=\"\" cssclass=\"cardNumberreadOnly\"><label>Card Number</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"false\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"isUsingExisting__ui\" value=\"true\"/></renderconditions><enableconditions/></field></fields></section><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><columns layoutmode=\"fixed\" columngutter=\"4px\" rowgutter=\"4px\"><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Expiry_Month__c\" showhelp=\"false\" valuehalign=\"\" type=\"\" cssclass=\"picklistCustom picklistMonth existingDisabled labelWidthFull\" readonly=\"false\" required=\"true\"><label>Expires On</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"Payment_Method__c\" value=\"Credit Card\"/></renderconditions><enableconditions/></field></fields></section></sections></column><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Expiry_Year__c\" valuehalign=\"\" type=\"CUSTOM\" cssclass=\"picklistCustom picklistMonth existingDisabled cardYear\" snippet=\"picklistYear\" required=\"true\"><label>&lt;span style=\"color:white\"&gt;*&lt;/span&gt;</label></field></fields></section></sections></column></columns></fields></section><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><columns layoutmode=\"fixed\"><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Credit_Card_Verification_Number__c\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"labelWidthFull\"><label>Security Code</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"Payment_Method__c\" value=\"Credit Card\"/></renderconditions><enableconditions/></field></fields></section></sections></column><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields/></section></sections></column></columns></fields></section></sections></column></columns></basicfieldeditor></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid><buttonset uniqueid=\"sk-2xxG-B-426\" model=\"AssetModel\" position=\"\" cssclass=\"textAlignRight \"><buttons><button type=\"multi\" label=\"Back\" cssclass=\"whiteButton\"><actions><action type=\"custom\" snippet=\"moveToStepOne\"/></actions></button><button type=\"multi\" label=\"Submit\"><actions><action type=\"custom\" snippet=\"validateBillingAddressAndProfile\"/></actions></button></buttons><renderconditions logictype=\"and\"/></buttonset></components><actions/></step><step stepid=\"step3\" steplabel=\"\"><components><grid uniqueid=\"sk-3BQst7-304\"><divisions><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components/></division><division behavior=\"fit\" verticalalign=\"center\"><components><image source=\"staticresource\" uniqueid=\"sk-3BP9w_-243\" resource=\"customIcons\" path=\"customIcons/EndOfFlowIcons/checkmark_icon_132px.png\" datasource=\"salesforce\" behavior=\"none\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"132px\"/></styles></styleitem><styleitem type=\"border\"/><styleitem property=\"text-align\" value=\"center\"/></styles><renderconditions logictype=\"and\"/></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components/></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"padding\" value=\"20px\"/></styles></grid><grid uniqueid=\"sk-3Beg-f-461\"><divisions><division behavior=\"flex\" minwidth=\"100px\" ratio=\"1\"><components/></division><division behavior=\"fit\" verticalalign=\"top\"><components><template multiple=\"false\" uniqueid=\"sk-3BSJ2d-374\" allowhtml=\"true\"><contents>&lt;span style=\"font-size: 1.5em; font-weight: bold\"&gt;Subscribe Request Complete&lt;/span&gt;</contents></template></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components/></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid><grid uniqueid=\"sk-3Bex8W-475\"><divisions><division behavior=\"flex\" minwidth=\"100px\" ratio=\"1\"><components/></division><division behavior=\"fit\" verticalalign=\"top\"><components><template multiple=\"false\" uniqueid=\"sk-3Bez49-484\"><contents>Processing the subscription could take up to 1-2 minutes.\nYou may need to refresh the table to see the changes.</contents></template><wrapper uniqueid=\"sk-3BftjU-538\"><components><template multiple=\"false\" uniqueid=\"sk-1YKfx7-1403\" model=\"AssetModel\" allowhtml=\"true\"><contents>&lt;a href=\"javascript:moveBackToAccount();\"&gt;Return to {{{Account.Name}}}&lt;/a&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"30px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/><styleitem property=\"text-align\" value=\"center\"/></styles></wrapper></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components/></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"padding-top\" value=\"20px\"/></styles></grid></components><actions/></step><step stepid=\"step4\" steplabel=\"\"><components><grid uniqueid=\"sk-3BQst7-305\"><divisions><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components/></division><division behavior=\"fit\" verticalalign=\"center\"><components><image source=\"staticresource\" uniqueid=\"sk-3BP9w_-244\" resource=\"customIcons\" path=\"EndOfFlowIcons/Warning_132.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"132px\"/></styles></styleitem><styleitem type=\"border\"/><styleitem property=\"text-align\" value=\"center\"/></styles><renderconditions logictype=\"and\"/></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components/></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"padding\" value=\"20px\"/></styles></grid><grid uniqueid=\"sk-3Beg-f-462\"><divisions><division behavior=\"flex\" minwidth=\"100px\" ratio=\"1\"><components/></division><division behavior=\"fit\" verticalalign=\"top\"><components><template multiple=\"false\" uniqueid=\"sk-3BSJ2d-375\" allowhtml=\"true\"><contents>&lt;span style=\"font-size: 1.5em; font-weight: bold\"&gt;{{#$Param.optn}}Opt In{{/$Param.optn}}{{#$Param.sub}}Resubscribe{{/$Param.sub}} Request Unsuccessful&lt;/span&gt;</contents><renderconditions logictype=\"and\"/></template></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components/></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid><grid uniqueid=\"sk-3Bex8W-476\"><divisions><division behavior=\"flex\" minwidth=\"100px\" ratio=\"1\"><components/></division><division behavior=\"fit\" verticalalign=\"top\"><components><template multiple=\"false\" uniqueid=\"sk-3Bez49-485\" model=\"\"><contents>{{ErrorMessage__ui}}\n</contents></template><wrapper uniqueid=\"sk-3BftjU-539\"><components><pagetitle uniqueid=\"sk-3BfQoY-515\" model=\"AssetModel\" cssclass=\"wideButton\"><actions><action type=\"custom\" label=\"Close\" window=\"parent\" cssclass=\"\" url=\"/{{AccountId}}\" snippet=\"redirectToAccountDetail\"><hotkeys/><renderconditions logictype=\"and\"/><enableconditions/></action></actions><renderconditions logictype=\"and\"/></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"40px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components/></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"padding-top\" value=\"20px\"/><styleitem property=\"padding-bottom\" value=\"10px\"/></styles></grid></components><actions/></step></steps></wizard></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles></wrapper></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\" borders=\"bottom,right,left,\" padding=\"bottom,right,left,\"><styles><styleitem property=\"border-left\" value=\"10px solid transparent\"/><styleitem property=\"border-right\" value=\"10px solid transparent\"/><styleitem property=\"border-bottom\" value=\"10px solid transparent\"/><styleitem property=\"padding-left\" value=\"10px\"/><styleitem property=\"padding-right\" value=\"10px\"/><styleitem property=\"padding-bottom\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper></components><resources><labels/><javascript><jsitem location=\"inline\" name=\"Pageinit\" cachelocation=\"false\" url=\"\">var registerSnippet = skuid.snippet.register;\n(function(skuid){\n\tvar $ = skuid.$;\n\tskuid.page.params.isInConsole = typeof(srcUp) == 'function';//is the page in console.\n\t\n    // ================= CareConsoleRedirection ====================\n\t// Inputs: Url to Redirect,Detail to be shown on tab,should be new tab or sub tab\n\t// Outputs: None\n\t// Description: takes the input and perform care console\n\t//              redirection\n\t// ======================================================\n    skuid.snippet.registerSnippet('careConsoleRedirection', function(url,detail,isNewTab,isCloseCurrentSubTab) {\n        careConsoleRedirection(url,detail,isNewTab,isCloseCurrentSubTab);\n    });\n\t\n\t$(document.body).one('pageload',function(){\n\t    var onlineSalesKeyModel = skuid.$M('OnlineSalesKey').getFirstRow();\n\t    //skuid.page.params.isProduction = skuid.$L('OnlineSales_ProductionOrg');\n\t    skuid.page.params.isProduction = onlineSalesKeyModel.Value__c;\n\t    subscribeExitPopupEvent();\n\t    skuid.$.blockUI();\n\t\tgetEligibleOffers();\n\t\tregisterGenericValidateFields();\n\t});\n\t\n\tfunction careConsoleRedirection(url,detail,isNewTab,isCloseCurrentSubTab){\n\t    if(isNewTab){\n            sforce.console.openPrimaryTab(null, url, true, detail, null, null);\n        }else{\n             var openSubtab = function(result) {\n                sforce.console.openSubtab(result.id, url, true, detail, null);\n            };\n            sforce.console.getEnclosingPrimaryTabId(openSubtab);\n        }\n        \n        if(isCloseCurrentSubTab){\n            var closeSubtab = function closeSubtab(result) {\n                sforce.console.closeTab(result.id);\n            };\n            sforce.console.getEnclosingTabId(closeSubtab);\n        }\n\t}\n\t\n})(skuid);\n\nfunction getEligibleOffers(){\n    var assetModel = skuid.$M('AssetModel').getFirstRow();\n    console.log('OptinSubscribeQBOCompanyServiceHelper.getEligibleOffers('+skuid.page.params['call']+','+assetModel.AccountId+')');\n    OptinSubscribeQBOCompanyServiceHelper.getEligibleOffers(skuid.page.params['call'],assetModel.AccountId,skuid.page.params['id'],function(result, event){\n        if (event.status === true){\n            console.log(result);\n            console.log(event);\n            if(!result.isError){\n                skuid.$.unblockUI();\n                var products = result.products.reverse();\n                console.log(products);\n                skuid.$M('UpgradeTable').abandonAllRows();\n    \t\t\tskuid.$.each(products,fetchupgradeInformation);\n    \t\t\tif(products.length ==1 ){\n    \t\t\t    skuid.$('#UpgradeTable table thead tr th:first').css('display','none');\n    \t\t\t    skuid.$('#UpgradeTable table tbody tr td:first').css('display','none');\n    \t\t\t}\n            }else{\n                alert(result.errorMessage);\n                //parent.closeDialog();\n                moveBackToAccount()\n            }\n        }\n        highlightRow();\n        skuid.$('#UpgradeTable table tbody tr:first').click();\n    });\n}\n\nfunction fetchupgradeInformation(index,product){\n    var upgradeTableModel = skuid.$M('UpgradeTable');\n    var upgradeTableRow = {};\n    var newRow = upgradeTableModel.createRow();\n    upgradeTableRow[newRow.Id] = ({ Name__ui : product.productName,\n    \t\t\t\t\t\t\t\tQBOOriginal__ui : product.QBOactualPriceString,\n    \t\t\t\t\t\t\t\tQBODiscount__ui : product.QBOdiscountPriceString,\n    \t\t\t\t\t\t\t\tPayrollOriginal__ui : product.payrollactualPriceString,\n    \t\t\t\t\t\t\t\tPayrollDiscount__ui : product.payrolldiscountPriceString,\n    \t\t\t\t\t\t\t\tQBODiscountDescription__ui : product.QBODiscountDescriptrion,\n    \t\t\t\t\t\t\t\tPayrollDiscountDescription__ui : product.payrollDiscountDescriptrion,\n    \t\t\t\t\t\t\t\tBillingStartDate__ui :product.billingStart,\n    \t\t\t\t\t\t\t\tIsWithPayroll__ui : product.isPayrollAdded,\n    \t\t\t\t\t\t\t\tQBOPricebookEntryId__ui : product.QBOPricebookEntryId,\n    \t\t\t\t\t\t\t\tpayrollPricebookEntryId__ui : product.payrollPricebookEntryId,\n    \t\t\t\t\t\t\t\tofferingIdValue__ui : product.offeringIdValue,\n    \t\t\t\t\t\t\t\tQBOpayablePrice__ui : product.QBOpayablePrice,\n    \t\t\t\t\t\t\t\tpayrollPayablePrice__ui : product.payrollPayablePrice\n\t\t\t\t\t\t        });\n    upgradeTableModel.updateRows(upgradeTableRow);\n    skuid.$('.currency').html(product.currncy);\n}\n\nfunction registerGenericValidateFields(){\n    var $ = skuid.$;\n    registerSnippet('genericValidateFields',function(models)\n\t{\n         var messages = [];\n         \n         $.each(models,function(i,model)\n         {\n            $.each(model.registeredLists,function(j,list)\n            {\n                var listMessages = list.validateRequiredFields();\n                if(listMessages &amp;&amp; listMessages.length) \n                {\n                    $.each(listMessages,function(){\n                  messages.push(this); \n               });\n           }\n            });\n        });\n    \n        // If we have warning messages, do NOT proceed\n        if (messages.length) \n        {\n            // Have our step's editor handle the messages\n            return false;\n        }\n        else {return true;}\n\t});\n}\n\nfunction highlightRow() {\n\t    \n    // ======================================\n    // Set up models and table component\n    // ======================================\n    var tableName = ['#UpgradeTable'];\n\n    // ======================================\n    // Highlight the row based on user click\n    // ======================================\n    // For each table row, add CSS class 'highlighted-row' on click and fill in circle\n    // Ensure only one row is selected at all times.  Check all other rows and remove selected row classes as needed\n    var selectedRow = '';\n    for (i = 0; i&lt;tableName.length; i++) {\n\t\tskuid.$(tableName[i] + ' table tbody tr').click(function(){\n\t\t    selectedRow = this;\n\t\t    skuid.$(selectedRow).addClass('highlighted-row');\n\t\t    iconElement = skuid.$(selectedRow).find('.nx-skootable-buttonicon');\n\t\t    skuid.$(iconElement).removeClass('fa-circle-o').addClass('fa-dot-circle-o');\n\t\t    for (j = 0; j&lt;tableName.length; j++) {\n    \t\t    // Ensure only one row is selected\n    \t\t    skuid.$(tableName[j] + ' table tbody tr').each(function(){\n    \t\t        if ((this != selectedRow) &amp;&amp; (skuid.$(this).hasClass('highlighted-row'))) {\n    \t\t            skuid.$(this).removeClass('highlighted-row');\n    \t\t            iconElement = skuid.$(this).find('.nx-skootable-buttonicon');\n    \t\t            skuid.$(iconElement).removeClass('fa-dot-circle-o').addClass('fa-circle-o');\n    \t\t        }\n    \t\t    });\n\t\t    updateUpgradeAssetInfo();\n\t\t    }\n\t\t});\n    }\n}\n\nfunction createOpportunityWithLineItem(callbackFunction){\n    //Start BTBS-5705\n    var opportunityId='';\n    /*if((newOpportunityModel.getFirstRow() == undefined || newOpportunityModel.getFirstRow().Id15.length != 15) \n            &amp;amp;&amp;amp; skuid.page.params['call'].toUpperCase() !== 'OPTIN')*/\n    if(skuid.page.params['call'].toUpperCase() !== 'OPTIN'){\n        skuid.$M('PricebookEntryLookup').load(function(){\n            \n            var pricebookEntryLookupDataMap = skuid.$M('PricebookEntryLookup').dataMap;\n            \n            var assetModelData = skuid.$M('AssetModel').getFirstRow();\n            \n            var upgradeAssetData = skuid.$M('UpgradeAsset').getFirstRow();\n            \n            var userDate = skuid.$M('CurrentDate').createRow().CurrentDate__ui;\n            var oppID='';\n            \n            oppRow=skuid.$M('NewOpportunity').getFirstRow();\n            console.log('oppRow:'+oppRow);\n            if(oppRow!==undefined &amp;&amp; oppRow!=null){\n                 console.log('OppRow'+oppRow.Id);\n                oppID=oppRow.Id;\n                console.log('opportunity id:'+oppID);\n            }\n                \n            console.log('calling Remote action updateOpportunitywithLineItem');\n            var accId=assetModelData.AccountId;\n             currencyISOCode=assetModelData.Account.CurrencyIsoCode,\n             priceBookId='',\n             qboPayablePrice='',\n             payrollPrice='',\n             qboPricebookEntryId='',\n             payrollPricebookEntryId='',\n             assetId=assetModelData.Id;\n             \n             \n             if(upgradeAssetData.QBOpayablePrice__ui!==undefined &amp;&amp; upgradeAssetData.QBOpayablePrice__ui!==null)\n             {qboPayablePrice=upgradeAssetData.QBOpayablePrice__ui;}\n             \n             if(upgradeAssetData.payrollPayablePrice__ui!==undefined &amp;&amp; upgradeAssetData.payrollPayablePrice__ui!==null)\n             {payrollPrice=upgradeAssetData.payrollPayablePrice__ui;}\n             \n             if(upgradeAssetData.QBOPriceBookEntryId__ui!==undefined &amp;&amp; upgradeAssetData.QBOPriceBookEntryId__ui!==null)\n             {qboPricebookEntryId=upgradeAssetData.QBOPriceBookEntryId__ui;}\n             \n             if(upgradeAssetData.PayrollPriceBookEntryId__ui!==undefined &amp;&amp; upgradeAssetData.PayrollPriceBookEntryId__ui!==null)\n             {payrollPricebookEntryId=upgradeAssetData.PayrollPriceBookEntryId__ui;}\n             \n             if(pricebookEntryLookupDataMap[upgradeAssetData.QBOPriceBookEntryId__ui].Pricebook2Id!==undefined &amp;&amp; pricebookEntryLookupDataMap[upgradeAssetData.QBOPriceBookEntryId__ui].Pricebook2Id!==null)\n             {priceBookId=pricebookEntryLookupDataMap[upgradeAssetData.QBOPriceBookEntryId__ui].Pricebook2Id;}\n                 \n                \n                console.log('Parameters for opp and line item creation:'+accId,\n                            oppID,\n                            currencyISOCode,\n                            priceBookId,\n                            qboPayablePrice,\n                            payrollPrice,\n                            qboPricebookEntryId,\n                            payrollPricebookEntryId,\n                            assetId);\n                \n            OptinSubscribeQBOCompanyServiceHelper.updateOpportunitywithLineItem(accId,oppID,currencyISOCode,priceBookId,qboPayablePrice,payrollPrice\n                           ,qboPricebookEntryId,payrollPricebookEntryId,assetId, function(result,event)\n            {\n                console.log('opp result'+result);\n                console.log('Opp event:'+event);\n                if (event.status === true){\n                    \n                    \n                            if(result.length===15){\n                                 opportunityId=result[0];\n                                 console.log('updated Opportunity:'+opportunityId);\n                                 \n                            }\n                }\n                else\n                {\n                    alert(result.errorMessage);\n                    //parent.closeDialog();\n                    moveBackToAccount();\n                }\n            });\n            \n           //End BTBS-5705\n        });\n    }else if(skuid.page.params['call'].toUpperCase() === 'OPTIN'){\n        callbackFunction('');\n    }\n     //Start BTBS-5705\n     // Fixed BTBS-5920\n    if(opportunityId!==undefined &amp;&amp; opportunityId!==null &amp;&amp; skuid.page.params['call'].toUpperCase() !== 'OPTIN'){\n        callbackFunction(opportunityId);\n        \n    }\n   /* else\n    {\n        callbackFunction('');\n    }*/\n    //End BTBS-5705\n}\n\nfunction updateOpportunityClosedWon(response){\n    var opportunityModel = skuid.$M('NewOpportunity');\n    var opportunityModelRow = opportunityModel.getFirstRow();\n    \n    if(response.isSuccess &amp;&amp; skuid.page.params['call'].toUpperCase() !== 'OPTIN'){\n        opportunityModel.updateRow(opportunityModelRow, 'StageName', 'Closed Won');\n        skuid.$.when(opportunityModel.save()).done(function(){\n            moveToView(newOpportunityModel.getFirstRow().Id);\n        });\n    }else{\n        moveToView(response);\n    }\n    \n}\n\nfunction subscribeExitPopupEvent(){\n    skuid.events.subscribe('exitPopup', function(input){\n        var accountModel = skuid.model.getModel('Account');\n        \n        switch(input){\n            case \"AccountID\": \n                            moveBackToAccount();\n                            break;\n            case \"AccountList\": \n                            moveToURL('001/o','Accounts'); \n                            break;\n        }\n    });\n}\n\nfunction moveBackToAccount(){\n    var assetModel = skuid.$M('AssetModel').getFirstRow();\n    var url = '/'+assetModel.AccountId;\n    var detail = assetModel.Account.Name;\n    if(skuid.page.params.isInConsole){\n        skuid.snippet.getSnippet('careConsoleRedirection')(url,detail,false,true);\n    }else{\n        parent.window.location = url\n    }\n}\n\nfunction moveToURL(idToTransfer,nameOfTab){\n    var url = '/'+idToTransfer;\n    if (typeof(srcUp) == 'function'){ //Checks that it is in console\n        var openSubtab = function(result) {\n            sforce.console.openSubtab(result.id, url + '&amp;inConsole=true', true, nameOfTab, null);\n        };\n        sforce.console.getEnclosingPrimaryTabId(openSubtab);\n    \n    } else {\n        parent.window.location = url;\n    }\n}\n\nfunction moveToView(response){\n    console.log(response);\n    wizard = skuid.component.getById('mywizard');\n    if(response.isSuccess){\n        wizard.navigate('step3');\n        skuid.$('.subscribeUpdateInfo').hide();\n    }else if(!response.isSuccess){\n \t\talert(response.code+':'+response.message);\n    }\n    skuid.$.unblockUI();\n}\n</jsitem><jsitem location=\"inlinesnippet\" name=\"NavigateToStep2\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$,\n\twizard = skuid.component.getById('mywizard');\n\t\nvar productsModel = skuid.$M('UpgradeTable');\nvar isProductSelected = false;\n$.each(productsModel.data,function(index,value){\n    console.log(value)\n    if(value.isSelected__ui){\n        isProductSelected = true;\n    }\n});\n\nconsole.log(isProductSelected);\nif(isProductSelected){\n    wizard.navigate('step2');\n    var ccField = $('.addCCImages').find('.nx-field input');\n    if (!ccField.hasClass('addAllCC')) {\n        ccField.addClass('addAllCC');\n    }\n}else{\n    $('.productErrorMsg').css('display','block');\n}</jsitem><jsitem location=\"inlinesnippet\" name=\"ccTokenInit\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\n// =============================================================\n// Description: Function to call the CC tokenization function\n//              on either tabbing or a click outside of the field\n// =============================================================\n\n// Run CC tokenization when tabbing over\n\n$(\".addCCImages :input\").keydown(function(e) {\n    console.log(\"keypressed\");\n    var code = e.keyCode || e.which;\n\n    if (code === 9) {  \n        skuid.snippet.getSnippet('tokenizeCC')();\n    }\n});\n\n// Run CC tokenization if clicked outside of field\n$(document).click(function(e){\n    if (!$(e.target).parent().parent().hasClass('addCCImages')) {\n        if(($('.addCCImages input').val() !== '') &amp;&amp; ($('.addCCImages input').val() !== undefined) &amp;&amp; ($('.addCCImages input').val().substring(0,1) !== '*')){\n            skuid.snippet.getSnippet('tokenizeCC')();\n        }\n    }\n});</jsitem><jsitem location=\"inlinesnippet\" name=\"tokenizeCC\" cachelocation=\"false\">var params = arguments[0],\n    $ = skuid.$,\n    mainDFD = $.Deferred();\n\n// =============================================================\n// Description: Function to tokenize the CC\n// =============================================================\n\n\n// =============================\n// Set up models &amp; variables\n// =============================\nvar bpModel = skuid.model.getModel(\"BillingProfile\");\nvar addressModel = skuid.model.getModel(\"Address\");\nvar ccModel =  skuid.model.getModel(\"CCTokenInfo\");\nvar userModel = skuid.model.getModel(\"UserSelections\");\nvar tokenRow = ccModel.getFirstRow();\n\nvar ccRow = bpModel.getFirstRow();\nvar ccNumber = bpModel.getFieldValue(ccRow,\"CreditCardNumber_ui\");  \nvar cvvCode = bpModel.getFieldValue(ccRow,\"Credit_Card_Verification_Number__c\");\nvar expiryMonth = bpModel.getFieldValue(ccRow,\"Expiry_Month__c\");\nvar expiryYear = bpModel.getFieldValue(ccRow,\"Expiry_Year__c\");\n\nvar paymentType = bpModel.getFieldValue(ccRow,\"Payment_Method__c\");\nvar leadID = skuid.page.params.LeadId;      \nvar accountID = skuid.page.params.AccountId;\n\nvar isSandbox = skuid.page.params.isProduction == \"NO\";\n\nconsole.log('paymentMethod ===',paymentType);\n\nvar sessionID = sforce.connection.sessionId;\n\nvar models = [ addressModel,bpModel ];\n\nvar errorDB = skuid.model.getModel('ErrorDB');  \n\nvar userSelModel = skuid.model.getModel('UserSelections'),      \n    userSelModelRow = userSelModel.getFirstRow();       \n    fromLead = userSelModel.getFieldValue(userSelModelRow, 'FromLead__ui');\n\nvar finalURL = '';\nvar finalAuthHeader = '';\n\nconsole.log(skuid.page.params);\n console.log(' isProduction sandbox ??',!isSandbox);\n bpModel.updateRow(ccRow,{isTokenized_ui:false});\n\nif(isSandbox === true){\n  //IF Sandbox\n  console.log('This is a Sandbox',isSandbox);\n  finalURL = tokenRow.URL_EndPoint__c;\n  finalAuthHeader = tokenRow.URL_Header__c;\n\n}\nelse if (isSandbox === false){\n  //IF Production Env\n  console.log('This is a PRD Env',isSandbox);\n\n  finalURL = \"https://tokenization.platform.intuit.com/v2/creditCard\";\n  finalAuthHeader = \"Intuit_APIKey intuit_apikey=akyresfeRGaTNrZqkpmQbglm9DmlUxGlCAGXnMYX\";\n\n}\nconsole.log('This is a Sandbox123');\n\n//==================\n// Tokenization URL Handling Changes END Here\n//==================\n\nif(paymentType === 'Credit Card'){\n\n// Strip out spaces from input value\nif(ccNumber !== null){\nccNumber = ccNumber.replace( /\\s+/g, \"\" );\n}\n\nvar patt = /^[0-9]*$/gm;\n\nvar flag = true;\n// =============================================\n// Check the CC number is valid a valid number\n//      between 13 - 16 digits long and has not\n//      already been tokenized\n// =============================================\nif ( ccNumber === '' || ccNumber === undefined || ccNumber.toString().length &lt; 13 || ccNumber.toString().length &gt; 16 || (!patt.test(ccNumber)) || ccNumber.substring(0,1) === '*') \n{\n    flag = false;\n    GetErrMsg('');\n    mainDFD.reject();\n    $.unblockUI();\n}\n\n// =============================================\n// If CC number is valid -&gt; determine the card type\n// =============================================\nif(flag === true)\n{\n    if (ccNumber.substring(0,1) === '4') {\n        bpModel.updateRow(ccRow, {ccType__ui: 'Visa'})\n    }\n    else if (ccNumber.substring(0,1) === '3') {\n        bpModel.updateRow(ccRow, {ccType__ui: 'American Express'})\n    }\n    else if (ccNumber.substring(0,1) === '6') {\n        bpModel.updateRow(ccRow, {ccType__ui: 'Discover'})\n    }\n    else {\n        bpModel.updateRow(ccRow, {ccType__ui: 'Master Card'})\n    }\n    \n    // Call tokenization function\n    tokenizeCreditCard(ccNumber);   \n}\n\n$.unblockUI();        \nmainDFD.resolve();\n\n}\n//End of Method\n\n// ==========================\n// Function to tokenize CC\n// ==========================\nfunction tokenizeCreditCard(ccNumber)\n{\n        console.log('tokenizing...')\n        \n        var token = \"\";\n        var isDebug = false;\n        var parsedJSON = \"\";\n        \n        // Call remote function to verify CC number\n        try \n        {\n            var soapMsg = '{ \"cc\":\"' + ccNumber + '\"}'; //json request message\n            sforce.connection.sessionId = sessionID;\n            \n            //console.log('End Point ===',tokenRow.URL_EndPoint__c);\n            //console.log('URL Header ===',tokenRow.URL_Header__c);\n            \n            sforce.connection.remoteFunction({\n                \n                // For Non Production following line of code should be used and the Production URL line of code should be commented\n                \n                //url : tokenRow.URL_EndPoint__c,\n                \n                url : finalURL,\n                \n                // For Production following line of code should be used and above one line should be commented out\n                //url : \"https://tokenization.platform.intuit.com/v2/creditCard\",\n                \n                //In the following request header For Non Production the Authorization value should be 'tokenRow.URL_Header__c' Where as for Production\n                // it should be \n                //   \"Authorization\": \"Intuit_APIKey intuit_apikey=akyresfeRGaTNrZqkpmQbglm9DmlUxGlCAGXnMYX\"\n                //   \"Authorization\": tokenRow.URL_Header__c\n                \n                requestHeaders: \n                { \n                    \"Content-Type\": \"Application/json\",\n                    \"Authorization\": finalAuthHeader\n                },\n                    mimeType: \"text/plain\",\n                    requestData: soapMsg,\n                    method: \"POST\",\n                    async: false,\n                onSuccess: function(response)\n                {   \n                    console.log('I am in Success @response === ',response);\n                    \n                    parsedJSON = $.parseJSON(response);\n                    var cc = parsedJSON.cc;\n                    var CCToken = parsedJSON.ccToken;\n                    \n                    console.log('from ONSUCCESS callback after parse RECEIVED CCToken = ',CCToken);\n                    \n                    // If card is valid, tokenize the number\n                    if ( CCToken !== undefined &amp;&amp; CCToken!== ''){\n                        \n                        var lastDigits = CCToken.substring(CCToken.length - 4,CCToken.length);\n                        var ccFormat = \"**** **** **** \"+lastDigits;\n                        \n                        bpModel.updateRow(ccRow,\n                            {\n                                Credit_Card_Number__c:CCToken,\n                                CreditCardNumber_ui : ccFormat,\n                                isTokenized_ui:true\n                                \n                            });\n                        errorMsg = '';\n                        userModel.updateRow(userModel.getFirstRow(), {errorStatus: null});\n                        \n                        // Update format\n                        $('.addPadding').css('padding-top', '10px');\n                        skuid.snippet.getSnippet('updateCCIcon')();\n                        \n                    } \n                    else { console.log('error message on failure2');/* Do Nothing! */ }\n                   \n                    $.unblockUI();  mainDFD.resolve();\n                },\n                onFailure: function(response)\n                { \n                   console.log('error message on failure');\n                   console.log('Failure Response:',response);\n                    \n                    var errorMsg = GetErrMsg(response);\n                    console.log(errorMsg);\n\n                    //Log the errorMsg into ErrorDB     \n                    errorDB.createRow({     \n                    additionalConditions:[          \n                        {field : 'Detail_Message__c',value :errorMsg },     \n                        {field: 'Error_Code__c', value : ''},       \n                        {field: 'Error_Description__c', value: 'TOKENIZATION CALL FAILED'},     \n                        {field: 'SFDCId__c',value : (fromLead)? leadID : accountID}         \n                    ]});        \n            \n                    errorDB.save();\n                    \n                    mainDFD.reject();   $.unblockUI();\n                }\n            });\n        } \n        catch(exception) {  \n            console.log(exception);\n            errorDB.createRow({     \n                    additionalConditions:[          \n                        {field : 'Detail_Message__c',value :exception.message },        \n                        {field: 'Error_Code__c', value : 'Tokenization Exception'},     \n                        {field: 'Error_Description__c', value: exception.stack},        \n                        {field: 'SFDCId__c',value : (fromLead)? leadID : accountID}         \n                    ]});        \n            \n            errorDB.save();     \n        }//End-of-Catch\n            \n    }\n    // If there's an error in the CC tokenization, parse out the message\n    function GetErrMsg(msg)\n    { \n           var errMessage = \"There was an error tokenizing the credit card. \";\n           \n           try {\n                if (msg === null || msg === ''){\n                    return \"There was an error tokenizing the credit card. \";\n                    \n                    }\n                    else \n                    {\n                         var parsedJSON = JSON.parse(msg);\n                         var errCode = parsedJSON.code;\n                         errMessage = parsedJSON.message;\n                    \n                        if (errCode !== null &amp;&amp; errCode !== '') \n                        {\n                            if (errCode &gt; 399 &amp;&amp; errCode &lt; 500) \n                            {\n                                console.log('Error Code = ',errCode , 'Error Message = ',errMessage);\n                                errorMsg = \" * An unexpected error occurred. Please contact your administrator for assistance\";\n                            } \n                            else \n                            {\n                                errorMsg = ' * Credit Card number is not valid';\n                                userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidCC'});\n                                bpModel.updateRow(ccRow, {CreditCardNumber_ui: ''});\n                                userModel.save();\n                                \n                                // Format field editor\n                                $('.addPadding').css('padding-top', '0px');\n                                skuid.snippet.getSnippet('updateCCIcon')();\n                            }\n                        } \n                        else \n                        { //if errCode is blank\n                            errorMsg = \"There was an error tokenizing the credit card. \";\n                            console.log('Failure Response:',msg);\n                        }\n                        \n                        return errorMsg;\n                    }\n            } \n            catch ( ex ) \n            {\n                console.log( \"getErrMsg caught exception: '\" , ex );\n                errMessage += \"Error parsing response from server. \"+ex;\n                return errMessage;\n            }\n        }\n    \nreturn mainDFD.promise();\n</jsitem><jsitem location=\"inlinesnippet\" name=\"updateCCIcon\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\n// ===================================================\n// Description: This function adds the Credit Card\n//              type (Visa, Mastercard, Discover or AMEX)\n//              to the credit card field and the green check\n//              (valid) or the red error icon (if the card\n//              is invalid)\n// ===================================================\n\n// Set up models\nvar userModel = skuid.model.getModel('UserSelections'),\n    userRow = userModel.getFirstRow(),\n    errorStatus = userModel.getFieldValue(userRow, 'errorStatus');\n\nvar billingModel = skuid.model.getModel('BillingProfile'),\n    billingRow = billingModel.getFirstRow(),\n    ccType = billingModel.getFieldValue(billingRow, 'ccType__ui');\n\n    billingModel.updateRow(billingRow, {Credit_Card_Type__c: ccType}); \n    //billingModel.save();\n\nvar ccField = $('.addCCImages').find('.nx-field input');\nvar ccFieldtext = $('.addCCImages').find('.nx-fieldtext');\n\n// Update icon based on CC number\nccField.removeClass();\n\nif (ccType === 'Visa') { \n    if (errorStatus === null) {\n        ccField.addClass('addVisaCheck');\n        ccFieldtext.addClass('addVisaCheck')\n    }\n    else {\n        ccField.addClass('addVisaError');\n        ccFieldtext.addClass('addVisaError')\n    }\n}\nelse if (ccType === 'American Express') {\n    if (errorStatus === null) {\n        ccField.addClass('addAmexCheck');\n    }\n    else {\n        ccField.addClass('addAmexError');\n    }\n}\nelse if (ccType === 'Discover') {\n    if (errorStatus === null) {\n        ccField.addClass('addDiscoverCheck');\n    }\n    else {\n        ccField.addClass('addDiscoverError');\n    }\n}\nelse {\n    if (errorStatus === null) {\n        ccField.addClass('addMastercardCheck');\n    }\n    else {\n        ccField.addClass('addMastercardError');\n    }\n}</jsitem><jsitem location=\"inlinesnippet\" name=\"picklistYear\" cachelocation=\"false\">var field = arguments[0],\n    value = arguments[1],\n\t$ = skuid.$;\n\n// =========================================================\n// Description:  Function to populate the year picklist\n// =========================================================\n\nvar picklistEntries = field.metadata.picklistEntries;\nvar currentYear = (new Date()).getFullYear();\nvar optionYear = 0;\n\npicklistEntries.length = 0; //This is to clear the default Year value (to avoid undefined runtime issue)\n\nif (picklistEntries.length === 0) {\n    //Make Default as Blank Value Since this is going as \"None Selecetd\" for UK Case\n    picklistEntries.push({value: '', label: 'year', defaultValue: true, active: true}); \n    \n    for (i=0; i&lt;10; i++) {\n        optionYear = currentYear + i;\n        picklistEntries.push({value: optionYear, label: optionYear, defaultValue: false, active: true});\n    }\n}\n\nskuid.ui.fieldRenderers[field.metadata.displaytype][field.mode](field,value);</jsitem><jsitem location=\"external\" name=\"AJAXKit\" cachelocation=\"false\" url=\"/soap/ajax/36.0/apex.js\">var params = arguments[0],\n\t$ = skuid.$;\n</jsitem><jsitem location=\"inlinesnippet\" name=\"paymentRequiredFieldsValidation\" cachelocation=\"false\">\nvar params = arguments[0],\n    $ = skuid.$,\n    mainDFD = $.Deferred();\n\n// ========================================================\n// Description:  This is for verification of address and\n//               CC info at the end of Step 3\n// ========================================================\n\n// =============================\n// Set up Billing / CC models\n// =============================\nvar bpModel = skuid.model.getModel(\"BillingProfile\");\nvar addressModel = skuid.model.getModel(\"BillingAddress\");\nvar ccModel =  skuid.model.getModel(\"CCTokenInfo\");\nvar userModel = skuid.model.getModel(\"UserSelections\");\nvar newUserModel = skuid.model.getModel(\"NewUser\");\n\nvar ccRow = bpModel.getFirstRow();\nvar ccNumber = bpModel.getFieldValue(ccRow,\"CreditCardNumber_ui\");  \nvar cvvCode = bpModel.getFieldValue(ccRow,\"Credit_Card_Verification_Number__c\");\nvar expiryMonth = bpModel.getFieldValue(ccRow,\"Expiry_Month__c\");\nvar expiryYear = bpModel.getFieldValue(ccRow,\"Expiry_Year__c\");\nvar isTokenized=bpModel.getFieldValue(ccRow,\"isTokenized_ui\");\nconsole.log('IsTokenized:'+isTokenized);\n\nvar models = [ bpModel ];\n$('.creditCardError').hide();\n\nvar paymentType = bpModel.getFieldValue(ccRow,\"Payment_Method__c\");\nvar ccType = bpModel.getFieldValue(ccRow, 'ccType__ui');\n\nconsole.log('paymentMethod ===',paymentType);\n\nif(paymentType === 'Credit Card'){\n    \n    // Strip out spaces from input value\n    if(ccNumber !== null){\n    ccNumber = ccNumber.replace( /\\s+/g, \"\" );\n    }\n    \n    \n    var currentYear = (new Date()).getFullYear();\n    \n    // Clear out error codes\n    userModel.updateRow(userModel.getFirstRow(), {errorStatus: null});\n    \n    // =============================\n    // Validate the CVV and Exp Date\n    // =============================\n    console.log('From payment Validation CVVCode =',cvvCode);\n    console.log('From payment Validation expYear =',expiryYear);\n    //var models = [ addressModel,bpModel ];\n    \n    var fieldsNOTEmpty = skuid.snippet.get('genericValidateFields')(models);\n    console.log('fieldsNOTEmpty'+fieldsNOTEmpty)\n    console.log(fieldsNOTEmpty)\n    if(!isTokenized){\n         console.log('Tokenization failed');\n                userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidCC'});\n                userModel.save();\n                //$('.creditCardError').html('Please Enter correct credit card Number');\n                mainDFD.reject();\n                $.unblockUI();\n    }else if(!fieldsNOTEmpty){\n        if(expiryYear === null){\n            console.log('KV3 Please Enter a Valid Year',expiryYear);\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidYear'});\n            userModel.save();\n            $('.creditCardError').html('Please Enter a Valid Year');\n            mainDFD.reject();   $.unblockUI();\n        }        \n         else if (expiryYear.toString().length &lt; 4 || expiryYear.toString().length &gt; 4 || (expiryYear &lt; currentYear)) \n                {\n                    console.log('3 Please Enter a Valid Year');\n                    userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidYear'});\n                    userModel.save();\n                    $('.creditCardError').html('Please Enter a Valid Year');\n                    mainDFD.reject();   $.unblockUI();\n                }\n        if(cvvCode === null){\n            console.log('KV2 Please Enter a Valid 3-4 Digit CVV Number',cvvCode);\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidCVV', Error__ui:'Please Enter a Valid 3-4 Digit CVV Number'});\n            userModel.save();\n            $('.creditCardError').html('Please Enter a Valid 3-4 Digit CVV Number');       \n            mainDFD.reject();   $.unblockUI();\n        }\n        else if ( (cvvCode === '' || cvvCode === undefined || cvvCode.toString().length &lt; 3 || cvvCode.toString().length &gt;= 4) &amp;&amp; ccType !== 'American Express') \n                {\n                    console.log('2 Please Enter a Valid 3-4 Digit CVV Number');\n                    userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidCVV'});\n                    userModel.save();\n                    $('.creditCardError').html('Please enter correct card information');\n                    mainDFD.reject();   $.unblockUI();\n                }\n               \n        else{\n                    userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'requiredValuesMissing'});\n                    userModel.save();\n                    //$('.creditCardError').html('Missing Required Field Values');\n                    \n            mainDFD.reject();   \n            $.unblockUI();   \n        }\n    \n    }\n}\nelse if(paymentType === 'Debit Card'){\n    var fieldsNOTEmpty = skuid.snippet.get('genericValidateFields')(models);\n\n    if(fieldsNOTEmpty === false){\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'requiredValuesMissing'});\n               if(errMsgReceived!=null)\n            {\n                 $('.creditCardError').html('Missing Required Field Values');\n            }\n            userModel.save();\n            mainDFD.reject();   \n            $.unblockUI();   \n    }\n    else{\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus : null,success_ui: 'true'});\n            \n    }\n    \n}\n\n// =============================\n// Validate the Billing Address and Save Billing address\n// Save Billing Profile\n// Create the company and publish the results of new company created\n// =============================\n\nvar results = skuid.snippet.getSnippet('checkAddress')();\n\n    results.done(function() \n        {\n                                var userRow=userModel.getFirstRow();\n                                var errStatus = userModel.getFieldValue(userRow, 'errorStatus');\n                                \n                                console.log('From ABOVE errStatus Block');\n                            \n                            if (errStatus === null)\n                            {\n        \n                                    console.log('From BELOW errStatus Block');\n                                    //Here we should Save the address if User CHECKED the update CheckBox\n                                    //Also check if the SAME Address Exists, if not then save it, else Don't\n                                    \n                                    // =============================\n                                    // Update billing address\n                                    // =============================\n                                   var addressSave = skuid.snippet.getSnippet('updateBillingAddress')();\n                                   var billprofile,companyCreated;    \n                                    //================================\n                                    //Save Billing Profile\n                                    //================================\n                                    addressSave.done(function()\n                                    {\n                                                    console.log('addressSave-DONE',addressSave);\n                                                    billprofile = skuid.snippet.getSnippet('saveBillingProfile')();\n                                                    \n                                                    console.log('Billing Profile Before === DONE',billprofile);\n                                 \n                                        billprofile.done(function()\n                                        {\n                                                  console.log('Billing Profile AFTER ==== DONE',billprofile);\n                                                  //companyCreated = skuid.snippet.getSnippet('CreateCompany')();\n                                        \t\t  \n                                        \t\t  //done\n                                        \t\t // companyCreated.done(function()\n                                                  //{\n                                                    \n                                                           //var userModel = skuid.$M('NewUser'),\n                                                           success = userModel.getFieldValue(userRow, 'success_ui'),\n                                                            errMsgReceived = userModel.getFieldValue(userRow, 'errorMessage_ui');\n                                                           \n                                                            // console.log('From createCompany.done success ===',success);\n                                                    \n                                                            if(!errMsgReceived)\n                                                            {\n                                                             \n                                                              //  console.log('From createCompany.done success IF-Block');\n                                                                $('#orderPopup').click();\n                                                                \n                                                                //Shashi - 07/06/2016 - Commented opty close, will be enabled for July release\n                                                                //skuid.snippet.getSnippet('closeOpportunity')();\n                                                                \n                                                              /*  var popup = $('#orderPopupGrid').parent();\n                                                                // This disables the esc key on the popup\n                                                                $(popup).dialog({ closeOnEscape: false });\n                                                                popup.css('padding', '0px');\n                                                                popup.parent().css('padding', '0px');\n                                                        \n                                                                if (UserModel.getFieldValue(userRow, 'Temp_Pwd') === null) \n                                                                {\n                                                                         popup.parent().css('height', '425px');\n                                                                }\n                                                                else{\n                                                                        popup.parent().css('height', '420px');\n                                                                    }\n                                                                \n                                                                // Add placeholder\n                                                                $('.needPlaceholder .nx-field input, .nx-field textarea').each(function(i, item)\n                                                    \t            {\n                                                                            item.setAttribute(\"placeholder\", \"New Company Name\");\n                                                                    });*/\n                                                        \n                                                                $.unblockUI();\n                                                                mainDFD.resolve();\n                                                            }\n                                                    \n                                                            else{\n                                                                    //alert USER on Error/Failure\n                                                                    console.log('From Else Block of Address and Billing save Result Check: Payment Fields Snippet',errMsgReceived);\n                                                                    //$('.creditCardError').html('Please enter correct card information');\n                                                                   // alert('Oops Something is Wrong!\\n'+errMsgReceived);\n                                                                    mainDFD.reject(); \n                                                                   // $.unblockUI();\n                                                                   \n                                                            \n                                                            }\n                                                \n                                                   // });\n                                                    mainDFD.resolve();\n                            \t\t  \n                                        });\n                                         billprofile.fail(function()\n                                        {   $.unblockUI();\n                                            mainDFD.reject(); \n                                             \n                                        });\n                                        \n                                    });\n        \n        \n        \n                                }\n            \n    \n        });\n\nreturn mainDFD.promise();\n\n\n</jsitem><jsitem location=\"inlinesnippet\" name=\"stylePicklist\" cachelocation=\"false\">// =========================================================\n// Description:  This function is used to style the picklist\n//               fields so they are the same size / shape\n//               as the other fields in the Field Editor. \n// \n// If the default value ('None Selected') is selected, show\n// the value with in grey italics, otherwise, show the value\n// in black normal font.\n// =========================================================\n\n(function(skuid){\n\tvar $ = skuid.$;\n    registerSnippet = skuid.snippet.register;\n    \n    \n    \n    \n    // Style the month picklist\n    skuid.snippet.registerSnippet('styleMonthPicklist', function() {\n        var picklist = $('.picklistMonth').find('.nx-field select');\n        var billingModel = skuid.model.getModel('BillingProfile'),\n            billingRow = billingModel.getFirstRow(),\n            billingMonth = billingModel.getFieldValue(billingRow, 'Expiry_Month__c');\n        if ((billingMonth === 'None Selected') || (billingMonth === '') || (billingMonth === null)) {\n            picklist.addClass('nullValue');\n        }\n        else {\n            picklist.removeClass('nullValue');\n        }\n    });\n    \n    // Style the year picklist\n    skuid.snippet.registerSnippet('styleYearPicklist', function() {\n        var picklist = $('.picklistYear').find('.nx-field select');\n        var billingModel = skuid.model.getModel('BillingProfile'),\n            billingRow = billingModel.getFirstRow(),\n            billingYear = billingModel.getFieldValue(billingRow, 'Expiry_Year__c');\n        if ((billingYear === 'None Selected') || (billingYear === '') || (billingYear === null)) {\n            picklist.addClass('nullValue');\n        }\n        else {\n            picklist.removeClass('nullValue');\n        }\n    });\n    \n    \n})(skuid);</jsitem><jsitem location=\"inlinesnippet\" name=\"validateBillingAddressAndProfile\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\t\n$.blockUI({\n   message: 'Subscribing Product...'\n});\nvar resAddressAndProfileValidation=skuid.snippet.getSnippet('paymentRequiredFieldsValidation')();\n\nresAddressAndProfileValidation.fail(function(){\n    console.log('Failing');\n    return false;\n});\nresAddressAndProfileValidation.done(function(){\n        var billingAddressModel = skuid.$M('BillingAddress');\n        var billingProfileModel = skuid.$M('BillingProfile');\n        var upgradeTableModel = skuid.$M('UpgradeTable');\n        var assetModelRow = skuid.$M('AssetModel').getFirstRow();\n    \n        $.blockUI({\n           message: 'Subscribing Product...'\n        });\n        \n        var addOnValue = '';\n        var QBOPricebookEntryId,payrollPricebookEntryId;\n        skuid.$.each(upgradeTableModel.data,function(index,value){\n            if(value.isSelected__ui &amp;&amp; value.IsWithPayroll__ui){\n                addOnValue = value.offeringIdValue__ui;\n                QBOPricebookEntryId = value.QBOPricebookEntryId__ui;\n                payrollPricebookEntryId = value.PayrollPricebookEntryId__ui;\n            }else if(value.isSelected__ui &amp;&amp; !value.IsWithPayroll__ui){\n                addOnValue = '';\n                QBOPricebookEntryId = value.QBOPricebookEntryId__ui;\n            }\n        });\n        $.blockUI({\n           message: 'Subscribing Product...'\n        });\n        createOpportunityWithLineItem(function(returnValue){\n            console.log('First: optinQboOrder('+billingProfileModel.getFirstRow().Id+','+billingAddressModel.getFirstRow().Id+','+skuid.page.params['call']+')');\n            console.log(assetModelRow.AccountId+' ||  '+billingProfileModel.getFirstRow().Id+' ||  '+billingAddressModel.getFirstRow().Id+' ||  '+skuid.page.params['call']+' ||  '+addOnValue+' ||  '+returnValue);\n            OptinSubscribeQBOCompanyServiceHelper.optinResubscribeQBOOrder(assetModelRow.AccountId,billingProfileModel.getFirstRow().Id,billingAddressModel.getFirstRow().Id,skuid.page.params['call'],addOnValue,returnValue,function(response,event){\n                if (event.status === true){\n                    console.log(response);\n                    \n                    // BTBS-5705: Commented below line\n                   updateOpportunityClosedWon(response);\n                   moveToView(response);\n                }else{\n                    alert(result.errorMessage);\n                    //parent.closeDialog();\n                    moveBackToAccount()\n                }\n            });\n        });\n});</jsitem><jsitem location=\"inlinesnippet\" name=\"checkAddress\" cachelocation=\"false\">var params = arguments[0],\n    $ = skuid.$;\nmainDFD = $.Deferred();\n\n// ===========================================================\n// Description: This function calls the apex controller to\n//              verify the address in the standard database\n// ===========================================================\n\n// ================================\n// Set up models / mapping\n// ================================\n\nvar selectedModel = skuid.$M('SelectedRow');\n//var selRow = selectedModel.getFirstRow();\n\nvar addressModel = skuid.model.getModel('BillingAddress'),\n    addressRow = addressModel.getFirstRow(),\n    addressZip = addressModel.getFieldValue(addressRow, 'Postal_Code__c'),\n    country = addressModel.getFieldValue(addressRow, 'Country__c');\n\nvar userModel = skuid.model.getModel('UserSelections'),\n    userRow = userModel.getFirstRow();\n\nvar postalCode = addressZip;\nif(typeof postalCode!='undefined' &amp;&amp; postalCode != null  &amp;&amp; postalCode.length &gt; 5){\n    postalCode = postalCode.substring(0,5)\n}\nvar finalCountry = '';\n\n//take value from Original field\nfinalCountry = addressModel.getFieldValue(addressModel.getFirstRow(), 'Country__c');\n\nconsole.log('Country ------ ', finalCountry);\n//update Billing Address country with User's final Input \naddressModel.updateRow(addressRow, {\n    Country__c: finalCountry\n});\n\n\nvar addressMap = {\n    \"Name\": addressModel.getFieldValue(addressModel.getFirstRow(), 'Name'),\n    \"City\": addressModel.getFieldValue(addressModel.getFirstRow(), 'City__c'),\n    \"State\": addressModel.getFieldValue(addressModel.getFirstRow(), 'State__c'),\n    \"Country\": addressModel.getFieldValue(addressModel.getFirstRow(), 'Country__c'),\n    \"Postalcode\": postalCode,\n    \"Addr2\": ''\n};\n\n// =======================================\n// Call controller to standardize address\n// =======================================\n\nconsole.log('FROM checkAddress - country =' + country);\nvar models = [addressModel];\nvar fieldsNOTEmpty = skuid.snippet.get('genericValidateFields')(models);\n\n\nif (fieldsNOTEmpty === true) {\n\n    if (country !== undefined &amp;&amp; country === 'USA') {\n        console.log('FROM addressCheck if Block');\n\n        OptinSubscribeQBOCompanyServiceHelper.standardizeAddress(addressMap, function(result, event) {\n            console.log('result ==== ', result);\n            console.log('Address STDZN  ==== ', event);\n\n            // If no errors, update the address model\n\n            if (event.status === true &amp;&amp; result.hasOwnProperty('Error') &amp;&amp; result.Error === '') {\n                addressModel.updateRow(addressRow, {\n                    Name: result.Addr1,\n                    City__c: result.City,\n                    State__c: result.State,\n                    Country__c: result.Country,\n                    Country_4CA_ui: result.Country,\n                    Postal_Code__c: result.Zipcode,\n                    Bill_To_Address__c: true\n\n                });\n                userModel.updateRow(userRow, {\n                    addressError: null\n                });\n                userModel.save();\n                $.unblockUI();\n                mainDFD.resolve();\n            } else {\n                // If errors are found, update the error message in the UI only fields\n                addressModel.updateRow(addressRow, {\n                    RequiredError__ui: 'FieldsMissing'\n                });\n                $('.billingAddreswsError').html('Please enter correct Address');\n                mainDFD.reject();\n                $.unblockUI();\n\n            }\n        });\n\n    } else {\n        $.unblockUI();\n        mainDFD.resolve();\n    }\n} else {\n    userModel.updateRow(userModel.getFirstRow(), {\n        errorStatus: 'AddressValuesMissing'\n    });\n    userModel.save();\n    mainDFD.reject();\n    $.unblockUI();\n}\n\n\nreturn mainDFD.promise();\n\n//End of Address STDZN</jsitem><jsitem location=\"inlinesnippet\" name=\"moveToStepOne\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\nskuid.component.getById('mywizard').navigate('step1');</jsitem><jsitem location=\"inline\" name=\"QBOBillingProfile\" cachelocation=\"false\" url=\"\">function billingAddressValidation(){\n    var billingAddress = skuid.$M('BillingAddress');\n    if(billingAddress.data.length == 0){\n        console.log(\"length is 0\")\n        billingAddress.abandonAllRows();\n        skuid.$.blockUI({ message: 'Loading available Address' });\n        billingAddress.load(function(result){\n            if(billingAddress.data.length === 0){\n                createBlankBillingProfile();\n                skuid.$('.addressExistingAndNew').remove();\n            }\n            skuid.$.unblockUI();\n        });\n    }\n}\n\n/*function loadBillingProfile(){\n    var billingProfile = skuid.$M('BillingProfile');\n    var existingRow = billingProfile.abandonAllRows();\n    skuid.$.blockUI({ message: 'Loading available profiles' });\n    billingProfile.load(function(result){\n        console.log(result);\n        if(billingProfile.data.length &gt; 0){\n            billingProfile.updateRow(billingProfile.data[0], {\n                isUsingExisting__ui: true,\n                Credit_Card_Verification_Number__c : ''\n            });\n            skuid.$('.cardNumberreadOnly .nx-fieldtext').addClass('add'+billingProfile.data[0].Credit_Card_Type__c+'Check');\n            skuid.$('.cardNumberEdit').removeClass('addCCImages');\n            skuid.$('.existingDisabled select,.existingDisabled input').prop( \"disabled\", true );\n            skuid.$('.cardExistingAndNew a').attr('onclick','newBillingProfile()');\n            skuid.$('.cardExistingAndNew a').html('Enter new card');\n            console.log(billingProfile.data[0].Id)\n            if(new Date().getFullYear() &gt; parseInt(billingProfile.data[0].Expiry_Year__c)){\n                skuid.$('.cardYear select').css('border-color','red');\n            }\n        }else{\n            alert('Card information not found');\n            billingProfile.adoptRow(existingRow);\n            skuid.$('.addCCImages').find('.nx-field input').addClass('addAllCC');\n        }\n        skuid.$.unblockUI();\n    });\n}*/\n\nfunction newBillingProfile(){\n    var billingProfile = skuid.$M('BillingProfile');\n    billingProfile.abandonAllRows();\n    billingProfile.createRow();\n   // skuid.$('.cardExistingAndNew a').attr('onclick','loadBillingProfile()');\n    skuid.$('.cardExistingAndNew a').html('Use existing card');\n    skuid.$('.addCCImages').find('.nx-field input').addClass('addAllCC');\n}\n</jsitem><jsitem location=\"inlinesnippet\" name=\"1PageBack\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n//parent.closeDialog();\nmoveBackToAccount();</jsitem><jsitem location=\"inline\" name=\"updateUpgradeAssetInfo\" cachelocation=\"false\" url=\"\">function updateUpgradeAssetInfo(){\n    skuid.$('#UpgradeTable table tbody tr').each(function(index,value){\n        if(skuid.$(value).hasClass(\"highlighted-row\")){\n            var upgradeTableRow = skuid.$M(\"UpgradeTable\").data[index];\n            \n            var upgradeAssetModel = skuid.$M('UpgradeAsset');\n            upgradeAssetModel.abandonAllRows();\n            var newRow = upgradeAssetModel.createRow();\n            var updateFields = {};\n            updateFields[newRow.Id] = ({\n                                        PurchaseIncludes__ui : upgradeTableRow.Name__ui,\n                                        QBOListPrice__ui : validateAndGetvalues(upgradeTableRow.QBOOriginal__ui),\n                                        PayrollListPrice__ui : validateAndGetvalues(upgradeTableRow.PayrollOriginal__ui),\n                                        QBODiscountPrice__ui : validateAndGetvalues(upgradeTableRow.QBODiscount__ui),\n                                        PayrollDiscountPrice__ui : validateAndGetvalues(upgradeTableRow.PayrollDiscount__ui),\n                                        BillingStarts__ui : upgradeTableRow.BillingStartDate__ui,\n                                        QBOPriceBookEntryId__ui : upgradeTableRow.QBOPricebookEntryId__ui,\n                                        PayrollPriceBookEntryId__ui : upgradeTableRow.payrollPricebookEntryId__ui,\n                                        offeringIdValue__ui : upgradeTableRow.offeringIdValue__ui,\n                                        QBOpayablePrice__ui : upgradeTableRow.QBOpayablePrice__ui,\n                                        payrollPayablePrice__ui : upgradeTableRow.payrollPayablePrice__ui\n                                    });\n            upgradeAssetModel.updateRows(updateFields);\n            \n            updateFields={}\n            updateFields[upgradeTableRow.Id] = ({isSelected__ui : true});\n            skuid.$M(\"UpgradeTable\").updateRows(updateFields);\n            skuid.$('.productErrorMsg').css('display','none');\n        }\n    });\n}\n\nfunction validateAndGetvalues(data){\n    if(data === undefined || data === ''){\n        return undefined;\n    }\n    return data;\n}</jsitem><jsitem location=\"inlinesnippet\" name=\"updateAccountAndBillingFlag\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\t\nconsole.log('Data')\n\t\nvar billingAddressModel = skuid.$M('BillingAddress');\n\nvar newRow = billingAddressModel.getFirstRow();\nvar upgradeTableRow = {};\nvar accountId = skuid.$M('AssetModel').getFirstRow().AccountId;\nconsole.log('acctId'+accountId);\n\nupgradeTableRow[newRow.Id] = ({ Account__c : accountId,\n\t\t\t\t\t\t\t\tBill_To_Address__c : true\n\t\t\t\t\t        });\nbillingAddressModel.updateRows(upgradeTableRow);\n</jsitem><jsitem location=\"inlinesnippet\" name=\"picklistState\" cachelocation=\"false\"> var field = arguments[0],\n        value = arguments[1],\n\t    $ = skuid.$,\n\t    country = '';\n\t    \n    console.log('field @@@ ',field);\n    \n    var assetModel = skuid.model.getModel('AssetModel'),\n        assetRow = assetModel.getFirstRow();\n        country = assetRow.Account.Country__c;\n\n    console.log('COUNTRY FROM populateStatePicklist snpt @@@  ',country);\n\nif(country === 'USA'){\n    var picklistEntries = field.metadata.picklistEntries;\n    picklistEntries.length = 0; //This is to clear initial values and avoid undefined-Type runtime error\n    \n    if (picklistEntries.length === 0) {\n        picklistEntries.push(\n        {value: '', label: 'State', defaultValue: true, active: false},\n        {value: 'AL', label: 'Alabama', defaultValue: false, active: true},\n        {value: 'AK', label: 'Alaska', defaultValue: false, active: true},\n        {value: 'AZ', label: 'Arizona', defaultValue: false, active: true},\n        {value: 'AR', label: 'Arkansas', defaultValue: false, active: true},\n        {value: 'CA', label: 'California', defaultValue: false, active: true},\n        {value: 'CO', label: 'Colorado', defaultValue: false, active: true},\n        {value: 'CT', label: 'Connecticut', defaultValue: false, active: true},\n        {value: 'DE', label: 'Delaware', defaultValue: false, active: true},\n        {value: 'DC', label: 'District of Columbia ', defaultValue: false, active: true},\n        {value: 'FL', label: 'Florida', defaultValue: false, active: true},\n        {value: 'GA', label: 'Georgia', defaultValue: false, active: true},\n        {value: 'HI', label: 'Hawaii', defaultValue: false, active: true},\n        {value: 'ID', label: 'Idaho', defaultValue: false, active: true},\n        {value: 'IL', label: 'Illinois', defaultValue: false, active: true},\n        {value: 'IN', label: 'Indiana', defaultValue: false, active: true},\n        {value: 'IA', label: 'Iowa', defaultValue: false, active: true},\n        {value: 'KS', label: 'Kansas', defaultValue: false, active: true},\n        {value: 'KY', label: 'Kentucky', defaultValue: false, active: true},\n        {value: 'LA', label: 'Louisiana', defaultValue: false, active: true},\n        {value: 'ME', label: 'Maine', defaultValue: false, active: true},\n        {value: 'MD', label: 'Maryland', defaultValue: false, active: true},\n        {value: 'MA', label: 'Massachusetts', defaultValue: false, active: true},\n        {value: 'MI', label: 'Michigan', defaultValue: false, active: true},\n        {value: 'MN', label: 'Minnesota', defaultValue: false, active: true},\n        {value: 'MS', label: 'Mississippi', defaultValue: false, active: true},\n        {value: 'MO', label: 'Missouri', defaultValue: false, active: true},\n        {value: 'MT', label: 'Montana', defaultValue: false, active: true},\n        {value: 'NE', label: 'Nebraska', defaultValue: false, active: true},\n        {value: 'NV', label: 'Nevada', defaultValue: false, active: true},\n        {value: 'NH', label: 'New Hampshire', defaultValue: false, active: true},\n        {value: 'NJ', label: 'New Jersey', defaultValue: false, active: true},\n        {value: 'NM', label: 'New Mexico', defaultValue: false, active: true},\n        {value: 'NY', label: 'New York', defaultValue: false, active: true},\n        {value: 'NC', label: 'North Carolina', defaultValue: false, active: true},\n        {value: 'ND', label: 'North Dakota', defaultValue: false, active: true},\n        {value: 'OH', label: 'Ohio', defaultValue: false, active: true},\n        {value: 'OK', label: 'Oklahoma', defaultValue: false, active: true},\n        {value: 'OR', label: 'Oregon', defaultValue: false, active: true},\n        {value: 'PA', label: 'Pennsylvania', defaultValue: false, active: true},\n        {value: 'PR', label: 'Puerto Rico', defaultValue: false, active: true},\n        {value: 'RI', label: 'Rhode Island', defaultValue: false, active: true},\n        {value: 'SC', label: 'South Carolina', defaultValue: false, active: true},\n        {value: 'SD', label: 'South Dakota', defaultValue: false, active: true},\n        {value: 'TN', label: 'Tennessee', defaultValue: false, active: true},\n        {value: 'TX', label: 'Texas', defaultValue: false, active: true},\n        {value: 'UT', label: 'Utah', defaultValue: false, active: true},\n        {value: 'VT', label: 'Vermont', defaultValue: false, active: true},\n        {value: 'VA', label: 'Virginia', defaultValue: false, active: true},\n        {value: 'WA', label: 'Washington', defaultValue: false, active: true},\n        {value: 'WV', label: 'West Virginia', defaultValue: false, active: true},\n        {value: 'WI', label: 'Wisconsin', defaultValue: false, active: true},\n        {value: 'WY', label: 'Wyoming', defaultValue: false, active: true}\n        );\n    }\n        skuid.ui.fieldRenderers[field.metadata.displaytype][field.mode](field,value);\n}\n    else {\n            skuid.ui.fieldRenderers.TEXT[field.mode](field,value);\n    }\n    \n    skuid.$('#billingAddressInfo .picklistState select').change(function(value){\n        if(skuid.$(this).val() === ''){\n            skuid.$(this).addClass('nullValue');\n        }else{\n            skuid.$(this).removeClass('nullValue');\n        }\n    });</jsitem><jsitem location=\"inlinesnippet\" name=\"updateBillingAddress\" cachelocation=\"false\">// =========================================================\n// Description:  Function to update/Save Billing address\n//               after Validation Checks\n// =========================================================\nconsole.log('*** This is FROM updateBillingAddress  ***');\n\nvar params = arguments[0],\n    $ = skuid.$;\nvar mainDFD = $.Deferred();\n\nvar //companyAddress = {}, \n    extngBillingAddress = {},\n    billingAddress = {},\n    isAbandonded = false;\n\n//var newCompAddrModel = skuid.model.getModel(\"CompanyAddress\"),\n  //  newCompAddrRow = newCompAddrModel.getFirstRow();\n//var compAddressZIP = newCompAddrModel.getFieldValue(newCompAddrRow, 'PostalCode_ui');    \n\nvar newBillAddrModel = skuid.model.getModel(\"BillingAddress\"),\n    newBillAddrRow = newBillAddrModel.getFirstRow(),\n    billingZIP = newBillAddrModel.getFieldValue(newBillAddrRow, 'Postal_Code__c');\n\nvar extngBillAddrModel = skuid.model.getModel(\"ExistingBillAddress\"),\n    extngBillAddrRow = extngBillAddrModel.getFirstRow(),\n    extngBillingZIP = extngBillAddrModel.getFieldValue(extngBillAddrRow, 'Postal_Code__c');    \n\nvar newAssetModel = skuid.model.getModel(\"AssetModel\");\nvar country = newAssetModel.getFieldValue(newAssetModel.getFirstRow(),'Account.Country__c');\nvar accID = newAssetModel.getFieldValue(newAssetModel.getFirstRow(),'AccountId');\n\nvar addressONDBMatch = skuid.model.getModel(\"AddressDBMatch\");\n//Pass Current accID,AddressLine1, City and ZIP to this Model and see if we get any Address from DB\n\nvar addrLine1Condition = addressONDBMatch.getConditionByName('AddressDBMatchName'),\n    cityCondition = addressONDBMatch.getConditionByName('AddressDBMatchCity'),\n    stateCondition = addressONDBMatch.getConditionByName('AddressDBMatchState'),\n    zipCondition = addressONDBMatch.getConditionByName('AddressDBMatchZIP'),\n    BillTOCondition = addressONDBMatch.getConditionByName('AddressDBMatchBillTOAddress'),\n    accIDCondition = addressONDBMatch.getConditionByName('AddressDBMatchAccID');\n\n    addressONDBMatch.abandonAllRows();\n    addressONDBMatch.setCondition(accIDCondition,accID);\n    addressONDBMatch.activateCondition(accIDCondition); \n    addressONDBMatch.activateCondition(BillTOCondition); \n        \nif(skuid.page.params.AccountId){\n    var AccountModel = skuid.model.getModel(\"Account\");\n    var companyID = AccountModel.getFieldValue(AccountModel.getFirstRow(),'Company_ID__c');\n    var accountCAN = AccountModel.getFieldValue(AccountModel.getFirstRow(),'CAN__c');\n\n    if((companyID === '' || companyID === null) &amp;&amp; (accountCAN === '' || accountCAN === null)) \n    {\n\n        isAbandonded = true;\n        console.log('*** This is an ABANDONED Account  ***');\n    }\n}\n\n//========= Helper Functions BEGIN ==========\n\nfunction hasNull(target){\n    \n            for (var member in target)\n            {\n                if (target[member] === null || target[member] === \"\" || target[member] === undefined || target[member] === 'changeme')\n                {\n                    return true;\n                }\n            }\n            return false;\n    }\n    \n/*function compareAddresses(compAddress,billAddress){\n\n    var sameFlag = false;\n    \n    if(!hasNull(compAddress) &amp;&amp; !hasNull(billAddress)){\n            \n            for (var member in compAddress){\n\n                if (compAddress[member] === billAddress[member] ){\n                    sameFlag = true;\n                }\n                else{\n                        sameFlag = false; \n                        break;\n                }\n            }\n    }\n    \n    \n    return sameFlag;\n\n}*/\n\n//========= Helper Functions END =========\n\n    //TRIM ZIP for USA\n        if(country === 'USA'){\n                               // if(compAddressZIP) compAddressZIP = compAddressZIP.substring(0,5);\n                                billingZIP = billingZIP.substring(0,5);\n                                if(extngBillingZIP) extngBillingZIP = extngBillingZIP.substring(0,5);\n                            \n\n    // Format the Address based on COUNTRY\n   /* if(country === 'France'){\n\n        \n            companyAddress = {\n\n                                \"adresse\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'AddressLine1_ui'),\n                                \"ville\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'City_ui'),\n                                \"codepostal\" : compAddressZIP\n                            };\n        \n            billingAddress = {\n\n                                \"adresse\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'Name'),\n                                \"ville\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'City__c'),\n                                \"codepostal\" : billingZIP\n                            };\n\n        if(extngBillAddrModel.data.length){\n            extngBillingAddress = {\n\n                                        \"adresse\" : extngBillAddrModel.getFieldValue(extngBillAddrRow, 'Name'),\n                                        \"ville\" : extngBillAddrModel.getFieldValue(extngBillAddrRow, 'City__c'),\n                                        \"codepostal\" : extngBillingZIP\n                                  };\n        }                      \n            \n            //Activate Corresponding Conditions based on Billing Address Format\n            addressONDBMatch.setCondition(addrLine1Condition, billingAddress[\"adresse\"]);\n            addressONDBMatch.activateCondition(addrLine1Condition); \n            \n            addressONDBMatch.setCondition(cityCondition, billingAddress[\"ville\"]);\n            addressONDBMatch.activateCondition(cityCondition);\n            \n            addressONDBMatch.setCondition(zipCondition, billingAddress[\"codepostal\"]);\n            addressONDBMatch.activateCondition(zipCondition);\n            \n            \n    }*/\n    \n\n            /*companyAddress = {\n                                \"street\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'AddressLine1_ui'),\n                                \"city\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'City_ui'),\n                                \"state\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'State_ui'),\n                                \"postalcode\" : compAddressZIP\n                            };*/\n\n            billingAddress = {\n                                \"street\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'Name'),\n                                \"city\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'City__c'),\n                                \"state\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'State__c'),\n                                \"postalcode\" : billingZIP\n                            };\n        if(extngBillAddrModel.data.length){\n            \n            extngBillingAddress = {\n                                    \"street\" : extngBillAddrModel.getFieldValue(extngBillAddrRow, 'Name'),\n                                    \"city\" : extngBillAddrModel.getFieldValue(extngBillAddrRow, 'City__c'),\n                                    \"state\" : extngBillAddrModel.getFieldValue(extngBillAddrRow, 'State__c'),\n                                    \"postalcode\" : extngBillingZIP\n                                }; \n        }\n            //Activate Corresponding Conditions based on Billing Address Format\n            addressONDBMatch.setCondition(addrLine1Condition, billingAddress[\"street\"]);\n            addressONDBMatch.activateCondition(addrLine1Condition); \n            \n            addressONDBMatch.setCondition(cityCondition, billingAddress[\"city\"]);\n            addressONDBMatch.activateCondition(cityCondition);\n            \n            addressONDBMatch.setCondition(stateCondition, billingAddress[\"state\"]);\n            addressONDBMatch.activateCondition(stateCondition);\n            \n            addressONDBMatch.setCondition(zipCondition, billingAddress[\"postalcode\"]);\n            addressONDBMatch.activateCondition(zipCondition);                    \n                            \n    }\n\n\n//var sameAsCompanyAddress = newBillAddrModel.getFieldValue(newBillAddrRow,'SameAsCompAddr_ui');\nvar alreadySaved = newBillAddrModel.getFieldValue(newBillAddrRow, 'alreadySaved_ui');\n\n//console.log('*** alreadySaved BEFORE DBMatch *** sameAsCompanyAddress = ',sameAsCompanyAddress);\n//console.log('*** companyAddress ===== ',companyAddress);\nconsole.log('*** billingAddress ===== ',billingAddress);\n\nvar saveBillAddress = true;\n\nvar addressONDBMatchUpdate = addressONDBMatch.updateData();\n\n    addressONDBMatchUpdate.done(function(){\n        \n                                        if(addressONDBMatch.data.length){\n                                \n                                              saveBillAddress = false;  \n                                        }\n                            \n                                        /*if(sameAsCompanyAddress){\n                            \n                                            saveBillAddress = false;\n                                            // Flag It as BILL TO ADDRESS on COMPANY ADDRESS\n                                            newCompAddrModel.updateRow(newCompAddrModel.getFirstRow(), { Bill_To_Address__c : true });\n                                            newCompAddrModel.save();\n                                            console.log('*** COMPANY ADDRESS Stamped as BILL_TO_ADDRESS ***');\n                                        }*/\n                                       /* if(compareAddresses(companyAddress,billingAddress)){\n                            \n                                           saveBillAddress = false;\n                                           // Flag It as BILL TO ADDRESS on COMPANY ADDRESS\n                                           newCompAddrModel.updateRow(newCompAddrModel.getFirstRow(), { Bill_To_Address__c: true });\n                                           newCompAddrModel.save();\n                                           console.log('*** COMPANY ADDRESS Stamped as BILL_TO_ADDRESS ***');\n                                        }*/\n                                       if(alreadySaved){ \n                            \n                                          saveBillAddress = false;\n                                          console.log('alreadySaved @@@', alreadySaved);\n                                        }\n                                        if(isAbandonded){\n                            \n                                            saveBillAddress = false;\n                                        }    \n                                \n                           \n                            \n                        \n                        console.log('Final saveBillAddress DECISION *** ',saveBillAddress);\n                            \n                        if(saveBillAddress){\n            \n                                                var userSelModel = skuid.model.getModel(\"UserSelections\");\n                                        \n                                                // Update address\n                                                newBillAddrModel.updateRow(newBillAddrModel.getFirstRow(), \n                                                                                                        {\n                                                                                                            Account__c: accID,\n                                                                                                            Postal_Code__c: billingZIP,\n                                                                                                            Bill_To_Address__c : true\n                                                                                                        }); \n                                                                                    \n                                                //Save Billing Address\n                                                skuid.model.save([newBillAddrModel],{callback: function(result){\n                                                                \n                                                                if (result.totalsuccess){\n                                                                    console.log('Address Saved Successfully! ',newBillAddrRow.Id);\n                            \n                                                                    newBillAddrModel.updateRow(newBillAddrModel.getFirstRow(), { alreadySaved_ui : true});\n                                                                    //newBillAddrModel.save();\n                            \n                                                                     $.unblockUI();\n                                                                     mainDFD.resolve();\n                                                                }\n                                                                else{\n                                                                     console.log('There is a problem in Saving Address - ',result.insertResults[0]);\n                                                                     //Update Erron on UI to User\n                                                                     userSelModel.updateRow(userSelModel.getFirstRow(), { addressError : result.insertResults[0]});\n                                                                     mainDFD.reject();\n                                                                     $.unblockUI();\n                                                                    \n                                                                }\n                                                    }\n                                                    \n                                                });\n                        }\n                        else\n                        {       \n                            //If NOT Saving . . .  Move On ...\n                                $.unblockUI();\n                                mainDFD.resolve();\n                        }\n        \n    });\n    \n        \n        \nreturn mainDFD.promise();\n\n\n</jsitem><jsitem location=\"inlinesnippet\" name=\"saveBillingProfile\" cachelocation=\"false\">//===========================\n// Setup Models and variables\n//===========================\n\nvar $ = skuid.$;\nvar models = skuid.model.map();\nvar bpModel = models.BillingProfile;\nvar bpRow = bpModel.getFirstRow();\n\nvar cvvNo = bpModel.getFieldValue(bpRow, 'Credit_Card_Verification_Number__c');\nvar isTokenized = bpModel.getFieldValue(bpRow, 'isTokenized_ui');\n\nvar addressModel = skuid.model.getModel('BillingAddress');\nvar addressRow = addressModel.getFirstRow();\n\nvar assetModel = skuid.model.getModel('AssetModel');\nvar assetModelRow = assetModel.getFirstRow();\n\nvar mainDFD = $.Deferred();\n\n//Save Billing Profile\n\n$.blockUI({\n   message: 'Processing . . .',\n   onBlock:function(){\n       if(isTokenized){\n           \n        console.log('from saveBPle - addID ==== ',addressRow.Id);\n        \n        if(addressRow.Id.length &gt;= 15){\n            bpModel.updateRow(bpRow, {  Account_ID__c : assetModelRow.AccountId, \n                                        Address_ID__c: addressRow.Id,\n                                        Credit_Card_Verification_Number__c : cvvNo\n                                     });\n        }\n        else{\n            bpModel.updateRow(bpRow,{ Account_ID__c : accRow.Id, Credit_Card_Verification_Number__c : cvvNo });\n        }\n        \n        \n        \n        skuid.model.save([bpModel],{callback: function(result){\n                if (result.totalsuccess){\n        \n        //alert('Billing Profile Id: ' + bpModel.getFirstRow().Id); // should be a real SF Id now\n        console.log('Billing Profile - ID ',bpModel.getFirstRow().Id);\n        $.unblockUI();\n        mainDFD.resolve();\n    \n    } \n    else {\n        // There was a problem. Let's see what went wrong.\n        \n        //alert('Billing Profile Save Error: \\n' + result.insertResults[0]);\n        console.log('Billing Profile - Save Error',result);\n        \n        mainDFD.reject();\n        $.unblockUI();\n\n        }\n    } \n    \n    });\n    \n  \n    \n}\n\n   }\n});\n\n\n\nreturn mainDFD.promise();\n\n\n</jsitem><jsitem location=\"inlinesnippet\" name=\"redirectToAccountDetail\" cachelocation=\"false\">parent.redirectToAccountDetail();</jsitem><jsitem location=\"inlinesnippet\" name=\"IsInConsole\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\nreturn !skuid.page.params.isInConsole;</jsitem></javascript><css><cssitem location=\"inline\" name=\"CardNumberWidth\" cachelocation=\"false\">.addCCImages {\n    margin-bottom: 20px;\n}\n\n.textAlignRight{\n    text-align: right;\n}\n\ndiv.addMastercardCheck{\n    background-image: url(\"/resource/Mastercard_Icon\"), url(\"/resource/Checkmark_Icon\");\n    background-repeat: no-repeat, no-repeat;\n    background-position: right 40px top 50%, right 10px top 50%;\n}\ndiv.addMastercardError{\n    background-image: url(\"resource/Mastercard_Icon\"), url(\"/resource/Error_Icon\");\n    background-repeat: no-repeat, no-repeat;\n    background-position: right 40px top 50%, right 10px top 50%;\n}\n\ndiv.addDiscoverCheck{\n    background-image: url(\"/resource/Discover_Icon\"), url(\"/resource/Checkmark_Icon\");\n    background-repeat: no-repeat, no-repeat;\n    background-position: right 40px top 50%, right 10px top 50%;\n}\ndiv.addDiscoverError{\n    background-image: url(\"/resource/Discover_Icon\"), url(\"/resource/Error_Icon\");\n    background-repeat: no-repeat, no-repeat;\n    background-position: right 40px top 50%, right 10px top 50%;\n}\n\ndiv.addVisaCheck{\n    background-image: url(\"/resource/Visa_Icon\"), url(\"/resource/Checkmark_Icon\");\n    background-repeat: no-repeat, no-repeat;\n    background-position: right 40px top 50%, right 10px top 50%;\n}\ndiv.addVisaError{\n    background-image: url(\"/resource/Visa_Icon\"), url(\"/resource/Error_Icon\");\n    background-repeat: no-repeat, no-repeat;\n    background-position: right 40px top 50%, right 10px top 50%;\n}\n\ndiv.addAmexCheck{\n    background-image: url(\"/resource/Amex_Icon\"), url(\"/resource/Checkmark_Icon\");\n    background-repeat: no-repeat, no-repeat;\n    background-position: right 40px top 50%, right 10px top 50%;\n}\ndiv.addAmexError{\n    background-image: url(\"/resource/Amex_Icon\"), url(\"/resource/Error_Icon\");\n    background-repeat: no-repeat, no-repeat;\n    background-position: right 40px top 50%, right 10px top 50%;\n}\n\ndiv.addError, select.addError{\n    background-image: url(\"/resource/Error_Icon\");\n    background-repeat: no-repeat, no-repeat;\n    background-position: right 40px top 50%, right 10px top 50%;\n    border-color: red;\n}\n\n.nx-basicfieldeditor-column.nx-layout-above .nx-basicfieldeditor-item {\n    border-bottom: 0px solid #d8dde6 !important;\n    padding-bottom: .5rem;\n}\n\n.fixedZipWidth input{\n    width: 95%;\n}</cssitem><cssitem location=\"inline\" name=\"subscribeInfoCss\" cachelocation=\"false\">.wideButton{\n    width: 25%;\n    margin: 0 auto;\n    text-align: left;\n}\n\n#priceCurrency{\n    text-align: right;\n}\n\n.nx-basicfieldeditor-item-label{\n    width:42%;\n}\n\ndiv.nx-basicfieldeditor-section-body&gt;div.nx-basicfieldeditor-item&gt;.nx-field, div.nx-basicfieldeditor-item&gt;.nx-field{\n    width:58%;\n}\n\n.fixedView{\n    padding-right: 25px;\n}\n.labelWidthFull .nx-basicfieldeditor-item-label{\n    width:100%;\n}\n.nx-field.nx-modified .nx-fieldtext {\n    font-style: normal;\n}\n.nx-basicfieldeditor-column.nx-layout-above .nx-basicfieldeditor-item{\n    padding-bottom: 0rem;\n}\n#AccountBreadcrumb .nx-template{\n    padding-top : 15px\n}</cssitem></css></resources><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></skuidpage>","skuid__Layout2__c":null,"skuid__Layout3__c":null,"skuid__Layout4__c":null,"skuid__Layout5__c":null}]