[{"attributes":{"type":"skuid__Page__c","url":"/services/data/v36.0/sobjects/skuid__Page__c/a3Kf0000000Hut1EAC"},"Id":"a3Kf0000000Hut1EAC","Name":"PayrollTab__Master","skuid__Type__c":"Desktop","skuid__UniqueId__c":"_PayrollTab__Master","skuid__Module__c":null,"skuid__Composer_Settings__c":null,"skuid__MasterPage__c":null,"skuid__MasterPage__r":null,"skuid__IsMaster__c":true,"skuid__Layout__c":"<skuidpage unsavedchangeswarning=\"yes\" personalizationmode=\"server\" showsidebar=\"true\" useviewportmeta=\"true\" showheader=\"true\" theme=\"Intuit\"><models><model id=\"Account\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Account\" doclone=\"\"><fields><field id=\"Name\"/><field id=\"High_Value_Customer__c\"/><field id=\"Industry\"/><field id=\"Customer_Sub_Type__c\"/><field id=\"Company_ID__c\"/><field id=\"Tax_Exempt__c\"/><field id=\"Owner.Name\"/><field id=\"TaxExempt\" uionly=\"true\" displaytype=\"FORMULA\" label=\"TAX EXEMPT\" ogdisplaytype=\"TEXT\" readonly=\"true\" returntype=\"TEXT\" defaultvaluetype=\"fieldvalue\"><formula>IF({{Customer_Sub_Type__c}},'Yes','No')</formula></field><field id=\"Parent.Name\"/><field id=\"Account_Care_Manager__c\"/><field id=\"Account_Care_Manager__r.Name\"/><field id=\"ParentId\"/><field id=\"Customer_Type__c\"/><field id=\"Customer_Tier__c\"/><field id=\"Number_of_Locations__c\"/><field id=\"NumberOfEmployees\"/><field id=\"Franchise_Sector__c\"/><field id=\"AnnualRevenue\"/><field id=\"Region__c\"/><field id=\"Country__c\"/><field id=\"Territory__c\"/><field id=\"Co_Owner__c\"/><field id=\"Co_Owner__r.Name\"/><field id=\"Description\"/><field id=\"Contact_Status__c\"/><field id=\"Program_Status__c\"/><field id=\"Rating\"/><field id=\"Risk_Score__c\"/><field id=\"Integra_ICIS_ID__c\"/><field id=\"Bilingual_Office__c\"/><field id=\"Website\"/><field id=\"CreatedById\"/><field id=\"CreatedBy.Name\"/><field id=\"LastModifiedById\"/><field id=\"LastModifiedBy.Name\"/><field id=\"LastModifiedDate\"/><field id=\"CreatedDate\"/><field id=\"Account_Stage__c\"/><field id=\"Customer_Lifetime__c\"/><field id=\"Id\"/></fields><conditions><condition type=\"param\" value=\"id\" field=\"Id\" state=\"\" operator=\"=\" enclosevalueinquotes=\"true\" novaluebehavior=\"noquery\"/></conditions><actions/></model><model id=\"PayrollList\" limit=\"100\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"PQBOList__c\"><fields><field id=\"Productname__c\"/><field id=\"ProductShortname__c\"/></fields><conditions/><actions/></model><model id=\"Asset_Payroll\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Asset\" orderby=\"Current_Product__r.Name\" doclone=\"\"><fields><field id=\"Name\"/><field id=\"Current_Product__c\"/><field id=\"Current_Product__r.Name\"/><field id=\"Status\"/><field id=\"Company_Id__c\"/><field id=\"Asset_ID__c\"/><field id=\"Channel__c\"/><field id=\"Original_Product__c\"/><field id=\"Original_Product__r.Name\"/><field id=\"Signup_Date__c\"/><field id=\"Online_Trail_End_Date__c\"/><field id=\"First_Charge_Date__c\"/><field id=\"Siebel_Next_Bill_Date__c\"/><field id=\"Projected_First_Charge_Date__c\"/><field id=\"Upgrade_Date__c\"/><field id=\"Id\"/><field id=\"Online_Offer_Code__c\"/><field id=\"Subscription_Start_Date__c\"/><field id=\"Suspend_Date__c\"/><field id=\"Cancel_Date__c\"/><field id=\"Delete_Date__c\"/><field id=\"ReSubscribe_Date__c\"/><field id=\"Online_Expiry_Date__c\"/><field id=\"Migrate_In_Date__c\"/><field id=\"Migrate_Out_Date__c\"/><field id=\"of_Logins__c\"/><field id=\"Last_Login_Date__c\"/><field id=\"Online_Current_Product_Family__c\"/><field id=\"Payroll_Company_Id__c\"/><field id=\"Country_Code_2_Digit__c\"/><field id=\"Account.Company_ID__c\"/><field id=\"Payroll_IDUIOnly\" uionly=\"true\" displaytype=\"TEXT\"/></fields><conditions logic=\"\"><condition type=\"modelmerge\" value=\"\" field=\"Current_Product__r.Name\" operator=\"in\" model=\"PayrollList\" enclosevalueinquotes=\"true\" mergefield=\"Productname__c\" novaluebehavior=\"deactivate\"/><condition type=\"modelmerge\" value=\"\" field=\"AccountId\" operator=\"=\" model=\"Account\" enclosevalueinquotes=\"true\" mergefield=\"Id\" novaluebehavior=\"deactivate\"/></conditions><actions/></model><model id=\"PayrollWidgets\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"PayrollWidgetLinks__c\" doclone=\"\"><fields><field id=\"BillingAndFinancialInformation__c\"/><field id=\"Direct_Deposits__c\"/><field id=\"Employees_Contractors__c\"/><field id=\"Forms_Filed_CS_Server__c\"/><field id=\"Forms_Filed_Sentinal__c\"/><field id=\"Payroll_Details__c\"/><field id=\"Paystubs_by_Date__c\"/><field id=\"Name\"/><field id=\"SubscriptionFees_OtherCharges__c\"/><field id=\"Tax_Wage_Summary__c\"/><field id=\"Tax_Liabilities__c\"/><field id=\"Tax_Payments_Due__c\"/><field id=\"Tax_Payments_Made__c\"/><field id=\"CS_Server_URL__c\"/><field id=\"Public_Login_URL__c\"/><field id=\"Canadian_CS_Server_URL__c\"/></fields><conditions/><actions/></model><model id=\"PublicLogin\" query=\"true\" createrowifnonefound=\"true\" datasource=\"Ui-Only\" processonclient=\"true\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"PayrollTools\" displaytype=\"PICKLIST\" ogdisplaytype=\"TEXT\" picklistsource=\"manual\" defaultvaluetype=\"multiple\" defaultValue=\"\" readonly=\"false\" enclosevalueinquotes=\"true\" label=\"Payroll Tools\"><picklistentries><entry value=\"Public Login\" label=\"Public Login\"/><entry value=\"CS Server\" label=\"CS Server\"/></picklistentries><values/></field></fields><conditions/><actions><action><actions><action type=\"branch\" model=\"PublicLogin\"><formula>IF(({{PayrollTools}} == 'Public Login'), true, false)</formula><iftrueactions><action type=\"custom\" snippet=\"OpenPublicAccess\"/></iftrueactions></action><action type=\"branch\"><formula>IF(({{PayrollTools}} == 'CS Server'), true, false)</formula><iftrueactions><action type=\"custom\" snippet=\"OpenCSServer\"/></iftrueactions></action><action type=\"branch\"><formula>IF(({{PayrollTools}} == 'Canadian CS Server'), true, false)</formula><iftrueactions><action type=\"custom\" snippet=\"OpenCanadianCSServer\"/></iftrueactions></action></actions><events><event>row.updated</event></events><fields><field>PayrollTools</field></fields></action></actions></model><model id=\"SummaryTabURL\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Account\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"URLWithParams\" uionly=\"true\" displaytype=\"TEXT\" label=\"URLWithParams\"/></fields><conditions/><actions/></model><model id=\"KeyInfoSectionMaster\" query=\"true\" createrowifnonefound=\"false\" datasource=\"Ui-Only\" processonclient=\"true\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"businessName\" displaytype=\"TEXT\" label=\"Business Name\"/><field id=\"payrollCompanyId\" displaytype=\"TEXT\" label=\"Company ID\"/><field id=\"realmId\" displaytype=\"TEXT\" label=\"Realm ID\"/></fields><conditions/><actions/></model><model id=\"DummyPayrollDataModel\" limit=\"20\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Account\"><fields><field id=\"payrolldateField\" uionly=\"true\" displaytype=\"TEXT\" label=\"payrolldateField\"/></fields><conditions/><actions/></model><model id=\"PayrollAssetRows\" limit=\"20\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Asset\" orderby=\"PurchaseDate ASC\" doclone=\"\"><fields><field id=\"Payroll_Company_Id__c\"/><field id=\"Online_Current_Product__c\"/><field id=\"Online_Current_Product_Family__c\"/><field id=\"Status\"/><field id=\"PurchaseDate\"/><field id=\"Country_Code_2_Digit__c\"/><field id=\"Current_Product__c\"/><field id=\"Current_Product__r.Name\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"AccountId\" operator=\"=\" model=\"Account\" enclosevalueinquotes=\"true\" mergefield=\"Id\" novaluebehavior=\"deactivate\"/><condition type=\"multiple\" value=\"\" field=\"Online_Current_Product_Family__c\" operator=\"in\" enclosevalueinquotes=\"true\"><values><value>QuickBooks Payroll Online</value><value>Intuit Online Payroll</value></values></condition><condition type=\"fieldvalue\" value=\"Accountant\" enclosevalueinquotes=\"true\" field=\"Channel__c\" operator=\"!=\"/><condition type=\"fieldvalue\" value=\"Active\" field=\"Status\" operator=\"starts with\" enclosevalueinquotes=\"true\"/></conditions><actions/></model><model id=\"PayrollAssetRowsInactive\" limit=\"20\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Asset\" orderby=\"PurchaseDate ASC\"><fields><field id=\"Payroll_Company_Id__c\"/><field id=\"Online_Current_Product__c\"/><field id=\"Online_Current_Product_Family__c\"/><field id=\"Status\"/><field id=\"PurchaseDate\"/><field id=\"Country_Code_2_Digit__c\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"AccountId\" operator=\"=\" model=\"Account\" enclosevalueinquotes=\"true\" mergefield=\"Id\" novaluebehavior=\"deactivate\"/><condition type=\"multiple\" value=\"\" field=\"Online_Current_Product_Family__c\" operator=\"in\" enclosevalueinquotes=\"true\"><values><value>QuickBooks Payroll Online</value><value>Intuit Online Payroll</value></values></condition><condition type=\"fieldvalue\" value=\"Accountant\" enclosevalueinquotes=\"true\" field=\"Channel__c\" operator=\"!=\"/><condition type=\"fieldvalue\" value=\"Active\" field=\"Status\" operator=\"does not start with\" mergefield=\"Id\" novaluebehavior=\"deactivate\" enclosevalueinquotes=\"true\"/></conditions><actions/></model><model id=\"PicklistBackendModel\" limit=\"20\" query=\"false\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Asset\"><fields><field id=\"CurrentProduct\" uionly=\"true\" displaytype=\"TEXT\" label=\"CurrentProduct\"/><field id=\"CurrentProductNo\" uionly=\"true\" displaytype=\"TEXT\" label=\"CurrentProductNo\"/><field id=\"payrollID\" uionly=\"true\" displaytype=\"TEXT\" label=\"payrollID\"/><field id=\"StatusUI\" uionly=\"true\" displaytype=\"TEXT\" label=\"StatusUI\"/><field id=\"PurchaseDate\" uionly=\"true\" displaytype=\"TEXT\" label=\"PurchaseDate\"/><field id=\"PicklistValues\" uionly=\"true\" displaytype=\"TEXT\" label=\"PicklistValues\"/><field id=\"CountryCode\" uionly=\"true\" displaytype=\"TEXT\" label=\"CountryCode\"/></fields><conditions/><actions/></model><model id=\"PicklistModel\" query=\"true\" createrowifnonefound=\"true\" datasource=\"Ui-Only\" processonclient=\"true\"><fields><field id=\"UIOnly\" displaytype=\"PICKLIST\" ogdisplaytype=\"TEXT\" picklistsource=\"manual\" label=\"UIOnly\" defaultvaluetype=\"fieldvalue\"><picklistentries><entry value=\"\" label=\"None\"/></picklistentries></field></fields><conditions/><actions><action><actions><action type=\"custom\" snippet=\"UpdateMultiPayrollPicklistActionsJS\"/></actions><events><event>row.updated</event></events><fields><field>UIOnly</field></fields></action></actions></model><model id=\"UIPayrollDisplayModel\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" unloadwarningifunsavedchanges=\"false\" type=\"\" sobject=\"Asset\" limit=\"1\"><fields><field id=\"DisplayPayrollandCount\" uionly=\"true\" displaytype=\"TEXT\" label=\"DisplayPayrollandCount\"/><field id=\"StatusUI\" uionly=\"true\" displaytype=\"TEXT\"/></fields><conditions/><actions/></model><model id=\"PayrollSummaryDataList\" query=\"true\" createrowifnonefound=\"false\" datasource=\"Ui-Only\" processonclient=\"true\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"businessName\" displaytype=\"TEXT\" label=\"Business Name\"/><field id=\"payrollCompanyId\" displaytype=\"TEXT\" label=\"Company ID\"/><field id=\"realmId\" displaytype=\"TEXT\" label=\"Realm ID\"/><field id=\"payrollStartDate\" displaytype=\"TEXT\" label=\"Payroll Start Date\"/><field id=\"creditCard\" displaytype=\"TEXT\" label=\"Credit Card\"/><field id=\"accountant\" displaytype=\"TEXT\" label=\"Accountant\"/><field id=\"userId\" displaytype=\"TEXT\" label=\"User ID\"/><field id=\"contactName\" displaytype=\"TEXT\" label=\"Contact Name\"/><field id=\"primaryAddress\" displaytype=\"TEXT\" label=\"Primary Address\"/><field id=\"filingAddress\" displaytype=\"TEXT\" label=\"Filling Address\"/><field id=\"billingAddress\" displaytype=\"TEXT\" label=\"Billing Address\"/><field id=\"country\" displaytype=\"TEXT\" label=\"Country\"/><field id=\"emailAddress\" displaytype=\"TEXT\" label=\"Email Address\"/><field id=\"primaryPhone\" displaytype=\"TEXT\" label=\"Primary Phone\"/><field id=\"depositSchedule\" displaytype=\"TEXT\" label=\"Deposit Schedule\"/><field id=\"service\" displaytype=\"TEXT\" label=\"Services\" readonly=\"false\"/><field id=\"sourceCode\" displaytype=\"TEXT\" label=\"Source Code\" readonly=\"false\"/><field id=\"companyType\" displaytype=\"TEXT\" label=\"Company Type\"/><field id=\"offerCode\" displaytype=\"TEXT\" label=\"Offer Code\"/><field id=\"preFund\" displaytype=\"TEXT\" label=\"Pre-Fund\"/><field id=\"federalEIN\" displaytype=\"TEXT\" label=\"Federal EIN\"/><field id=\"directDeposit\" displaytype=\"TEXT\" label=\"Direct Deposit\"/><field id=\"eftpsEfile\" displaytype=\"TEXT\" label=\"EFTPS &amp; Efile\"/><field id=\"filingName\" displaytype=\"TEXT\" label=\"Filing Name\"/><field id=\"stateEpayEfile\" displaytype=\"TEXT\" label=\"State E-Pay &amp; E-File\"/><field id=\"governmentId\" displaytype=\"TEXT\" label=\"Government Id\"/><field id=\"status401k\" displaytype=\"TEXT\" label=\"401K Status\"/><field id=\"employerAcctId\" displaytype=\"TEXT\" label=\"Employer Account ID\"/><field id=\"employerAcctNumber\" displaytype=\"TEXT\" label=\"Employer Account Number\"/><field id=\"principalName\" displaytype=\"TEXT\" label=\"Principal Name\"/><field id=\"bankAcctNumber\" displaytype=\"TEXT\" label=\"Bank Account #\"/><field id=\"stateSUIRate\" displaytype=\"TEXT\" label=\"State SUI Rate\"/><field id=\"stateEffectiveDate\" displaytype=\"TEXT\" label=\"State Effective Date\"/><field id=\"stateFormOptOut\" displaytype=\"TEXT\" label=\"State Form Opt Out\"/><field id=\"bankRoutingNumber\" displaytype=\"TEXT\" defaultvaluetype=\"fieldvalue\" label=\"Bank Routing #\"/><field id=\"federalEpayEfile\" displaytype=\"TEXT\" label=\"Federal E-Pay &amp; E-File\"/></fields><conditions/><actions/></model><model id=\"PayrollSummaryData\" query=\"true\" createrowifnonefound=\"false\" datasource=\"Ui-Only\" processonclient=\"true\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"businessName\" displaytype=\"TEXT\" label=\"Business Name\"/><field id=\"payrollCompanyId\" displaytype=\"TEXT\" label=\"Company ID\"/><field id=\"realmId\" displaytype=\"TEXT\" label=\"Realm ID\"/><field id=\"payrollStartDate\" displaytype=\"TEXT\" label=\"Payroll Start Date\"/><field id=\"creditCard\" displaytype=\"TEXT\" label=\"Credit Card\"/><field id=\"accountant\" displaytype=\"TEXT\" label=\"Accountant\"/><field id=\"userId\" displaytype=\"TEXT\" label=\"User ID\"/><field id=\"contactName\" displaytype=\"TEXT\" label=\"Contact Name\"/><field id=\"primaryAddress\" displaytype=\"TEXT\" label=\"Primary Address\"/><field id=\"filingAddress\" displaytype=\"TEXT\" label=\"Filling Address\"/><field id=\"billingAddress\" displaytype=\"TEXT\" label=\"Billing Address\"/><field id=\"country\" displaytype=\"TEXT\" label=\"Country\"/><field id=\"emailAddress\" displaytype=\"TEXT\" label=\"Email Address\"/><field id=\"primaryPhone\" displaytype=\"TEXT\" label=\"Primary Phone\"/><field id=\"depositSchedule\" displaytype=\"TEXT\" label=\"Deposit Schedule\"/><field id=\"service\" displaytype=\"TEXT\" label=\"Services\" readonly=\"false\"/><field id=\"sourceCode\" displaytype=\"TEXT\" label=\"Source Code\" readonly=\"false\"/><field id=\"companyType\" displaytype=\"TEXT\" label=\"Company Type\"/><field id=\"offerCode\" displaytype=\"TEXT\" label=\"Offer Code\"/><field id=\"preFund\" displaytype=\"TEXT\" label=\"Pre-Fund\"/><field id=\"federalEIN\" displaytype=\"TEXT\" label=\"Federal EIN\"/><field id=\"directDeposit\" displaytype=\"TEXT\" label=\"Direct Deposit\"/><field id=\"eftpsEfile\" displaytype=\"TEXT\" label=\"EFTPS &amp; Efile\"/><field id=\"filingName\" displaytype=\"TEXT\" label=\"Filing Name\"/><field id=\"stateEpayEfile\" displaytype=\"TEXT\" label=\"State E-Pay &amp; E-File\"/><field id=\"governmentId\" displaytype=\"TEXT\" label=\"Government Id\"/><field id=\"status401k\" displaytype=\"TEXT\" label=\"401K Status\"/><field id=\"employerAcctId\" displaytype=\"TEXT\" label=\"Employer Account ID\"/><field id=\"employerAcctNumber\" displaytype=\"TEXT\" label=\"Employer Account Number\"/><field id=\"principalName\" displaytype=\"TEXT\" label=\"Principal Name\"/><field id=\"bankAcctNumber\" displaytype=\"TEXT\" label=\"Bank Account #\"/><field id=\"stateSUIRate\" displaytype=\"TEXT\" label=\"State SUI Rate\"/><field id=\"stateEffectiveDate\" displaytype=\"TEXT\" label=\"State Effective Date\"/><field id=\"stateFormOptOut\" displaytype=\"TEXT\" label=\"State Form Opt Out\"/><field id=\"bankRoutingNumber\" displaytype=\"TEXT\" defaultvaluetype=\"fieldvalue\" label=\"Bank Routing #\"/><field id=\"federalEpayEfile\" displaytype=\"TEXT\" label=\"Federal E-Pay &amp; E-File\"/></fields><conditions/><actions/></model><model id=\"FinalPayrollIDModel\" query=\"true\" createrowifnonefound=\"false\" datasource=\"Ui-Only\" processonclient=\"true\"><fields><field id=\"PayrollID\" displaytype=\"TEXT\" label=\"PayrollID\"/></fields><conditions/><actions/></model><model id=\"PayrollAccountantClientAssets\" limit=\"20\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Asset\" orderby=\"Status ASC, PurchaseDate ASC\" doclone=\"\"><fields><field id=\"Payroll_Company_Id__c\"/><field id=\"Online_Current_Product__c\"/><field id=\"Online_Current_Product_Family__c\"/><field id=\"Status\"/><field id=\"PurchaseDate\"/><field id=\"Country_Code_2_Digit__c\"/><field id=\"Current_Product__c\"/><field id=\"Current_Product__r.Name\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"Related_Company_Id__c\" operator=\"=\" model=\"Account\" enclosevalueinquotes=\"true\" mergefield=\"Company_ID__c\" novaluebehavior=\"deactivate\"/><condition type=\"multiple\" value=\"\" field=\"Online_Current_Product_Family__c\" operator=\"in\" enclosevalueinquotes=\"true\"><values><value>QuickBooks Payroll Online</value><value>Intuit Online Payroll</value></values></condition></conditions><actions/></model><model id=\"UserPayroll\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"User\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Profile.Name\"/><field id=\"ProfileId\"/></fields><conditions><condition type=\"userinfo\" value=\"\" field=\"Id\" operator=\"=\" enclosevalueinquotes=\"true\" userinfotype=\"userid\"/></conditions><actions/></model></models><components><wrapper uniqueid=\"sk-2f-QKM-888\"><components><wrapper uniqueid=\"sk-2g0sLf-947\"><components><grid uniqueid=\"sk-2f-n0b-907\"><divisions><division behavior=\"fit\" verticalalign=\"center\"><components><template multiple=\"false\" uniqueid=\"sk-2i8RJj-622\" model=\"PicklistBackendModel\" allowhtml=\"true\"><contents>&lt;span class=\"fontColorStyle\"&gt;\n{{{CurrentProduct}}} &lt;/font&gt; &lt;/span&gt;\n\n</contents><renderconditions logictype=\"and\"/></template></components></division><division behavior=\"flex\" verticalalign=\"center\" ratio=\"1\" minwidth=\"100px\"><components><wrapper uniqueid=\"sk-2i9VrU-699\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"PicklistBackendModel\" buttonposition=\"left\" uniqueid=\"sk-1PWqQi-313\" mode=\"readonly\" layout=\"above\" cssclass=\"StatusList\"><columns layoutmode=\"fixed\"><column width=\"100%\" cssclass=\"QBOList\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Status\" valuehalign=\"\" type=\"CUSTOM\" snippet=\"statusRender\"><label/></field></fields><renderconditions logictype=\"and\"/></section></sections></column></columns></basicfieldeditor></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" borders=\"none\" padding=\"left,right,\"><styles><styleitem property=\"padding-left\" value=\"20px\"/><styleitem property=\"padding-right\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><wrapper uniqueid=\"sk-3PwrHv-1300\"><components/><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"150px\"/><styleitem property=\"max-width\" value=\"150px\"/></styles></styleitem></styles></wrapper></components></division><division behavior=\"fit\" verticalalign=\"top\"><components><wrapper uniqueid=\"sk-3GWJ5o-700\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"false\" model=\"PublicLogin\" buttonposition=\"left\" uniqueid=\"ExternalLinksId\" mode=\"edit\" layout=\"\" cssclass=\"\"><columns layoutmode=\"responsive\" columngutter=\"4px\" rowgutter=\"4px\"><column verticalalign=\"center\" behavior=\"specified\" width=\"260px\"><sections><section title=\"ABC\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"PayrollTools\" valuehalign=\"\" type=\"\" nonelabel=\" \" cssclass=\"payrollToolsCSS\"><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions logictype=\"and\"/></field></fields><renderconditions logictype=\"and\"/></section></sections><renderconditions logictype=\"and\"/></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"multiple\" operator=\"not in\" fieldmodel=\"UserPayroll\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"Profile.Name\" value=\"\" enclosevalueinquotes=\"true\"><values><value>SB Care DT and OL</value><value>Tier2SBCDTandOL</value><value>Tier3SBCDTandOL</value></values></rendercondition></renderconditions></basicfieldeditor></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"left,\" borders=\"left,\"><styles><styleitem property=\"border-left\" value=\"2px solid #d4d7dc\"/><styleitem property=\"padding-left\" value=\"16px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" enclosevalueinquotes=\"false\" fieldmodel=\"PicklistBackendModel\" sourcetype=\"modelproperty\" nosourcerowbehavior=\"deactivate\" sourceproperty=\"data.length\" operator=\"lte\" value=\"1\"/></renderconditions></grid><grid uniqueid=\"sk-2f-n0b-907\"><divisions><division behavior=\"fit\" verticalalign=\"center\"><components><template multiple=\"false\" uniqueid=\"TitleHeaderCurrentproductID\" cssclass=\"\" model=\"UIPayrollDisplayModel\" allowhtml=\"true\"><contents>&lt;a style=\"cursor: pointer\" class=\"fontColorStyle\" onclick=\"skuid.snippet.getSnippet('openPayrollAssets')('{{{DisplayPayrollandCount}}}')\"&gt;{{{DisplayPayrollandCount}}}&lt;/a&gt;</contents></template></components></division><division behavior=\"fit\" verticalalign=\"center\" uniqueid=\"divisio\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"PicklistModel\" buttonposition=\"left\" uniqueid=\"MultiplePicklistField\" mode=\"edit\" layout=\"\"><columns><column width=\"100%\"><sections><section title=\"\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"UIOnly\" valuehalign=\"\" type=\"CUSTOM\" snippet=\"FieldRenderedSnippetPicklist\" cssclass=\"payrollToolsCSS MultiplePicklistField\" nonelabel=\"{{UIOnly}}\"><label/><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions/></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor></components></division><division behavior=\"specified\" verticalalign=\"center\" uniqueid=\"statusDivisionUniqueID\" width=\"300px\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"UIPayrollDisplayModel\" buttonposition=\"left\" uniqueid=\"sk-3cKZpW-2365\" mode=\"readonly\" layout=\"\" cssclass=\"StatusList\"><columns><column width=\"100%\" cssclass=\"QBOList\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"StatusUI\" valuehalign=\"\" type=\"CUSTOM\" snippet=\"statusRender\" cssclass=\"StatusPicklistMultiID\"/></fields></section></sections></column></columns></basicfieldeditor></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"60px\" ratio=\".8\"><components/></division><division behavior=\"fit\" verticalalign=\"top\"><components><wrapper uniqueid=\"sk-3GWJ5o-700\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"false\" model=\"PublicLogin\" buttonposition=\"left\" uniqueid=\"ExternalLinksId\" mode=\"edit\" layout=\"\" cssclass=\"\"><columns layoutmode=\"responsive\" columngutter=\"4px\" rowgutter=\"4px\"><column verticalalign=\"center\" behavior=\"specified\" width=\"260px\"><sections><section title=\"ABC\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"PayrollTools\" valuehalign=\"\" type=\"\" nonelabel=\" \" cssclass=\"payrollToolsCSS\"><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions logictype=\"and\"/></field></fields><renderconditions logictype=\"and\"/></section></sections><renderconditions logictype=\"and\"/></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"multiple\" operator=\"not in\" fieldmodel=\"UserPayroll\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"Profile.Name\" value=\"\" enclosevalueinquotes=\"true\"><values><value>SB Care DT and OL</value><value>Tier2SBCDTandOL</value><value>Tier3SBCDTandOL</value></values></rendercondition></renderconditions></basicfieldeditor></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"left,\" borders=\"left,\"><styles><styleitem property=\"border-left\" value=\"2px solid #d4d7dc\"/><styleitem property=\"padding-left\" value=\"16px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" enclosevalueinquotes=\"false\" fieldmodel=\"PicklistBackendModel\" sourcetype=\"modelproperty\" nosourcerowbehavior=\"deactivate\" sourceproperty=\"data.length\" operator=\"gt\" value=\"1\"/></renderconditions></grid></components><styles><styleitem type=\"background\" bgtype=\"color\"><styles><styleitem property=\"background-color\" value=\"#f4f5f8\"/></styles></styleitem><styleitem type=\"border\" borders=\"none\" padding=\"bottom,left,top,\"><styles><styleitem property=\"padding-left\" value=\"10px\"/><styleitem property=\"padding-top\" value=\"10px\"/><styleitem property=\"padding-bottom\" value=\"5px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"collapse\"/></styles></wrapper><wrapper uniqueid=\"sk-2glV9s-804\"><components><wrapper uniqueid=\"sk-2gl_Yv-833\"><components><tabset rememberlastusertab=\"false\" defertabrendering=\"true\" uniqueid=\"WidgetsTabSetID\" renderas=\"\"><tabs><tab name=\"Summary\"><components><pageregion uniqueid=\"sk-3HcEez-283\" label=\"PayrollSummaryTab\"><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"/></pageregion></components></tab><tab name=\"Billing\" loadlazypanels=\"true\"><components><includepanel type=\"skuid\" uniqueid=\"BillingPIID\" pagename=\"PayrollBilling\" module=\"\" querystring=\"companyID={{$Model.FinalPayrollIDModel.data.0.PayrollID}}&amp;CountryCode={{$Model.PicklistBackendModel.data.0.CountryCode}}\"/></components><oninitialshowactions/><onshowactions><action type=\"custom\" snippet=\"BillingPIIDRefreshJS\"/></onshowactions></tab><tab name=\"Payroll\" loadlazypanels=\"true\"><components><includepanel type=\"skuid\" uniqueid=\"PayrollPIID\" pagename=\"PayrollSubTab\" module=\"\" querystring=\"companyID={{$Model.FinalPayrollIDModel.data.0.PayrollID}}&amp;CountryCode={{$Model.PicklistBackendModel.data.0.CountryCode}}&amp;RealmID={{$Model.Account.data.0.Company_ID__c}}\"/></components><oninitialshowactions/><onshowactions><action type=\"custom\" snippet=\"PayrollPIIDRefreshJS\"/></onshowactions><renderconditions logictype=\"and\"/></tab><tab name=\"Taxes\" loadlazypanels=\"true\"><components><includepanel type=\"skuid\" uniqueid=\"TaxesPIID\" pagename=\"PayrollTaxes\" module=\"\" querystring=\"companyID={{$Model.FinalPayrollIDModel.data.0.PayrollID}}&amp;CountryCode={{$Model.PicklistBackendModel.data.0.CountryCode}}&amp;RealmID={{$Model.Account.data.0.Company_ID__c}}\" lazyload=\"true\"/></components><oninitialshowactions/><onshowactions><action type=\"custom\" model=\"Account\" behavior=\"standard\" snippet=\"TaxesPIIDRefreshJS\"><models><model>SummaryTabURL</model></models></action></onshowactions></tab><tab name=\"Tax &amp; Wage\" loadlazypanels=\"true\"><components><includepanel type=\"skuid\" uniqueid=\"TaxWagePIID\" pagename=\"TaxAndWageSummary\" module=\"\" querystring=\"companyID={{$Model.FinalPayrollIDModel.data.0.PayrollID}}&amp;CountryCode={{$Model.PicklistBackendModel.data.0.CountryCode}}\" lazyload=\"true\"/></components><oninitialshowactions/><onshowactions><action type=\"custom\" snippet=\"TaxWagePIIDRefreshJS\"/></onshowactions></tab><tab name=\"Employees &amp; Contractors\" loadlazypanels=\"true\"><components><includepanel type=\"skuid\" uniqueid=\"EmployeeContractorsPIID\" pagename=\"EmployeesContractors\" module=\"\" querystring=\"companyID={{$Model.FinalPayrollIDModel.data.0.PayrollID}}&amp;CountryCode={{$Model.PicklistBackendModel.data.0.CountryCode}}\" lazyload=\"true\"/></components><oninitialshowactions/><onshowactions><action type=\"custom\" snippet=\"EmployeeContractorsPIIDRefreshJS\"/></onshowactions></tab></tabs><renderconditions logictype=\"and\"/></tabset></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles></wrapper></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"full\" height=\"collapse\"/></styles></wrapper></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"left,\"><styles><styleitem property=\"padding-left\" value=\"20px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components><resources><labels/><javascript><jsitem location=\"inline\" name=\"newInlineJS\" cachelocation=\"false\" url=\"\">(function(skuid){\n\tvar $ = skuid.$;\n\t$(document.body).one('pageload',function(){\n\t\t\n\t\tconsole.log('----- This is the begening of moving subscription buttons ---- ');\n\t\t\n\t\t\n\t\tmoveAllOthertButton();\n\n\n\t/***************** Add all buttons to table from button set  ******************************\n\t    ************************************************************************************/\n\tfunction moveAllOthertButton() {\n\t    \n\t    /* Version 2: Takes the original export button and throws it in the new position. */\n        function clickCallMe(i){ // Avoid Closure in loop.\n            return function(){\n                $(i).click();\n            }\n        }\n\t\n\tvar wrappers = $('.movebuttons');\n        \n        for (var i = 0; i &lt; wrappers.length; i++){\n            \n            var buttonset  = $(wrappers[i]).find('.buttonsset');\n            var buttons = skuid.$(buttonset[0]).find('.nx-template');\n            var header = skuid.$(wrappers[i]).find('.addbuttons').find('.nx-item');\n            \n            for(var j = 0; j &lt; buttons.length; j++)\n            {\n                var button = $(buttons[j]);\n                //console.log(button);\n                var clone = button.clone().appendTo(header).addClass('newbuttons').click(clickCallMe(button));\n            } \n            \n            //console.log(button);\n            //var header = $(wrappers[i]).find('.addbuttons').find('.nx-editor-header');\n           //var clone = button.clone().appendTo(header).addClass('newbuttons').addClass('inline').removeClass(\"buttonsset\");\n           $(wrappers[i]).find('.buttonsset').addClass('buttonstohide');\n        }\n\t\t\n\t}\n\t\t\n\t\n\t});\t\n\t\n})(skuid);</jsitem><jsitem location=\"inlinesnippet\" name=\"BillingPIIDRefreshJS\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\nconsole.log(params);\n\n skuid.$('#BillingPIID').data('object').load();\n </jsitem><jsitem location=\"inlinesnippet\" name=\"PayrollPIIDRefreshJS\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\nskuid.$('#PayrollPIID').data('object').load();\n</jsitem><jsitem location=\"inlinesnippet\" name=\"TaxesPIIDRefreshJS\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n skuid.$('#TaxesPIID').data('object').load();\n</jsitem><jsitem location=\"inlinesnippet\" name=\"TaxWagePIIDRefreshJS\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n skuid.$('#TaxWagePIID').data('object').load();\n</jsitem><jsitem location=\"inlinesnippet\" name=\"EmployeeContractorsPIIDRefreshJS\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n skuid.$('#EmployeeContractorsPIID').data('object').load();</jsitem><jsitem location=\"inlinesnippet\" name=\"OpenPublicAccess\" cachelocation=\"false\">var PayrollAssetsModel = skuid.model.getModel('PayrollWidgets');\nPayrollAssetsRow = PayrollAssetsModel.getFirstRow();\nvar PublicLoginURL = PayrollAssetsRow.Public_Login_URL__c;\n\nvar accountModel = skuid.model.getModel('FinalPayrollIDModel');\naccountRow = accountModel.getFirstRow();\npayrollCoID = accountRow.PayrollID;\nconsole.log(payrollCoID);\n\nvar LoginToolModel = skuid.$M('PublicLogin'),\n    newRow = LoginToolModel.getFirstRow(),\n    currentVal = newRow.PayrollTools;\n\nif (currentVal !== '') {\n    var url = PublicLoginURL + payrollCoID;\n    if(payrollCoID)\n    {\n        console.log('  url  : ' +url);\n        window.open(url, \"_blank\");\n    }\n    else\n    {\n        alert('Payroll Id does not exist, cannot open the page.');\n    }\n    var LoginToolModel = skuid.$M('PublicLogin');\n        LoginToolRow = {};\n        newRow = LoginToolModel.getFirstRow();\n        var currentvalue = newRow.PayrollTools;\n        console.log('currentvalue  : ' +currentvalue);\n        \n        LoginToolModel.updateRow(newRow, {PayrollTools: ''});\n      \n    \n    $(\"#ExternalLinksId select\").val('');\n}</jsitem><jsitem location=\"inlinesnippet\" name=\"OpenCSServer\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\n//1. Check if the ACCOUNT in context has CAN || Compan ID ---&gt; open the Popup\n//2. If nothign exists --&gt; Redirect User to online Order Page\nvar accountModel = skuid.model.getModel('FinalPayrollIDModel');\naccountRow = accountModel.getFirstRow();\npayrollCoID = accountRow.PayrollID;\nconsole.log(payrollCoID);\n\nvar PayrollAssetsModel = skuid.model.getModel('PayrollWidgets');\nPayrollAssetsRow = PayrollAssetsModel.getFirstRow();\nvar CS_Server_URL = PayrollAssetsRow.CS_Server_URL__c;\n\n\nvar LoginToolModel = skuid.$M('PublicLogin'),\n    newRow = LoginToolModel.getFirstRow(),\n    currentVal = newRow.PayrollTools;\n\nif (currentVal !== '') {\n    \n    var url = CS_Server_URL + payrollCoID;\n    console.log(url);\n    if(payrollCoID)\n    {\n\n        if(typeof(srcUp) == 'function') //Checks that it is in console\n        { \n        var openSubtab = function(result){ \n            sforce.console.openSubtab(result.id,url, true, 'CS Server', null); \n        }; \n        sforce.console.getEnclosingPrimaryTabId(openSubtab); \n        }\n        else{ \n        window.open(url, \"_blank\");\n        }\n    \n    }\n    else\n    {\n        alert('Payroll Id does not exist, cannot open the page.');\n    }\n    \n    var LoginToolModel = skuid.$M('PublicLogin');\n        LoginToolRow = {};\n        newRow = LoginToolModel.getFirstRow();\n        var currentvalue = newRow.PayrollTools;\n        console.log('currentvalue  : ' +currentvalue);\n        \n        LoginToolModel.updateRow(newRow, {PayrollTools: ''});\n      \n    \n    $(\"#ExternalLinksId select\").val('');\n}</jsitem><jsitem location=\"inlinesnippet\" name=\"OpenCanadianCSServer\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\n//1. Check if the ACCOUNT in context has CAN || Compan ID ---&gt; open the Popup\n//2. If nothign exists --&gt; Redirect User to online Order Page\nvar accountModel = skuid.model.getModel('FinalPayrollIDModel');\naccountRow = accountModel.getFirstRow();\npayrollCoID = accountRow.PayrollID;\nconsole.log(payrollCoID);\n\nvar PayrollAssetsModel = skuid.model.getModel('PayrollWidgets');\nPayrollAssetsRow = PayrollAssetsModel.getFirstRow();\nvar Canadian_CS_Server_URL = PayrollAssetsRow.Canadian_CS_Server_URL__c;\n\n\nvar LoginToolModel = skuid.$M('PublicLogin'),\n    newRow = LoginToolModel.getFirstRow(),\n    currentVal = newRow.PayrollTools;\n\nif (currentVal !== '') {\n    \n    var url = Canadian_CS_Server_URL + payrollCoID;\n    console.log(url);\n    if(payrollCoID)\n    {\n\n        if(typeof(srcUp) == 'function') //Checks that it is in console\n        { \n        var openSubtab = function(result){ \n            sforce.console.openSubtab(result.id,url, true, 'CS Server', null); \n        }; \n        sforce.console.getEnclosingPrimaryTabId(openSubtab); \n        }\n        else{ \n        window.open(url, \"_blank\");\n        }\n    \n    }\n    else\n    {\n        alert('Payroll Id does not exist, cannot open the page.');\n    }\n    \n    var LoginToolModel = skuid.$M('PublicLogin');\n        LoginToolRow = {};\n        newRow = LoginToolModel.getFirstRow();\n        var currentvalue = newRow.PayrollTools;\n        console.log('currentvalue  : ' +currentvalue);\n        \n        LoginToolModel.updateRow(newRow, {PayrollTools: ''});\n      \n    \n    $(\"#ExternalLinksId select\").val('');\n}</jsitem><jsitem location=\"inline\" name=\"MultiplePayrollIDJS\" cachelocation=\"false\" url=\"\">(function(skuid){\n\tvar $ = skuid.$;\n\t$(document.body).one('pageload',function(){\n\t    \n\t\n    \n\t\n\t\t\n\t});\n})(skuid);</jsitem><jsitem location=\"inlinesnippet\" name=\"FieldRenderedSnippetPicklist\" cachelocation=\"false\">\nvar field = arguments[0],\n      value = arguments[1],\n\t$ = skuid.$;\n\n setTimeout(function() {\n        \n        var AllPayrollModel = skuid.model.getModel('PicklistBackendModel'); \n        var firstPayroll = AllPayrollModel.getFirstRow();\n        var DefaultStringtoDisplay =  firstPayroll.CurrentProductNo;\n        var DefaultStatustoDisplay =  firstPayroll.StatusUI;\n        console.log('DefaultStringtoDisplay : ' +DefaultStringtoDisplay);\n            \t    \n           //var currentval = skuid.$('#TitleHeaderCurrentproductID').find('.nx-template').html();\n           //console.log('currentval  : ' +currentval);\n           \n        var UIPayrollDisplayModel = skuid.$M('UIPayrollDisplayModel');\n        var UIPayrollDisplayRow = {};\n        var newRow = UIPayrollDisplayModel.createRow();\n        UIPayrollDisplayRow[newRow.Id] = ({ DisplayPayrollandCount : DefaultStringtoDisplay,\n                                            StatusUI : DefaultStatustoDisplay\n        \t\t\t\t\t\t        });\n        UIPayrollDisplayModel.updateRows(UIPayrollDisplayRow);\n           \n       var MultiplePayrollAssetList = [];    \n         $.each(AllPayrollModel.data,function(i,row){\n            MultiplePayrollAssetList.push(row.PicklistValues);\n        });\n\t    \n        var picklistEntries = field.metadata.picklistEntries;\n        picklistEntries.length = 0;\n        var defaultvalue = '';\n        for(i=0; i&lt;=MultiplePayrollAssetList.length;i++)\n               {\n                   console.log('Counter : ' +MultiplePayrollAssetList[i]);\n                   if(MultiplePayrollAssetList[i])\n                   {\n                    picklistEntries.push(\n                        { value: MultiplePayrollAssetList[i], label: MultiplePayrollAssetList[i], defaultValue: false, active: true }\n                     );\n                   }\n               }\n            \n        skuid.ui.fieldRenderers[field.metadata.displaytype].edit( field, value);\n        \n        defaultvalue = MultiplePayrollAssetList[0];\n        console.log('set value to the picklist : ' +defaultvalue);\n        $(\".MultiplePicklistField select\").val(defaultvalue);\n\n\n }, 50);\n\n\n</jsitem><jsitem location=\"inlinesnippet\" name=\"UpdateMultiPayrollPicklistActionsJS\" cachelocation=\"false\">var params = arguments[0],\n                $ = skuid.$;\n                \n                var MultiplePayrollModel = skuid.$M('PicklistModel'),\n    newRow = MultiplePayrollModel.getFirstRow(),\n    currentVal = newRow.UIOnly;\n\nif (currentVal) {\n                \n   // alert('this is for the field change  :  ' +currentVal);\n   console.log('this is for the field change  :  ' +currentVal);\n    \n    var AllPayrollModel = skuid.model.getModel('PicklistBackendModel');\n\n  var payrollId = '';\n  var CurrentproductDisplay = '';\n  var StatusUI = '';\n  $.each(AllPayrollModel.data,function(i,row){\n           if(currentVal === row.PicklistValues)\n           {\n               payrollId = row.payrollID;\n               CurrentproductDisplay = row.CurrentProductNo;\n               StatusUI = row.StatusUI;\n               return;\n           }\n        });\n    \n    console.log('payrollId  : ' +payrollId);\n    \n    skuid.$M('UIPayrollDisplayModel').abandonAllRows();\n     var UIPayrollDisplayModel = skuid.$M('UIPayrollDisplayModel');\n        var UIPayrollDisplayRow = {};\n        var newRow = UIPayrollDisplayModel.createRow();\n        UIPayrollDisplayRow[newRow.Id] = ({ DisplayPayrollandCount : CurrentproductDisplay,\n                                            StatusUI : StatusUI\n                                                                                                        });\n        UIPayrollDisplayModel.updateRows(UIPayrollDisplayRow);\n        \n        //Populate to the values to the below models \n        \n        var PayrollSummaryListModel = skuid.$M('PayrollSummaryDataList');\n        var rows = PayrollSummaryListModel.getRows();\n        var parollIds = rows.map(function(a) {return a.payrollCompanyId});\n        \n        /*rows.map(function(i,row){\n            return row.payrollCompanyId;\n        });\n        */\n       \n       var FinalPayrollIDModel = skuid.$M('FinalPayrollIDModel');\n       skuid.$M('FinalPayrollIDModel').abandonAllRows();\n        FinalPayrollIDModel.createRow({additionalConditions:[{field: 'PayrollID', value: payrollId} ]});\n       \n        \n       var i = parollIds.indexOf(payrollId);\n       console.log('i  :   ' +i);\n       if(i &gt;=0)\n       {\n           var toAdoptRow = rows[i]; \n           console.log(rows);\n                    \n           skuid.$M('PayrollSummaryData').abandonAllRows();\n           var SingleRowyModel = skuid.$M('PayrollSummaryData');\n           //SingleRowyModel.adoptRows(toAdoptRow);\n           \n           var rowUpdates = {};\n           \n            $.each(toAdoptRow,function(fieldId,val) {\n                if (val !== null)  {\n                    var modelField = SingleRowyModel.getField(fieldId);\n                    if ((typeof val === 'object') || (modelField &amp;&amp; modelField.createable)) {\n                        rowUpdates[fieldId] = val;\n                    }\n                }\n            });\n        \n        var newRow = SingleRowyModel.createRow();\n        SingleRowyModel.updateRow(newRow, rowUpdates);\n          \n        RemoveerrorNoServiceResponse();\n       }\n       else\n       {\n           \n           errorNoServiceResponse();\n           skuid.$M('PayrollSummaryData').abandonAllRows();\n       }\n       \n       \n        var ActiveTabID;\n        var tabcomponent  = skuid.$('#WidgetsTabSetID').find('ul').children();\n        $.each(tabcomponent, function( index, value ) {\n            \n            var construct = 'li:nth-child('+(index+1)+')';\n            var  tocheck = skuid.$('#WidgetsTabSetID').find(construct);\n            \n            if(tocheck.attr('aria-selected') == 'true')\n            {\n                var ActiveTab = tocheck.find('a');\n                ActiveTabID = ActiveTab.attr('id');\n            }\n        });\n        \n       \n       var findvalue =  'div[aria-labelledby='+'\\''+ActiveTabID+'\\']';\n       console.log('findvalue  : ' +findvalue);\n       var tab = skuid.$('#WidgetsTabSetID').find(findvalue).children();\n       \n        var tabid = tab.attr('id'); \n        \n        if(tabid)\n        {\n            Idvalue = '#'+tabid;\n            console.log('hashed ID value : '+Idvalue);\n            if(skuid.$(Idvalue).data('object'))\n            skuid.$(Idvalue).data('object').load();\n        }\n    \n}\n\nfunction errorNoServiceResponse() {\n        var pageTitle = $('#sk-3aS1rC-687');\n        var editor = pageTitle.data('object').editor;\n        editor.handleMessages(\n          [\n             {\n                 message: 'Not able to find any Payroll Summary Data. Please contact Administrator!',\n                 severity: 'ERROR'\n             } \n           ]\n        );\n        var ErrorMessage = pageTitle.find('.nx-error')[0].style.display = 'block';\n    }\n    \n    function RemoveerrorNoServiceResponse() {\n        var pageTitle = $('#sk-3aS1rC-687');\n        var errorComponent = pageTitle.find('.nx-error');\n        if(errorComponent[0])\n        {  \n            var ErrorMessage = pageTitle.find('.nx-error')[0].style.display = 'none';\n        }\n        \n    }\n</jsitem><jsitem location=\"inline\" name=\"PayrollOnloadJS\" cachelocation=\"false\" url=\"\">(function(skuid){\n\tvar $ = skuid.$;\n\t$(document.body).one('pageload',function(){\n\t    \n\t    skuid.$.each(skuid.$M('PayrollAssetRowsInactive').getRows(),updateBackendUI);\n        skuid.$.each(skuid.$M('PayrollAssetRows').getRows(),updateBackendUI);\n        skuid.$.each(skuid.$M('PayrollAccountantClientAssets').getRows(),updateBackendUI);\n         \n            \n        function updateBackendUI(index,payroll){\n                var AssetFilterModel = skuid.$M('PicklistBackendModel');\n                var AssetFilterRow = {};\n                var newRow = AssetFilterModel.createRow();\n                 var UIPicklist;\n                if(payroll.Online_Current_Product__c)\n                {\n                    UIPicklist = payroll.Online_Current_Product__c ;\n                }\n                if(payroll.Payroll_Company_Id__c) \n                {\n                   UIPicklist = (UIPicklist)? UIPicklist + ' | ' + payroll.Payroll_Company_Id__c : payroll.Payroll_Company_Id__c;\n                }\n                if(payroll.Status)\n                {\n                     UIPicklist =  (UIPicklist)? UIPicklist + ' | ' + payroll.Status :  payroll.Status;\n                }\n                AssetFilterRow[newRow.Id] = ({ CurrentProduct : payroll.Online_Current_Product__c,\n                \t\t\t\t\t\t\t\tpayrollID : payroll.Payroll_Company_Id__c,\n                \t\t\t\t\t\t\t\tStatusUI : payroll.Status,\n                \t\t\t\t\t\t\t\tPurchaseDate : payroll.PurchaseDate,\n                \t\t\t\t\t\t\t\tPicklistValues : UIPicklist,\n                \t\t\t\t\t\t\t\tCountryCode : payroll.Country_Code_2_Digit__c\n                \t\t\t\t\t        });\n                AssetFilterModel.updateRows(AssetFilterRow);\n        }\n            \n        var AllPayrollModel = skuid.model.getModel('PicklistBackendModel');    \n        var AllPayrollModelLength = AllPayrollModel.getRows().length;\n        console.log('AllPayrollModelLength  : ' +AllPayrollModelLength);\n            \n           \n         $.each(AllPayrollModel.data,function(i,row){\n            AllPayrollModel.updateRow(row,{\n            CurrentProductNo : row.CurrentProduct + ' (' + (i + 1) + 'of '+AllPayrollModelLength+')'\n            });\n        });\n\t    \n\t    PayrollModelrow = AllPayrollModel.getFirstRow();\n        var InitialPayrollId = AllPayrollModel.getFieldValue(PayrollModelrow, 'payrollID');  \n        console.log('InitialPayrollId : '+InitialPayrollId);\n\t    \n\t    var FinalPayrollIDModel = skuid.$M('FinalPayrollIDModel');\n       skuid.$M('FinalPayrollIDModel').abandonAllRows();\n        FinalPayrollIDModel.createRow({additionalConditions:[{field: 'PayrollID', value: InitialPayrollId} ]});\n        \n     setTimeout(function() {\n                var selectElement = skuid.$('#MultiplePicklistField').find('select').attr('id','Select-box');\n                var getselectId = skuid.$('#MultiplePicklistField').find('select').attr('id');\n                console.log('@$^@$@%^$%^@  getselectId  : @#%&amp;^%&amp;%@&amp;^' +getselectId);\n                \n                \n                \n        }, 1500);\n        \n\t    \n\t});\n})(skuid);</jsitem><jsitem location=\"inline\" name=\"getPayrollSummaryData\" cachelocation=\"false\" url=\"\">(function(skuid){\n\tvar $ = skuid.$;\n\t$(document.body).one('pageload',function(){\n\t    skuid.$.blockUI();\n\t    console.log('starting summary data fetch');\n\t    try {\n\t        var countryCode, realmId;\n\t        // get picklist model first to determine call for single asset or multiple asset\n\t        var pickListModel = skuid.model.getModel('PicklistBackendModel');\n    \t\tvar pickListModelRows = pickListModel.getRows();\n    \t\tif (pickListModelRows.length &lt;= 0 ) {\n    \t\t    // no asset\n    \t\t    console.log('No asset found!');\n    \t\t    skuid.$.unblockUI();\n    \t\t    return;\n    \t\t}\n    \t\t// get account model to get realm\n    \t\tvar acctModel = skuid.$M('Account');\n    \t\tvar acctModelRow = acctModel.getFirstRow();\n    \t\trealmId = acctModelRow.Company_ID__c;\n    \t\tif (!realmId) {\n    \t\t    // no realm found, payroll service call can not be made\n    \t\t    console.log('No realm found!');\n    \t\t    skuid.$.unblockUI();\n    \t\t    return;\n    \t\t    \n    \t\t}\n    \t\t\n    \t\t// By default we show data for the first row of the picklist\n    \t\tvar pickListModelDefRow = pickListModel.getFirstRow();\n    \t\tif (pickListModelDefRow) {\n    \t\t    countryCode = pickListModelDefRow.CountryCode;\n    \t\t} else {\n    \t\t    // if country code not found then default to US\n    \t\t    countryCode = 'US';\n    \t\t}\n    \t\t\n   \t\t    // if model has only one row then call single asset method else multi asset method\n    \t\tif (pickListModelRows.length &gt; 1) {\n    \t\t    // call multipayroll method\n    \t\t    getPayrollDataMultiAsset(realmId, countryCode);\n    \t\t    \n    \t\t} else {\n    \t\t    // call single payroll method\n    \t\t    getPayrollDataOneAsset(realmId, countryCode);\n    \t\t    \n    \t\t}\n\t        \n\t    } catch (err) {\n            console.log('Exception occured: ' + err.message);\n            skuid.$.unblockUI();\n        }\n    \n\t});\n\t\n\t// this method handles one asset scenario\n\tfunction getPayrollDataOneAsset(realm, countryCode) {\n\t    PayrollV4Service.getPayrollServiceResponse(realm, countryCode, function(result, event) {\n\t        console.log('inside one asset call');\n            if (event.status) {\n                try {\n                     //parse json response coming from payroll service\n                    var updatedresult = filterEscapeChar(result);\n                    var respObjList = JSON.parse(updatedresult);\n                    \n                    // if no response then return with error response\n                    if (respObjList.length &lt;= 0) {\n                        errorNoServiceResponse();\n                        skuid.$.unblockUI(); \n                        return;\n                    }\n                    \n                    //Update FinalPayrollIDModel model for widget and passing first element\n                    // on one asset scenario\n                    updateFinalPayrollIDModel(respObjList[0]);\n                   \n                    // find the asset matching from the picklist model\n                    var defaultRespObj = findDefaultAsset(respObjList);\n                    if (!defaultRespObj) {\n                       errorNoServiceResponse();\n                       skuid.$.unblockUI(); \n                       return;\n                    } \n                    \n                    // update model that holds data for default asset\n                    var modelNameForOneAsset = 'PayrollSummaryData';\n                    updateModelWithSummaryData(defaultRespObj, modelNameForOneAsset);\n                    \n                    // update model that holds all asset company data \n                    var modelNameForMultiAsset = 'PayrollSummaryDataList';\n                    updateModelWithSummaryData(defaultRespObj, modelNameForMultiAsset);\n                    \n                    skuid.$.unblockUI(); \n                    \n                } catch(exp) {\n                    console.log('Exception occured: ' + exp.message);\n                    skuid.$.unblockUI();\n                }\n              \n            } else if (event.type === 'exception') {\n                console.log('JS exception occurred' + event.message);\n                errorNoServiceResponse();\n                skuid.$.unblockUI();\n            }\n\t        \n\t    });\n\t}\n\t\n\t// this method handles multiple asset scenario\n\tfunction getPayrollDataMultiAsset(realm, countryCode) {\n\t    console.log('starting mulitple fetch');\n\t    PayrollV4Service.getMultiPayrollServiceResponse(realm, countryCode, function(result, event) {\n\t        console.log('inside multi asset call');\n            if (event.status) {\n                try {\n                     //parse json response coming from payroll service\n                    var updatedresult = filterEscapeChar(result);\n                    //console.log('updatedResult: ' + updatedresult);\n                    var respObjList = JSON.parse(updatedresult);\n                    //console.log('Summary Response: ' + respObjList[0]);\n                    \n                    // if no response then return with error message\n                    if (respObjList.length &lt;= 0) {\n                        errorNoServiceResponse();\n                        skuid.$.unblockUI(); \n                        return;\n                    }\n                    \n                    // First update model that holds summary data for multiple asset\n                    var modelNameForMultiAsset = 'PayrollSummaryDataList';\n                    for (var count = 0; count &lt; respObjList.length; count++ ) {\n                        updateModelWithSummaryData(respObjList[count], modelNameForMultiAsset);\n                        \n                    }\n                    \n                    // find default asset\n                    var defaultRespObj = findDefaultAsset(respObjList);\n                    if (defaultRespObj) {\n                         // update model that holds data for default asset\n                        var modelNameForOneAsset = 'PayrollSummaryData';\n                        updateModelWithSummaryData(defaultRespObj, modelNameForOneAsset);\n                    } else {\n                        errorNoServiceResponse();\n                    }\n                    \n                    skuid.$.unblockUI(); \n                    \n                } catch(exp) {\n                    console.log('Exception occured: ' + exp.message);\n                    skuid.$.unblockUI();\n                }\n              \n            } else if (event.type === 'exception') {\n                console.log('JS exception occurred' + event.message);\n                errorNoServiceResponse();\n                skuid.$.unblockUI();\n            }\n\t        \n\t    });\n\t}\n\t\n\t\n\tfunction updateModelWithSummaryData(respObj, modelName) {\n\t    var ePayEfileValue = getStateEpayEfile(respObj.stateEfileEpay);\n        var effectiveDates = getEffectiveDateValue(respObj.effectiveDates);\n        var suiRates = getSUIRates(respObj.suiRates);\n        var stateformOutOut = getStateFormOptOut(respObj.stateFormOptOutMap);\n        var governmentIdValue = getGovernmentIdValues(respObj.governmentIdMap);\n        var empAcctNumber = governmentIdValue.empAcctNumber;\n        var empAcctId = governmentIdValue.empAcctId;\n        var creditCard = getCreditCardNumber(respObj.creditCardList);\n        var offerCode = getOfferCode(respObj.offerCodeList);\n        var bankRoutingNumber = getBankRoutingNumber(respObj.bankRoutingNumberList);\n        var bankAcctNumber = getBankAcctNumber(respObj.bankAcctNumberList);\n        \n        var summaryModel = skuid.$M(modelName);\n        var summaryModelRow = summaryModel.createRow();\n        \n        summaryModel.updateRow(summaryModelRow, {payrollCompanyId: respObj.payrollCompanyId, businessName: respObj.businessName, realmId: respObj.realmId,\n                                          payrollStartDate: respObj.payrollStartDate, country: respObj.country, sourceCode: respObj.sourceCode,\n                                          userId: respObj.userId, contactName: respObj.contactName, emailAddress: respObj.emailAddress,\n                                          workLocation: respObj.workLocation, service: respObj.service, primaryPhone: respObj.primaryPhone,\n                                          preFund: respObj.preFund, filingAddress: respObj.filingAddress, billingAddress: respObj.billingAddress,\n                                          accountant: respObj.accountant, companyType: respObj.companyType, offerCode: offerCode,\n                                          federalEIN: respObj.federalEIN, directDeposit: respObj.directDeposit, stateEpayEfile: ePayEfileValue,\n                                          governmentId: respObj.governmentIdMap, filingName: respObj.filingName, depositSchedule: respObj.depositSchedule,\n                                          status401k: respObj.status401k, principalName: respObj.pricinpalName, bankAcctNumber: bankAcctNumber,\n                                          eftpsEfile: respObj.eftpsEfile, stateEffectiveDate: effectiveDates, stateFormOptOut: stateformOutOut,\n                                          stateSUIRate: suiRates, employerAcctNumber: empAcctNumber, employerAcctId: empAcctId, creditCard: creditCard,\n                                          bankRoutingNumber: bankRoutingNumber, federalEPayEFile: respObj.federalEPayEFile\n        });\n\t}\n\t\n\t\n\tfunction updateFinalPayrollIDModel(defaultRespObj) {\n\t     var modelFinalPayrollID = skuid.$M('FinalPayrollIDModel');\n\t     var firstModelRow = modelFinalPayrollID.getFirstRow();\n\t     if (!firstModelRow || !firstModelRow.PayrollID) {\n\t         var modelRow = modelFinalPayrollID.createRow();\n\t         modelFinalPayrollID.updateRow(modelRow, {PayrollID: defaultRespObj.payrollCompanyId});\n\t     }\n\t}\n\t\n\tfunction findDefaultAsset(respObjList) {\n\t    var defaultAsset;\n\t    var pickListModel = skuid.model.getModel('FinalPayrollIDModel');\n    \tvar defaultRow = pickListModel.getFirstRow();\n    \tif (!defaultRow) {\n    \t    return defaultAsset;\n    \t}\n    \tfor (var count = 0; count&lt; respObjList.length; count++) {\n    \t    if (defaultRow.PayrollID == respObjList[count].payrollCompanyId) {\n    \t        // this is the default asset\n    \t        defaultAsset = respObjList[count];\n    \t        break;\n    \t    }\n    \t    \n    \t}\n    \tconsole.log('default Asset: ' + defaultAsset);\n    \treturn defaultAsset;\n\t}\n\t\n\t// Methods from payroll summary js\n\tfunction getStateEpayEfile (stateEpayEfileMap) {\n        var ePayEfileValue = '';\n        for (var key in stateEpayEfileMap) {\n            ePayEfileValue += key.substring(0,2) + ' : ' + stateEpayEfileMap[key] + ' ';\n                    \n        }\n        \n        return ePayEfileValue;\n        \n    }\n    \n    function getEffectiveDateValue (effectiveDateMap) {\n        var effectiveDateValue = '';\n        for (var key in effectiveDateMap) {\n            effectiveDateValue += key + ' : ' + effectiveDateMap[key] + ' ';\n                    \n        }\n        \n        return effectiveDateValue;\n        \n    }\n    \n    function getCreditCardNumber(creditCardList) {\n        var creditCardNumber = '';\n        if (creditCardList.length &gt; 0) {\n            creditCardNumber = creditCardList[0];\n            \n        }\n        \n        return creditCardNumber;\n        \n    }\n    \n    function getOfferCode(offerCodeList) {\n        var offerCode = '';\n        if (offerCodeList.length &gt; 0) {\n            offerCode = offerCodeList[0];\n            \n        }\n        \n        return offerCode;\n        \n    }\n    \n    function getBankRoutingNumber(bankRoutingNumberList) {\n        var routingNumber = '';\n        if (bankRoutingNumberList.length &gt; 0) {\n            routingNumber = bankRoutingNumberList[0];\n            \n        }\n        \n        return routingNumber;\n        \n    }\n    \n    function getBankAcctNumber(bankAcctNumberList) {\n        var bankAcctNumber = '';\n        if (bankAcctNumberList.length &gt; 0) {\n            bankAcctNumber = bankAcctNumberList[0];\n            \n        }\n        \n        return bankAcctNumber;\n        \n    }\n    \n    function getSUIRates (suiRateMap) {\n        var suiRateValue = '';\n        for (var key in suiRateMap) {\n            suiRateValue += key + ' : ' + suiRateMap[key] + ' ';\n           \n        }\n        \n        return suiRateValue;\n        \n    }\n    \n    function getStateFormOptOut (stateformOutOutMap) {\n        var stateformOutOutValue = '';\n        for (var key in stateformOutOutMap) {\n            stateformOutOutValue += key.substring(0,2) + ' : ' + stateformOutOutMap[key] + ' ';\n                    \n        }\n        \n        return stateformOutOutValue;\n        \n    }\n    \n    function getGovernmentIdValues (governmentIdMap) {\n        var governmentIdValue = {empAcctNumber: '', empAcctId: ''};\n        //console.log(governmentIdValue);\n        for (var key in governmentIdMap) {\n            if (key.search('Number') &gt; 0) {\n                 governmentIdValue.empAcctNumber += key.substring(0,2) + \n                     ' : ' + governmentIdMap[key] + '  ';\n                \n            } else if (key.search('ID') &gt; 0) {\n                 governmentIdValue.empAcctId += key.substring(0,2) + \n                     ' : ' + governmentIdMap[key] + '  ';\n            }\n                    \n        }\n        \n        return governmentIdValue;\n        \n    } \n    \n    function errorNoCompanyId() {\n        var pageTitle = $('#sk-3aS1rC-687');\n        var editor = pageTitle.data('object').editor;\n        editor.handleMessages(\n          [\n             {\n                 message: 'No Salesforce Realm Id found!',\n                 severity: 'ERROR'\n             } \n           ]\n        );\n    }\n    \n    function errorNoServiceResponse() {\n        var pageTitle = $('#sk-3aS1rC-687');\n        var editor = pageTitle.data('object').editor;\n        editor.handleMessages(\n          [\n             {\n                 message: 'Not able to find any Payroll Summary Data. Please contact Administrator!',\n                 severity: 'ERROR'\n             } \n           ]\n        );\n    }\n    \n    function filterEscapeChar(result) {\n        // console.log('response: ' + result.replace(/&amp;quot;/g, '\"'));\n        var updatedResult;\n        updatedResult = result.replace(/&amp;quot;/g, '\"');\n        updatedResult = updatedResult.replace(/&amp;amp;/g, '&amp;');\n        return updatedResult;\n    }\n\t\n\t\n})(skuid);</jsitem><jsitem location=\"inline\" name=\"openPayrollAssets\" cachelocation=\"false\" url=\"\">skuid.snippet.registerSnippet('openPayrollAssets', function(objId){\n    console.log('This is clicked from the Link');\ndocument.getElementById('Select-box').click();\n});</jsitem></javascript><css><cssitem location=\"inline\" name=\"QBOTabCSS\" cachelocation=\"false\">\n/*QBO Inforamtion Formatting CSS*/\n.QBOList .nx-basicfieldeditor-section-header {\n    font-size:18px;\n    font-weight: normal;\n    color:#3e3e3e;\n    text-align:left; \n}  \n.QBOList .nx-basicfieldeditor-item-label{\n    font-size:14px;\n    color:#3e3e3e;\n    font-weight: bold;\n}\n.QBOList .nx-fieldtext{\n    font-size:13px;\n}\n/*.QBOList .nx-basicfieldeditor-item{\n   height:30px;\n}\n*/\n\n/* diasbale pointer events on QBO information*/\n.disabled {\n  pointer-events: none; \n}\n\n/* alternate coloring for QBO information*/\n.Alternate{\n    background:#f4f5f8;\n}\n\n/* QBO Subscribe Upgrade Add buttons to show on leftsidde of the page*/\n.QBOLeftButtons .nx-editor-header .nx-header-right{\n    float: left;\n}\n.QBOLeftButtons .nx-editor-header .nx-header-right .nx-pagetitle-action{\n    background-image:linear-gradient(-180deg, #ffffff 0%, #f2f2f2 100%);\n    border:1px solid #dcdcdc;\n    border-radius:2px;\n    width:100px;\n    height:32px;\n    font-size:14px;\n    color:#393a3d;\n    text-align:center;\n}\n\n.changecolor {\n     background-color: #f4f5f8;\n     border: 1px solid !important;\n     border-color: #d4d7dc !important;\n}\n</cssitem><cssitem location=\"inline\" name=\"TableFooterCSS\" cachelocation=\"false\">.showFooter .nx-list-footer {\n    display: block;\n}\n\n/* this is to test */\n\n.showFooter .nx-list-footer-left {\n    float: left;\n}\n.showFooter .nx-list-footer-center {\n    margin-top: 10px !important;\n    float: right;\n}\n.showFooter .nx-list-footer-right {\n    margin-top: 2px;\n    text-align: center !important;\n}\n.showFooter .nx-buttonset .ui-button {\n    border: 1px solid #babec5 !important;\n    padding: 5px 10px 5px 10px !important;\n    border-radius: 0px !important;\n    margin-right: -0.5px !important;\n    margin-left: -0.5px !important;\n    color: #0097E6 !important;\n}\n.showFooter .nx-buttonset .ui-button.nx-button-selected {\n    background-color: #0077C5 !important; \n}\n.showFooter .nx-buttonset .ui-button.nx-button-selected .ui-button-text {\n    color: white !important;\n}\n.showFooter .nx-buttonset .ui-button.ui-button-disabled {\n    color: #BABEC5 !important;\n}\n.showFooter .nx-buttonset .ui-button:hover {\n    background-color: #ECEEF1 !important;\n}\n\n.showFooter .nx-buttonset .first {\n    border-top-left-radius:2px !important;\n    border-bottom-left-radius:2px !important;\n}\n.showFooter .nx-buttonset .last {\n    border-top-right-radius:2px !important;\n    border-bottom-right-radius:2px !important;\n}\n\n.showFooter .nx-list-footer-left select {\n    background-image: url(\"/resource/customIcons/arrows/upDown.png\"), !important;\n    background-repeat: no-repeat;\n    background-position: 90% 50%;\n    /*-webkit-appearance:none;\n    -moz-appearance: none;*/\n    padding: 5px 15px 5px 6px;\n    font-size: 14px;\n    height: 30px;\n    margin-top: 0px;\n    margin-bottom: 20px;\n}</cssitem><cssitem location=\"inline\" name=\"newcss\" cachelocation=\"false\">\n#statusDivisionUniqueID{\n     position: relative;\n     left: -60px !important;\n     top: 6px !important;\n}\n\n\n\n.pointerFingerHover:hover\n{\n    cursor: pointer;\n    cursor: hand;\n}\n\n\n.payrollToolsCSS {\n    color: #0077c5;\n    padding-left: 0px;\n    padding-right: 0px;\n    \n}\n\n.payrollToolsCSS div:nth-child(1)  {\n   padding-top: 8px;\n   padding-left:0px;\n   padding-right:0px;\n   width: 90px;\n}\n\n\n.payrollToolsCSS div:nth-child(2) &gt; select {\n    border: None;\n    margin-top: 4px;\n    width: 21px;\n    color: #0077c5;\n    background-color: Inherit;\n}\n\n.MultiplePicklistField  div:nth-child(2) &gt; select {\n    position: relative;\n    top: -8px;\n}\n\n.StatusPicklistMultiID{\n    position: relative;\n    top: 2px !important;\n}\n\n.fontColorStyle\n{\n    font-size:24px;\n    color : #0077c5;\n}\n\n\n   \n\n    </cssitem></css></resources><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><interactions/></skuidpage>","skuid__Layout2__c":null,"skuid__Layout3__c":null,"skuid__Layout4__c":null,"skuid__Layout5__c":null}]