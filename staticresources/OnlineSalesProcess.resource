[{"attributes":{"type":"skuid__Page__c","url":"/services/data/v36.0/sobjects/skuid__Page__c/a2f19000000GvJMAA0"},"Id":"a2f19000000GvJMAA0","Name":"OnlineSalesProcess","skuid__Type__c":"Desktop","skuid__UniqueId__c":"_OnlineSalesProcess","skuid__Module__c":null,"skuid__Composer_Settings__c":"{\"skuid.model(Catalog)\":{\"region\":\"USA\",\"segment\":null,\"offerType\":\"PAID\",\"offertype\":\"PAID\",\"displayProductName\":\"QuickBooks\",\"product\":null},\"skuid.model(NewModel)\":{\"$Model.CCToken. URL_EndPoint__c\":null},\"skuid.model(SelectedRow)\":{\"region\":\"USA\",\"segment\":\"ANY\",\"offerType\":\"TRIAL\",\"offertype\":\"PAID\",\"displayProductName\":\"Quickbooks\"}}","skuid__MasterPage__c":null,"skuid__MasterPage__r":null,"skuid__IsMaster__c":false,"skuid__Layout__c":"<skuidpage unsavedchangeswarning=\"yes\" personalizationmode=\"server\" showsidebar=\"true\" showheader=\"true\" tabtooverride=\"Order\" theme=\"Intuit\"><models><model id=\"OnlineSales_CountryFilter\" limit=\"20\" query=\"true\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"OnlineSales_CountryFilter__c\" orderby=\"Name DESC\"><fields><field id=\"Name\"/></fields><conditions/><actions/></model><model id=\"OnlineSales_ProductFilter\" limit=\"20\" query=\"true\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"OnlineSales_ProductFilter__c\"><fields><field id=\"Name\"/></fields><conditions/><actions/></model><model id=\"Catalog\" limit=\"20\" query=\"true\" createrowifnonefound=\"false\" processonclient=\"true\" type=\"\" verb=\"GET\" endpoint=\"/services/apexrest/onlinesalesUIcatalogueNew/?region={{region}}&amp;segment={{segment}}&amp;product={{product}}\" labelplural=\"Products\" unloadwarningifunsavedchanges=\"false\" datasource=\"SFDC_REST_Service\"><fields><field id=\"segment\" label=\"Segment\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"TEXT\" accessible=\"true\" filterable=\"true\"/><field id=\"region\" label=\"Region\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"offerType\" label=\"OfferType\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"displayProductName\" label=\"DisplayProductName\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"TEXT\" accessible=\"true\" filterable=\"true\"/><field id=\"bundleListPrice\" label=\"BundleListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" precision=\"4\" scale=\"2\" accessible=\"true\" filterable=\"true\"/><field id=\"bundleDiscountedPrice\" label=\"BundleDiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"productCode\" label=\"ProductCode\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"qboProductPriceBookEntryId\" label=\"QboProductPriceBookEntryId\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountedPrice\" label=\"PayrollDiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"payrollProductPriceBookEntryId\" label=\"PayrollProductPriceBookEntryId\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"discountedPrice\" label=\"DiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"discountDescription\" label=\"DiscountDescription\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"TEXT\" accessible=\"true\" filterable=\"true\"/><field id=\"currencyCode\" label=\"CurrencyCode\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"listCurrencyCode\" label=\"ListCurrencyCode\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"listPrice\" label=\"ListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" precision=\"4\" scale=\"2\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollListPrice\" label=\"PayrollListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"offerType__ui\" displaytype=\"FORMULA\" uionly=\"true\" label=\"Offer Type Converted\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{offerType}} == \"PAID\", \"Buy Now\", \"Trial\")</formula></field><field id=\"trialDuration\" label=\"TrialDuration\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" precision=\"1\" scale=\"0\" accessible=\"true\" filterable=\"true\"/><field id=\"annualListPrice\" label=\"AnnualListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"annualDiscountedPrice\" label=\"AnnualDiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"discountTime__ui\" displaytype=\"FORMULA\" uionly=\"true\" label=\"Discount Time Converted\" readonly=\"true\" returntype=\"TEXT\"><formula>IF((({{discountDuration}} == 365) &amp;&amp; ({{discountUnit}} == \"DAY\")), \"1 year\", \nIF((({{discountDuration}} &gt; 1) &amp;&amp; ({{discountUnit}} == \"MONTH\")), {{discountDuration}} + \" months\", \nIF((({{discountDuration}} == 1) &amp;&amp; ({{discountUnit}} == \"MONTH\")), \"1 month\", \nIF((({{discountDuration}} == 20) &amp;&amp; ({{discountUnit}} == \"YEAR\")), \"lifetime\", null))))</formula></field><field id=\"payrollFee__ui\" displaytype=\"FORMULA\" uionly=\"true\" precision=\"4\" scale=\"2\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{shortPayrollProductName}}==\"Enhanced Payroll\",\"$2.00\",\nIF({{shortPayrollProductName}}==\"Full Service Payroll\", \"$2.00\", null))</formula></field><field id=\"shortPayrollProductName\" label=\"ShortPayrollProductName\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"shortQBOProductName\" label=\"ShortQBOProductName\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"NewToQBOFlag__ui\" displaytype=\"FORMULA\" readonly=\"true\" returntype=\"BOOLEAN\" uionly=\"true\"><formula>IF({{segment}}==\"New to QBO\",true,null)</formula></field><field id=\"currencySymbol__ui\" displaytype=\"FORMULA\" uionly=\"true\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{currencyCode}}==\"GBP\", \"Â£\", \"$\")</formula></field><field id=\"UserCountry__ui\" displaytype=\"FORMULA\" uionly=\"true\" readonly=\"true\" returntype=\"TEXT\"><formula>{{$Model.CountryFromLoggedInUser.data.0.Country}}</formula></field><field id=\"payrollDiscountDescription\" label=\"PayrollDiscountDescription\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountUnit\" label=\"PayrollDiscountUnit\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountType\" label=\"PayrollDiscountType\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountDuration\" label=\"PayrollDiscountDuration\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountAmount\" label=\"PayrollDiscountAmount\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollAnnualDiscountedPrice\" label=\"PayrollAnnualDiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollAnnualListPrice\" label=\"PayrollAnnualListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"offeredPayrollProductId\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" sourcetype=\"param\" sourceparam=\"region\" state=\"filterableoff\" inactive=\"true\" name=\"region\" operator=\"=\" mergefield=\"Country\" novaluebehavior=\"deactivate\" userinfotype=\"userid\" enclosevalueinquotes=\"true\"/><condition type=\"fieldvalue\" value=\"\" sourcetype=\"param\" sourceparam=\"segment\" state=\"filterableoff\" inactive=\"true\" operator=\"=\" enclosevalueinquotes=\"true\" name=\"segment\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" sourcetype=\"param\" sourceparam=\"product\" state=\"filterableoff\" inactive=\"true\" name=\"product\"/></conditions><actions><action><actions><action type=\"emptyModelData\"><models><model>CatalogForDeck</model></models></action><action type=\"custom\" snippet=\"updateDeckModel\"/><action type=\"custom\" snippet=\"highlightRow\"/></actions><events><event>models.loaded</event></events></action></actions></model><model id=\"Lead\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" type=\"\" sobject=\"Lead\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Company\"/><field id=\"Id\"/><field id=\"Address_Line_1__c\"/><field id=\"Address_Line_2__c\"/><field id=\"State__c\"/><field id=\"Status\"/><field id=\"OwnerId\"/><field id=\"Owner.Name\"/><field id=\"Email\"/><field id=\"City__c\"/><field id=\"Country_Address__c\"/><field id=\"Postal_Code__c\"/><field id=\"Name\"/><field id=\"Country__c\"/></fields><conditions><condition type=\"param\" value=\"LeadId\" field=\"Id\" operator=\"=\" enclosevalueinquotes=\"true\" novaluebehavior=\"deactivate\" state=\"\" inactive=\"false\"/></conditions><actions/></model><model id=\"Account\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"Account\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Id\"/><field id=\"Name\"/><field id=\"CAN__c\"/><field id=\"Company_ID__c\"/><field id=\"Country__c\"/><field id=\"Region__c\"/><field id=\"Parent.Id\"/><field id=\"Parent.Name\"/><field id=\"ParentId\"/><field id=\"CurrencyIsoCode\"/><field id=\"NoEmail\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"No Email On Contact\"/></fields><conditions><condition type=\"param\" value=\"AccountId\" field=\"Id\" state=\"filterableoff\" inactive=\"true\" operator=\"=\" enclosevalueinquotes=\"true\" novaluebehavior=\"deactivate\" name=\"AccountIDPageParameter\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Id\" state=\"filterableoff\" inactive=\"true\" name=\"AccountIDCondition\"/></conditions><actions/></model><model id=\"Contact\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" type=\"\" sobject=\"Contact\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"AccountId\"/><field id=\"Account.Name\"/><field id=\"Account_Name__c\"/><field id=\"Id\"/><field id=\"Email\"/><field id=\"Primary__c\"/><field id=\"Name\"/><field id=\"FirstName\"/><field id=\"LastName\"/><field id=\"Phone\"/><field id=\"Contact_Role__c\"/><field id=\"Auth_Id__c\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Id\" state=\"filterableoff\" inactive=\"true\" name=\"ContactIDCondition\" operator=\"=\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Primary__c\" state=\"filterableoff\" inactive=\"true\" name=\"primaryFilter\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Account.Id\" state=\"filterableoff\" inactive=\"true\" name=\"ContactAccountCondition\"/></conditions><actions/></model><model id=\"Oppty\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"Opportunity\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" orderby=\"CreatedDate DESC\"><fields><field id=\"AccountId\"/><field id=\"Account.Name\"/><field id=\"Amount\"/><field id=\"Company_ID__c\"/><field id=\"ContractId\"/><field id=\"Contract.Name\"/><field id=\"Contact__c\"/><field id=\"Contact__r.Name\"/><field id=\"Id\"/><field id=\"StageName\"/><field id=\"Name\"/><field id=\"CloseDate\"/><field id=\"CreatedDate\"/><field id=\"OwnerId\"/><field id=\"Owner.Name\"/><field id=\"CurrencyIsoCode\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Id\" state=\"filterableoff\" inactive=\"true\" name=\"OpptyIDCondition\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Account.Id\" state=\"filterableoff\" inactive=\"true\" name=\"OpptyAccountCondition\"/><condition type=\"multiple\" value=\"\" field=\"StageName\" operator=\"not in\" enclosevalueinquotes=\"true\" state=\"filterableoff\" inactive=\"true\" name=\"OpptyStageCondition\"><values><value>Closed Won</value><value>Closed Lost</value></values></condition><condition type=\"fieldvalue\" value=\"QuickBooks Online (QBO)\" enclosevalueinquotes=\"true\" field=\"Product_Family_of_Interest__c\" state=\"filterableoff\" inactive=\"true\" name=\"OpptyProductCondition\"/></conditions><actions/></model><model id=\"Address\" limit=\"1\" query=\"false\" createrowifnonefound=\"true\" adapter=\"salesforce\" type=\"\" sobject=\"Address__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" orderby=\"CreatedDate DESC\"><fields><field id=\"Name\"/><field id=\"City__c\"/><field id=\"Country__c\"/><field id=\"Postal_Code__c\"/><field id=\"Primary__c\"/><field id=\"State__c\" overridemetadata=\"true\" ogdisplaytype=\"STRING\" displaytype=\"PICKLIST\" defaultValue=\"None Selected\"><picklistentries><entry value=\"CA\" label=\"California\"/></picklistentries></field><field id=\"UpdateAccount\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"Update account w/ this address\" defaultValue=\"true\"/><field id=\"hasError\" uionly=\"true\" displaytype=\"BOOLEAN\" defaultValue=\"false\"/><field id=\"Account__r.Name\"/><field id=\"Id\"/><field id=\"Bill_To_Address__c\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"Account__c\" operator=\"=\" model=\"Account\" enclosevalueinquotes=\"true\" mergefield=\"Id\" novaluebehavior=\"deactivate\" state=\"filterableoff\" inactive=\"true\" name=\"AccountAddress\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Bill_To_Address__c\"/></conditions><actions><action><actions><action type=\"custom\" snippet=\"styleStatePicklist\"/></actions><events><event>row.updated</event></events><fields><field>State__c</field></fields></action></actions></model><model id=\"NewUser\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"User\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"NewOrExisting__ui\" uionly=\"true\" displaytype=\"PICKLIST\" label=\"New or Existing User?\" defaultValue=\"new\"><picklistentries><entry value=\"new\" label=\"Create a New Intuit User Login\"/><entry value=\"existing\" label=\"Use an Existing Intuit User Login\"/></picklistentries></field><field id=\"ConfirmEmail_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Confirm Email Address\"/><field id=\"CurrentUserID_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Current User ID\"/><field id=\"Temp_Pwd\" uionly=\"true\" displaytype=\"TEXT\" label=\"Temporary Password\"/><field id=\"CompanyName_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Company Name\"/><field id=\"UserID_ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"ErrorType__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"Email\"/><field id=\"createCompanyID_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Company ID Received\"/><field id=\"success_ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"Create Comp Call Success?\"/><field id=\"errorMessage_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"createComp Call Error Msg\"/><field id=\"Language_ui\" uionly=\"true\" displaytype=\"PICKLIST\" label=\"Language\" defaultValue=\"en\"><picklistentries><entry value=\"en\" label=\"English\"/><entry value=\"fr\" label=\"French\"/></picklistentries></field></fields><conditions/><actions><action><actions><action type=\"save\"><models><model>NewUser</model></models></action></actions><events><event>row.updated</event></events><fields><field>Temp_Pwd</field></fields></action></actions></model><model id=\"BillingProfile\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" type=\"\" sobject=\"Billing_Profile__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Credit_Card_Type__c\"/><field id=\"Credit_Card_Number__c\"/><field id=\"Credit_Card_Verification_Number__c\"/><field id=\"Name_of_Credit_Card__c\"/><field id=\"Payment_Method__c\" overridemetadata=\"false\" ogdisplaytype=\"PICKLIST\" displaytype=\"PICKLIST\"><picklistentries><entry value=\"DIRECT_DEBIT\" label=\"Debit Card\"/><entry value=\"Credit Card\" label=\"Credit Card\"/></picklistentries></field><field id=\"Bank_Account_Name__c\"/><field id=\"Bank_Account_Number__c\"/><field id=\"Bank_Routing_Number__c\"/><field id=\"CreditCardNumber_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Credit Card Number\"/><field id=\"Expiry_Month__c\" overridemetadata=\"true\" ogdisplaytype=\"PICKLIST\" displaytype=\"PICKLIST\" defaultValue=\"\"><picklistentries><entry value=\"\" label=\"month\"/><entry value=\"01\" label=\"Jan\"/><entry value=\"02\" label=\"Feb\"/><entry value=\"03\" label=\"March\"/><entry value=\"04\" label=\"April\"/><entry value=\"05\" label=\"May\"/><entry value=\"06\" label=\"June\"/><entry value=\"07\" label=\"July\"/><entry value=\"08\" label=\"Aug\"/><entry value=\"09\" label=\"Sep\"/><entry value=\"10\" label=\"Oct\"/><entry value=\"11\" label=\"Nov\"/><entry value=\"12\" label=\"Dec\"/></picklistentries></field><field id=\"Expiry_Year__c\" overridemetadata=\"true\" ogdisplaytype=\"DOUBLE\" displaytype=\"PICKLIST\" precision=\"\" scale=\"\"><picklistentries><entry value=\"2016\" label=\"2016\"/></picklistentries></field><field id=\"ccType__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"Account_ID__c\"/><field id=\"Account_ID__r.Name\"/><field id=\"Id\"/><field id=\"Address_ID__c\"/><field id=\"Address_ID__r.Name\"/><field id=\"CVV_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"CVV UI\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"Account_ID__c\" operator=\"=\" model=\"NewAccount\" enclosevalueinquotes=\"true\" mergefield=\"Id\" novaluebehavior=\"deactivate\" state=\"\" inactive=\"false\"/></conditions><actions><action><actions><action type=\"custom\" snippet=\"styleMonthPicklist\"/></actions><events><event>row.updated</event></events><fields><field>Expiry_Month__c</field></fields></action><action><actions><action type=\"custom\" snippet=\"styleYearPicklist\"><models><model>BillingProfile</model></models></action></actions><events><event>row.updated</event></events><fields><field>Expiry_Year__c</field></fields></action></actions></model><model id=\"CCTokenInfo\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"CreditCard_Tokenization_URL__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Name\"/><field id=\"Id\"/><field id=\"URL__c\"/><field id=\"URL_EndPoint__c\"/><field id=\"URL_Header__c\"/><field id=\"CurrencyIsoCode\"/></fields><conditions/><actions/></model><model id=\"CatalogForDeck\" limit=\"\" query=\"false\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"User\" doclone=\"\" processonclient=\"false\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"segment\" uionly=\"true\" displaytype=\"TEXT\" label=\"Segment\"/><field id=\"offerType\" uionly=\"true\" displaytype=\"TEXT\" label=\"PRODUCT\"/></fields><conditions/><actions/><groupby method=\"simple\"/></model><model id=\"SegmentPicklist\" limit=\"\" query=\"false\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"User\" doclone=\"\" processonclient=\"false\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"segment\" uionly=\"true\" displaytype=\"TEXT\"/></fields><conditions/><actions/><groupby method=\"simple\"/></model><model id=\"SelectedRow\" limit=\"20\" query=\"false\" createrowifnonefound=\"true\" processonclient=\"true\" type=\"\" verb=\"GET\" endpoint=\"/services/apexrest/onlinesalesUIcatalogueNew/?region={{region}}&amp;segment={{segment}}&amp;product={{product}}\" labelplural=\"Products\" unloadwarningifunsavedchanges=\"false\" datasource=\"SFDC_REST_Service\"><fields><field id=\"segment\" label=\"Segment\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"TEXT\" accessible=\"true\" filterable=\"true\"/><field id=\"region\" label=\"Region\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"TEXT\" accessible=\"true\" filterable=\"true\"/><field id=\"offerType\" label=\"OfferType\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"displayProductName\" label=\"DisplayProductName\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"TEXT\" accessible=\"true\" filterable=\"true\"/><field id=\"bundleListPrice\" label=\"BundleListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" precision=\"4\" scale=\"2\" accessible=\"true\" filterable=\"true\"/><field id=\"bundleDiscountedPrice\" label=\"BundleDiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"productCode\" label=\"ProductCode\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"qboProductPriceBookEntryId\" label=\"QboProductPriceBookEntryId\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountedPrice\" label=\"PayrollDiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"payrollProductPriceBookEntryId\" label=\"PayrollProductPriceBookEntryId\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"discountedPrice\" label=\"DiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"discountDescription\" label=\"DiscountDescription\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"currencyCode\" label=\"CurrencyCode\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"listCurrencyCode\" label=\"ListCurrencyCode\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"listPrice\" label=\"ListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" precision=\"4\" scale=\"2\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollListPrice\" label=\"PayrollListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"offerType__ui\" displaytype=\"FORMULA\" uionly=\"true\" label=\"Offer Type Converted\" readonly=\"true\" returntype=\"TEXT\"><formula>IF({{offerType}} == \"PAID\", \"Buy Now\", \"Trial\")</formula></field><field id=\"trialDuration\" label=\"TrialDuration\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" precision=\"1\" scale=\"0\" accessible=\"true\" filterable=\"true\"/><field id=\"wrapperId\" label=\"WrapperId\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"TEXT\" accessible=\"true\" filterable=\"true\"/><field id=\"qboProductPriceBookId\" label=\"QboProductPriceBookId\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"monthlyannual__ui\" displaytype=\"BOOLEAN\" uionly=\"true\" readonly=\"false\" returntype=\"BOOLEAN\" defaultValue=\"false\"/><field id=\"annualDiscountedPrice\" label=\"AnnualDiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"annualListPrice\" label=\"AnnualListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"DOUBLE\" accessible=\"true\" filterable=\"true\" precision=\"4\" scale=\"2\"/><field id=\"shortQBOProductName\" label=\"ShortQBOProductName\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"TEXT\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollAnnualDiscountedPrice\" label=\"PayrollAnnualDiscountedPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollAnnualListPrice\" label=\"PayrollAnnualListPrice\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountAmount\" label=\"PayrollDiscountAmount\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountDescription\" label=\"PayrollDiscountDescription\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountDuration\" label=\"PayrollDiscountDuration\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountType\" label=\"PayrollDiscountType\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"payrollDiscountUnit\" label=\"PayrollDiscountUnit\" ispolymorphic=\"false\" isnamepointing=\"false\" displaytype=\"STRING\" accessible=\"true\" filterable=\"true\"/><field id=\"perEmployeeFee__ui\" displaytype=\"TEXT\" uionly=\"true\" label=\"perEmployeeFee__ui\" defaultvaluetype=\"fieldvalue\"/></fields><conditions/><actions/></model><model id=\"MonthlyAnnualSelection\" limit=\"1\" query=\"true\" createrowifnonefound=\"true\" adapter=\"salesforce\" type=\"\" sobject=\"User\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Id\"/><field id=\"Name\"/></fields><conditions><condition type=\"userinfo\" value=\"\" field=\"Id\" operator=\"=\" userinfotype=\"userid\" state=\"filterableon\" inactive=\"false\" name=\"subFilter\" enclosevalueinquotes=\"true\"/></conditions><actions><action><actions><action type=\"custom\" snippet=\"subscriptionFilter\"/></actions><events><event>models.loaded</event></events></action></actions></model><model id=\"MasterAdmin\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"Contact\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Name\"/><field id=\"Email\"/><field id=\"Id\"/><field id=\"AccountId\"/><field id=\"Account.Name\"/><field id=\"Account.Id\"/></fields><conditions logic=\"(1 OR 2) AND 3\"><condition type=\"fieldvalue\" value=\"MASTER_ADMIN\" enclosevalueinquotes=\"true\" field=\"Contact_Role__c\" state=\"\" inactive=\"false\"/><condition type=\"fieldvalue\" value=\"Master Admin\" enclosevalueinquotes=\"true\" field=\"Contact_Role__c\"/><condition type=\"modelmerge\" value=\"\" field=\"Account.Id\" operator=\"=\" model=\"Account\" enclosevalueinquotes=\"true\" mergefield=\"Id\" novaluebehavior=\"deactivate\"/></conditions><actions/></model><model id=\"UserSelections\" limit=\"1\" query=\"true\" createrowifnonefound=\"true\" type=\"\" sobject=\"User\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Name\"/><field id=\"wizardStep1\" uionly=\"true\" displaytype=\"TEXT\" defaultValue=\"\"/><field id=\"wizardStep2\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"wizardStep3\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"ProductChange__ui\" uionly=\"true\" displaytype=\"BOOLEAN\" defaultValue=\"false\"/><field id=\"dummyFieldForLookup\" uionly=\"true\" displaytype=\"BOOLEAN\" defaultValue=\"true\"/><field id=\"FromLead__ui\" uionly=\"true\" displaytype=\"BOOLEAN\"/><field id=\"AccountName__ui\" uionly=\"true\" displaytype=\"FORMULA\" readonly=\"true\" returntype=\"TEXT\"><formula>{{{$Param.Name}}}</formula></field><field id=\"currentStep\" uionly=\"true\" displaytype=\"TEXT\" defaultValue=\"\"/><field id=\"errorStatus\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"selectedStep\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"MultiCoName__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"AccountID__ui\" uionly=\"true\" displaytype=\"TEXT\" readonly=\"true\" returntype=\"TEXT\"/><field id=\"addressError\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"buttonPressed__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"exitLink__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"orderError__ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"MonthlyChoice\" uionly=\"true\" displaytype=\"BOOLEAN\" defaultValue=\"true\"/><field id=\"MultiCoName_Missing\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"MultiCoName_Missing\"/><field id=\"errorCode__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Error Code\"/><field id=\"errorMessage__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Error Message\" length=\"500\"/><field id=\"CompAddressErrorMsg_ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"CompAddressErrorStatus_ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"Segment_From_Label__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Segment_From_Label__ui\"/><field id=\"SourceCode__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Source Code\"/><field id=\"emailErrorStep2_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"emailErrorStep2\" length=\"500\" defaultvaluetype=\"fieldvalue\"/><field id=\"ClusterId_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"Cluster Id\" defaultvaluetype=\"fieldvalue\"/><field id=\"currentRegion__ui\" uionly=\"true\" displaytype=\"TEXT\"/></fields><conditions><condition type=\"userinfo\" value=\"\" field=\"Id\" operator=\"=\" userinfotype=\"userid\" state=\"filterableon\" inactive=\"false\" name=\"subFilter\" enclosevalueinquotes=\"true\"/></conditions><actions><action><actions><action type=\"custom\" snippet=\"subscriptionFilter\"/></actions><events><event>models.loaded</event></events></action></actions></model><model id=\"NewAccount\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"Account\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Id\"/><field id=\"Name\"/><field id=\"Country__c\"/><field id=\"Region__c\"/><field id=\"Company_ID__c\"/><field id=\"ParentId\"/><field id=\"Parent.Name\"/><field id=\"CurrencyIsoCode\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Id\" state=\"filterableoff\" inactive=\"true\" name=\"AccountIDCondition\"/></conditions><actions/></model><model id=\"NewContact\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" type=\"\" sobject=\"Contact\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"AccountId\"/><field id=\"Account.Name\"/><field id=\"Account_Name__c\"/><field id=\"Id\"/><field id=\"Email\"/><field id=\"Primary__c\"/><field id=\"Name\"/><field id=\"FirstName\"/><field id=\"LastName\"/><field id=\"Phone\"/><field id=\"Contact_Role__c\"/><field id=\"Persona_ID__c\"/><field id=\"Auth_Id__c\"/><field id=\"authID__ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"authID__ui\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Id\" state=\"filterableoff\" inactive=\"true\" name=\"ContactIDCondition\"/></conditions><actions/></model><model id=\"NewOppty\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"Opportunity\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"AccountId\"/><field id=\"Account.Name\"/><field id=\"Amount\"/><field id=\"Company_ID__c\"/><field id=\"ContractId\"/><field id=\"Contract.Name\"/><field id=\"Contact__c\"/><field id=\"Contact__r.Name\"/><field id=\"Id\"/><field id=\"Name\"/><field id=\"StageName\"/><field id=\"CloseDate\"/><field id=\"Desktop_Migrated_Account_Id__c\"/><field id=\"LeadSource\"/><field id=\"Product_Family_of_Interest__c\"/><field id=\"Primary_Contact__c\"/><field id=\"Primary_Contact__r.Name\"/><field id=\"OwnerId\"/><field id=\"Owner.Name\"/><field id=\"CurrencyIsoCode\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Id\" state=\"filterableoff\" inactive=\"true\" name=\"OpptyIDCondition\"/></conditions><actions/></model><model id=\"NewAddress\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" type=\"\" sobject=\"Address__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Name\"/><field id=\"City__c\"/><field id=\"Country__c\"/><field id=\"Postal_Code__c\"/><field id=\"Primary__c\"/><field id=\"State__c\" overridemetadata=\"true\" ogdisplaytype=\"STRING\" displaytype=\"PICKLIST\" defaultValue=\"\"><picklistentries><entry value=\"\" label=\"state\"/></picklistentries></field><field id=\"Account__c\"/><field id=\"Account__r.Name\"/><field id=\"UpdateAccount\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"Update account w/ this address\" defaultValue=\"false\" readonly=\"true\"/><field id=\"hasError\" uionly=\"true\" displaytype=\"BOOLEAN\" defaultValue=\"false\"/><field id=\"Id\"/><field id=\"SameAsCompAddr_ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"Same as company address\"/><field id=\"Country_4CA_ui\" uionly=\"true\" displaytype=\"PICKLIST\" label=\"Country4CA\" defaultValue=\"\" picklistsource=\"manual\" defaultvaluetype=\"fieldvalue\"><picklistentries><entry value=\"Canada\" label=\"Canada\"/><entry value=\"USA\" label=\"United States\"/></picklistentries></field><field id=\"alreadySaved_ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"AlreadySaved\"/><field id=\"Bill_To_Address__c\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"Account__c\" operator=\"=\" model=\"NewAccount\" enclosevalueinquotes=\"true\" mergefield=\"Id\" novaluebehavior=\"noquery\" state=\"\" inactive=\"false\"/><condition type=\"modelmerge\" value=\"\" field=\"Country__c\" operator=\"=\" model=\"SelectedRow\" enclosevalueinquotes=\"true\" mergefield=\"region\" novaluebehavior=\"deactivate\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Bill_To_Address__c\" operator=\"=\" state=\"\"/></conditions><actions><action><actions><action type=\"custom\" snippet=\"styleStatePicklist\"/></actions><events><event>row.updated</event></events><fields><field>State__c</field></fields></action><action><actions><action type=\"custom\" snippet=\"sameAsCompanyAddress\"/></actions><events><event>row.updated</event></events><fields><field>SameAsCompAddr_ui</field></fields></action><action><actions><action type=\"updateRow\" snippet=\"updateStateListWhenCountryChanged\" fieldmodel=\"UserSelections\" affectedrows=\"context\" field=\"currentRegion__ui\" enclosevalueinquotes=\"true\" value=\"{{$Model.NewAddress.data.0.Country_4CA_ui}}\"/><action type=\"custom\" snippet=\"updateStateListWhenCountryChanged\"/></actions><events><event>row.updated</event></events><fields><field>Country_4CA_ui</field></fields></action></actions></model><model id=\"CountryFromLoggedInUser\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" type=\"\" sobject=\"User\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Country\"/><field id=\"Id\"/><field id=\"Name\"/><field id=\"Username\"/><field id=\"Email\"/><field id=\"CurrencyIsoCode\"/><field id=\"DefaultCurrencyIsoCode\"/><field id=\"Profile.Name\"/></fields><conditions><condition type=\"userinfo\" value=\"\" field=\"Id\" operator=\"=\" enclosevalueinquotes=\"true\" userinfotype=\"userid\" state=\"\"/></conditions><actions/></model><model id=\"ErrorDB\" limit=\"1\" query=\"false\" createrowifnonefound=\"true\" adapter=\"salesforce\" type=\"\" sobject=\"Error__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Detail_Message__c\"/><field id=\"Error_Code__c\"/><field id=\"Error_Description__c\"/><field id=\"Id\"/><field id=\"SFDCId__c\"/></fields><conditions/><actions/></model><model id=\"Orgn\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"Organization\"><fields><field id=\"OrganizationType\"/><field id=\"IsSandbox\"/><field id=\"Name\"/><field id=\"Id\"/></fields><conditions/><actions/></model><model id=\"CountryRegionMap\" limit=\"\" query=\"false\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"CountryISOCodes__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Country__c\"/><field id=\"Name\"/><field id=\"Id\"/><field id=\"Region__c\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"Country__c\" operator=\"=\" model=\"SelectedRow\" enclosevalueinquotes=\"true\" mergefield=\"region\" novaluebehavior=\"deactivate\" state=\"filterableoff\" inactive=\"true\" name=\"regionForSelectedOfferCountry\"/></conditions><actions/></model><model id=\"CompanyAddress\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" type=\"\" sobject=\"Address__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Name\"/><field id=\"City__c\"/><field id=\"Postal_Code__c\"/><field id=\"Primary__c\"/><field id=\"State__c\" overridemetadata=\"true\" ogdisplaytype=\"STRING\" displaytype=\"PICKLIST\"><picklistentries><entry value=\"\" label=\"state\"/></picklistentries></field><field id=\"Account__c\"/><field id=\"Account__r.Name\"/><field id=\"Id\"/><field id=\"hasError\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"\"/><field id=\"Country__c\"/><field id=\"AddressLine1_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"street\"/><field id=\"City_ui\" uionly=\"true\" displaytype=\"TEXT\" label=\"City\"/><field id=\"State_ui\" uionly=\"true\" displaytype=\"PICKLIST\" label=\"State\" defaultValue=\"\" readonly=\"false\"><picklistentries><entry value=\"\" label=\"state\"/></picklistentries></field><field id=\"PostalCode_ui\" uionly=\"true\" displaytype=\"TEXT\"/><field id=\"Enter_Credit_Card__ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"Enter Credit Card\" defaultValue=\"false\"/><field id=\"alreadySaved_ui\" uionly=\"true\" displaytype=\"BOOLEAN\" label=\"alreadySaved\"/><field id=\"Bill_To_Address__c\"/></fields><conditions><condition type=\"modelmerge\" value=\"\" field=\"Account__c\" operator=\"=\" model=\"NewAccount\" enclosevalueinquotes=\"true\" mergefield=\"Id\" novaluebehavior=\"noquery\" state=\"filterableon\" inactive=\"false\" name=\"NewAccountIDCondition\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Primary__c\" state=\"filterableon\" operator=\"=\" inactive=\"false\" name=\"PrimaryCondition\"/><condition type=\"modelmerge\" value=\"\" field=\"Country__c\" operator=\"=\" model=\"SelectedRow\" enclosevalueinquotes=\"true\" mergefield=\"region\" novaluebehavior=\"deactivate\" state=\"filterableon\" inactive=\"false\" name=\"CountryCondition\"/></conditions><actions><action><actions><action type=\"custom\" snippet=\"styleStatePicklist\"/></actions><events><event>row.created</event><event>row.updated</event></events><fields><field>State__c</field></fields></action><action><actions><action type=\"custom\" snippet=\"toggleButtonSet\"/></actions><events><event>row.created</event><event>row.updated</event></events><fields><field>Enter_Credit_Card__ui</field></fields></action></actions></model><model id=\"ExtngCompAddress\" limit=\"1\" query=\"false\" createrowifnonefound=\"true\" type=\"\" sobject=\"Address__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" datasource=\"salesforce\"><fields><field id=\"Name\"/><field id=\"City__c\"/><field id=\"Country__c\"/><field id=\"County__c\"/><field id=\"Postal_Code__c\"/><field id=\"Primary__c\"/><field id=\"Id\"/><field id=\"State__c\"/><field id=\"Account__c\"/><field id=\"Account__r.Name\"/><field id=\"Account__r.Id\"/><field id=\"Bill_To_Address__c\"/></fields><conditions><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Primary__c\" state=\"filterableoff\" inactive=\"true\" name=\"extngCompAddressPrimary\"/><condition type=\"modelmerge\" value=\"\" field=\"Account__r.Id\" state=\"filterableoff\" inactive=\"true\" operator=\"=\" model=\"Account\" enclosevalueinquotes=\"true\" mergefield=\"Id\" novaluebehavior=\"deactivate\" name=\"extngCompAddress2AccountID\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Id\" state=\"filterableoff\" inactive=\"true\" name=\"leadAddressIDCondition\"/></conditions><actions/></model><model id=\"SpecialOfferBillingCodes\" limit=\"20\" query=\"false\" createrowifnonefound=\"false\" adapter=\"salesforce\" type=\"\" sobject=\"Special_Partner_Billing_Code__c\"><fields><field id=\"Id\"/><field id=\"Offer_Segment__c\"/><field id=\"Offer_Segment__r.Name\"/><field id=\"User__c\"/><field id=\"User__r.Name\"/><field id=\"User__r.Id\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Offer_Segment__r.Name\" state=\"filterableoff\" inactive=\"true\" name=\"segmentCondition\"/></conditions><actions/></model><model id=\"AddressDBMatch\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" type=\"\" sobject=\"Address__c\" orderby=\"CreatedDate DESC\" datasource=\"salesforce\"><fields><field id=\"Name\"/><field id=\"Postal_Code__c\"/><field id=\"City__c\"/><field id=\"State__c\"/><field id=\"Account__c\"/><field id=\"Account__r.Name\"/><field id=\"Id\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Name\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchName\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Postal_Code__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchZIP\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"City__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchCity\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"State__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchState\"/><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Account__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchAccID\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Bill_To_Address__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchBillTOAddress\"/><condition type=\"fieldvalue\" value=\"true\" enclosevalueinquotes=\"false\" field=\"Primary__c\" state=\"filterableoff\" inactive=\"true\" name=\"AddressDBMatchPrimary\"/></conditions><actions/></model><model id=\"OnlineSales_CareProfiles\" limit=\"20\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" doclone=\"\" unloadwarningifunsavedchanges=\"false\" sobject=\"OnlineSales_CareProfiles__c\"><fields><field id=\"Name\"/><field id=\"Id\"/></fields><conditions/><actions/></model><model id=\"OfferedPayrollProduct\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Offered_Product__c\"><fields><field id=\"Per_Employee_Price__c\"/><field id=\"Id\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Id\" state=\"filterableoff\" inactive=\"true\" name=\"PayrollProductID\"/></conditions><actions/></model><model id=\"OnlineSales_ProductionKey\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Online_Sales_Key__c\" doclone=\"\"><fields><field id=\"Name\"/><field id=\"Value__c\"/><field id=\"Id\"/></fields><conditions><condition type=\"fieldvalue\" value=\"OnlineSales_ProductionOrg\" enclosevalueinquotes=\"true\" field=\"Name\"/></conditions><actions/></model><model id=\"BulkSegments\" limit=\"1\" query=\"false\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"OnlineSales_BulkSegment__c\"><fields><field id=\"Name\"/><field id=\"Id\"/><field id=\"Segment__c\"/></fields><conditions><condition type=\"fieldvalue\" value=\"\" enclosevalueinquotes=\"true\" field=\"Segment__c\" state=\"filterableoff\" inactive=\"true\" name=\"BulkSegmentCondition\"/></conditions><actions/></model><model id=\"OnlineSales_defSourceCode\" limit=\"1\" query=\"true\" createrowifnonefound=\"false\" datasource=\"salesforce\" type=\"\" sobject=\"Online_Sales_Key__c\" doclone=\"\" unloadwarningifunsavedchanges=\"false\"><fields><field id=\"Name\"/><field id=\"Value__c\"/><field id=\"Id\"/></fields><conditions logic=\"1\"><condition type=\"fieldvalue\" value=\"OnlineSales_defSourceCode\" enclosevalueinquotes=\"true\" field=\"Name\" operator=\"=\" state=\"\"/></conditions><actions/></model></models><components><grid uniqueid=\"mainGrid\"><divisions><division behavior=\"flex\" minwidth=\"100px\" ratio=\"1\" verticalalign=\"top\"><components><wrapper uniqueid=\"sk-3F01YY-2582\"><components><template multiple=\"false\" uniqueid=\"LeadBreadcrumb\" model=\"Lead\" allowhtml=\"true\"><contents>&lt;span style=\"font-style: bold; font-size: 14px; color: #0077c5\"&gt;&lt;a href=\"javascript:skuid.events.publish('exitPopup', ['LeadList']);\"&gt;Leads&lt;/a&gt; &gt; \n&lt;a href=\"javascript:skuid.events.publish('exitPopup', ['LeadListOpen']);\"&gt;My Open Leads&lt;/a&gt; &gt; \n&lt;a href=\"javascript:skuid.events.publish('exitPopup', ['LeadID']);\"&gt;{{{Company}}}&lt;/a&gt; &gt;&lt;/span&gt;\n&lt;span style=\"font-size: 14px; font-style: AvenirNextLTPro-Demi; color: #8d9096\"&gt; New Online Order&lt;span&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"false\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"FromLead__ui\" value=\"true\"/><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step4\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"OnlineSales_CountryFilter\" sourcetype=\"snippet\" nosourcerowbehavior=\"deactivate\" sourcesnippet=\"displayBreadcrumbs\"/></renderconditions></template><template multiple=\"false\" uniqueid=\"AccountBreadcrumb\" allowhtml=\"true\" model=\"Account\"><contents>&lt;span style=\"font-style: bold; font-size: 14px; color: #0077c5\"&gt;&lt;a href=\"javascript:skuid.events.publish('exitPopup', ['AccountList']);\"&gt;Accounts&lt;/a&gt; &gt; \n&lt;a href=\"javascript:skuid.events.publish('exitPopup', ['AccountID']);\"&gt;{{{Name}}}&lt;/a&gt; &gt;&lt;span&gt;\n&lt;span style=\"font-size: 14px; font-style: AvenirNextLTPro-Demi; color: #8d9096\"&gt; New Online Order&lt;span&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"false\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"FromLead__ui\" value=\"false\"/><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step4\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"OnlineSales_CountryFilter\" sourcetype=\"snippet\" nosourcerowbehavior=\"deactivate\" sourcesnippet=\"displayBreadcrumbs\"/></renderconditions></template><wrapper uniqueid=\"pageTitleWrapper\"><components><pagetitle model=\"Catalog\" uniqueid=\"sk-1I_7Es-134\"><maintitle>&lt;div style=\"font-size:30px; font-weight:bold\"&gt;\nNew Online Order\n&lt;/div&gt;</maintitle><actions/></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" margin=\"bottom,\"><styles><styleitem property=\"margin-bottom\" value=\"14px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step4\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-3FoL6e-466\"><components><grid uniqueid=\"sk-3FoKE6-461\"><divisions><division behavior=\"fit\" verticalalign=\"top\"><components><wrapper uniqueid=\"sk-Kka4O-815\"><components><template multiple=\"false\" uniqueid=\"sk-3FofBp-508\" allowhtml=\"true\" cssclass=\"pgi-prevstep\"><contents>&lt;a class=\"pgi\" href=\"javascript:skuid.events.publish('pgi-step1');\"&gt;\n&lt;div class=\"pgi-outercircle\"&gt;\n  &lt;div class=\"pgi-innercircle\"&gt;\n      &lt;div class=\"pgi-number\"&gt;1&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=\"pgi-text\"&gt;\n  Product Catalog\n&lt;/div&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"70px\"/><styleitem property=\"max-width\" value=\"70px\"/></styles></styleitem></styles><renderconditions logictype=\"and\" logic=\"2 AND 1\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"selectedStep\" value=\"step1\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-3FoYOu-497\" cssclass=\"\"><components><template multiple=\"false\" uniqueid=\"sk-3FofBp-508\" allowhtml=\"true\" cssclass=\"pgi-currentstep\"><contents>&lt;a class=\"pgi\" href=\"javascript:skuid.events.publish('pgi-step1');\"&gt;\n&lt;div class=\"pgi-outercircle\"&gt;\n  &lt;div class=\"pgi-innercircle\"&gt;\n      &lt;div class=\"pgi-number\"&gt;1&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=\"pgi-text\"&gt;\n  Product Catalog\n&lt;/div&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"70px\"/><styleitem property=\"max-width\" value=\"70px\"/></styles></styleitem></styles><renderconditions logictype=\"and\" logic=\"3\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"selectedStep\" value=\"step1\"/></renderconditions></wrapper></components></division><division behavior=\"fit\" verticalalign=\"top\"><components><wrapper uniqueid=\"sk-3FwEAu-511\"><components><template multiple=\"false\" uniqueid=\"sk-3G3-nw-1114\" allowhtml=\"true\"><contents>&lt;div class=\"pgi-line\"&gt;&lt;/div&gt;</contents></template></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"60px\"/><styleitem property=\"max-width\" value=\"60px\"/></styles></styleitem></styles></wrapper></components></division><division behavior=\"fit\" verticalalign=\"top\"><components><wrapper uniqueid=\"sk-3FwFpU-518\"><components><template multiple=\"false\" uniqueid=\"sk-3FwILj-541\" allowhtml=\"true\" cssclass=\"pgi-prevstep\"><contents>&lt;a class=\"pgi\"  href=\"javascript:skuid.events.publish('pgi-step2');\"&gt;\n&lt;div class=\"pgi-outercircle\"&gt;\n  &lt;div class=\"pgi-innercircle\"&gt;\n      &lt;div class=\"pgi-number\"&gt;2&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=\"pgi-text\"&gt;\n  Order Details\n&lt;/div&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"70px\"/><styleitem property=\"max-width\" value=\"70px\"/></styles></styleitem></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"selectedStep\" value=\"step3\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-3FwFpU-519\"><components><template multiple=\"false\" uniqueid=\"sk-3FwILj-541\" allowhtml=\"true\" cssclass=\"pgi-currentstep\"><contents>&lt;a class=\"pgi\" href=\"javascript:skuid.events.publish('pgi-step2');\"&gt;\n&lt;div class=\"pgi-outercircle\"&gt;\n  &lt;div class=\"pgi-innercircle\"&gt;\n      &lt;div class=\"pgi-number\"&gt;2&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=\"pgi-text\"&gt;\n  Order Details\n&lt;/div&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"70px\"/><styleitem property=\"max-width\" value=\"70px\"/></styles></styleitem></styles><renderconditions logictype=\"and\" logic=\"1 OR 2\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"skipandnorender\" field=\"selectedStep\" value=\"step2\" enclosevalueinquotes=\"true\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-3FwFpU-520\"><components><template multiple=\"false\" uniqueid=\"sk-3FwILj-541\" allowhtml=\"true\" cssclass=\"pgi-step\"><contents>&lt;span title=\"Select a product, then click to proceed\"&gt;\n&lt;a class=\"pgi\" href=\"javascript: skuid.events.publish('pgi-step2');\"&gt;\n&lt;div class=\"pgi-outercircle\"&gt;\n  &lt;div class=\"pgi-innercircle\"&gt;\n      &lt;div class=\"pgi-number\"&gt;2&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=\"pgi-text\"&gt;\n  Order Details\n&lt;/div&gt;\n&lt;/span&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"70px\"/><styleitem property=\"max-width\" value=\"70px\"/></styles></styleitem></styles><renderconditions logictype=\"and\" logic=\"1 OR 2\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"selectedStep\" value=\"step1\"/></renderconditions></wrapper></components></division><division behavior=\"fit\" verticalalign=\"top\"><components><wrapper uniqueid=\"sk-3FwbYi-593\"><components><template multiple=\"false\" uniqueid=\"sk-3G8D6_-1313\" allowhtml=\"true\"><contents>&lt;div class=\"pgi-line\"&gt;&lt;/div&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\" height=\"collapse\"><styles><styleitem property=\"min-width\" value=\"60px\"/><styleitem property=\"max-width\" value=\"60px\"/></styles></styleitem></styles></wrapper></components></division><division behavior=\"fit\" verticalalign=\"top\"><components><wrapper uniqueid=\"sk-3FwGGo-525\"><components><template multiple=\"false\" uniqueid=\"sk-3FwImz-545\" allowhtml=\"true\" cssclass=\"pgi-prevstep\"><contents>&lt;a class=\"pgi\"  href=\"javascript:skuid.events.publish('pgi-step3');\"&gt;\n&lt;div class=\"pgi-outercircle\"&gt;\n  &lt;div class=\"pgi-innercircle\"&gt;\n      &lt;div class=\"pgi-number\"&gt;3&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=\"pgi-text\"&gt;\n  Payment Information\n&lt;/div&gt;\n</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"wizardStep3\" value=\"true\"/></renderconditions></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"70px\"/><styleitem property=\"max-width\" value=\"70px\"/></styles></styleitem></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step3\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"wizardStep3\" value=\"true\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-3FwGGo-526\"><components><template multiple=\"false\" uniqueid=\"sk-3FwImz-545\" allowhtml=\"true\" cssclass=\"pgi-currentstep\"><contents>&lt;a class=\"pgi\" href=\"javascript:skuid.events.publish('pgi-step3');\"&gt;\n&lt;div class=\"pgi-outercircle\"&gt;\n  &lt;div class=\"pgi-innercircle\"&gt;\n      &lt;div class=\"pgi-number\"&gt;3&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=\"pgi-text\"&gt;\n  Payment Information\n&lt;/div&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"70px\"/><styleitem property=\"max-width\" value=\"70px\"/></styles></styleitem></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step3\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-3FwGGo-527\"><components><template multiple=\"false\" uniqueid=\"sk-3FwImz-545\" allowhtml=\"true\" cssclass=\"pgi-step\"><contents>&lt;a class=\"pgi\"  href=\"javascript:skuid.events.publish('pgi-step3');\"&gt;\n&lt;div class=\"pgi-outercircle\"&gt;\n  &lt;div class=\"pgi-innercircle\"&gt;\n      &lt;div class=\"pgi-number\"&gt;3&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=\"pgi-text\"&gt;\n  Payment Information\n&lt;/div&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"70px\"/><styleitem property=\"max-width\" value=\"70px\"/></styles></styleitem></styles><renderconditions logictype=\"and\" logic=\"((1 AND 2) OR (1 AND 3))\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step2\"/><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-KgcP_-3762\"><components><template multiple=\"false\" uniqueid=\"sk-Kgf83-3770\" allowhtml=\"true\" cssclass=\"pgi-nostep\"><renderconditions logictype=\"and\"/><contents>&lt;div class=\"pgi-outercircle\"&gt;\n  &lt;div class=\"pgi-innercircle\"&gt;\n      &lt;div class=\"pgi-number\"&gt;3&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=\"pgi-text\"&gt;\n  Payment Information\n&lt;/div&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\" width=\"custom\"><styles><styleitem property=\"min-width\" value=\"70px\"/><styleitem property=\"max-width\" value=\"70px\"/></styles></styleitem></styles><renderconditions logictype=\"custom\" logic=\"1 OR (2 AND 3)\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step1\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step2\"/></renderconditions></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"justify-content\" value=\"center\"/></styles><renderconditions logictype=\"and\"/></grid><grid uniqueid=\"sk-1UA7MW-863\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"30px\"><components><image source=\"staticresource\" uniqueid=\"sk-1UAEa7-881\" resource=\"Error_Icon\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"fit\" verticalalign=\"top\"><components><template multiple=\"false\" uniqueid=\"sk-1UALhn-905\" allowhtml=\"true\" model=\"SelectedRow\"><contents>&lt;span style=\"color:red; text-align:center\"&gt;Please select a product&lt;/span&gt;</contents><renderconditions logictype=\"and\"/></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"margin-top\" value=\"10px\"/><styleitem property=\"justify-content\" value=\"center\"/></styles><renderconditions logictype=\"and\"><rendercondition fieldmodel=\"SelectedRow\" sourcetype=\"modelproperty\" nosourcerowbehavior=\"deactivate\" sourceproperty=\"hasNoRows\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"buttonPressed__ui\" value=\"ProgressBar\"/><rendercondition type=\"fieldvalue\" enclosevalueinquotes=\"true\" fieldmodel=\"Catalog\" sourcetype=\"modelproperty\" nosourcerowbehavior=\"deactivate\" sourceproperty=\"hasRows\"/></renderconditions></grid><grid uniqueid=\"sk-3W6s6F-1872\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"30px\"><components><image source=\"staticresource\" uniqueid=\"sk-3W6zXR-1891\" resource=\"Error_Icon\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"fit\" verticalalign=\"top\"><components><template multiple=\"false\" uniqueid=\"sk-3W6VHO-1820\" allowhtml=\"true\" model=\"UserSelections\"><contents>&lt;div class = \"wordwraps\" style=\"color:red; text-align:left\"&gt;{{{orderError__ui}}}&lt;/div&gt;</contents><renderconditions logictype=\"and\"/></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"justify-content\" value=\"center\"/><styleitem property=\"margin-top\" value=\"10px\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"blank\" operator=\"!=\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"orderError__ui\" value=\"null\" enclosevalueinquotes=\"false\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"buttonPressed__ui\" value=\"ProgressBar\"/></renderconditions></grid></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"30px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step4\"/></renderconditions></wrapper><wizard deferstepcontentsrendering=\"true\" uniqueid=\"mywizard\" buttonslocation=\"top\"><steps><step stepid=\"step1\" steplabel=\"\"><components><grid uniqueid=\"sk-3Jwz8R-411\"><divisions><division behavior=\"fit\" verticalalign=\"top\"><components><skootable showconditions=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" searchmethod=\"client\" searchbox=\"false\" showexportbuttons=\"false\" pagesize=\"10\" createrecords=\"false\" model=\"Catalog\" buttonposition=\"left\" mode=\"readonly\" uniqueid=\"CatalogFilterTable\" emptysearchbehavior=\"query\" searchplaceholdertext=\"find an offer\" cssclass=\"filterTable filterIcon\"><fields/><rowactions/><massactions usefirstitemasdefault=\"true\"/><views><view type=\"standard\"/></views><filters><filter type=\"select\" filteroffoptionlabel=\"New Filter\" createfilteroffoption=\"false\" affectcookies=\"false\" autocompthreshold=\"25\" conditionsource=\"manual\" labelmode=\"manual\" condition=\"region\" label=\"Country\"><sources><source type=\"model\" effectsbehavior=\"justdefault\" model=\"OnlineSales_CountryFilter\"><labeltemplate>{{{Name}}}</labeltemplate><valuetemplate>{{{Name}}}</valuetemplate></source></sources></filter><filter type=\"select\" filteroffoptionlabel=\"All QBO Products\" createfilteroffoption=\"true\" affectcookies=\"false\" autocompthreshold=\"25\" conditionsource=\"manual\" labelmode=\"manual\" condition=\"product\" label=\"Products\"><sources><source type=\"model\" effectsbehavior=\"defaultandothers\" model=\"OnlineSales_ProductFilter\"><labeltemplate>{{{Name}}}</labeltemplate><valuetemplate>{{{Name}}}</valuetemplate></source></sources></filter><filter type=\"select\" filteroffoptionlabel=\"All Customer Types\" createfilteroffoption=\"true\" affectcookies=\"false\" autocompthreshold=\"25\" conditionsource=\"manual\" labelmode=\"manual\" condition=\"segment\" label=\"Customer Type\"><sources><source type=\"model\" effectsbehavior=\"justdefault\" model=\"SegmentPicklist\"><labeltemplate>{{{segment}}}</labeltemplate><valuetemplate>{{{segment}}}</valuetemplate></source></sources></filter></filters><renderconditions logictype=\"and\"/><searchfields/></skootable></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><skootable showconditions=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" searchmethod=\"server\" searchbox=\"false\" showexportbuttons=\"false\" pagesize=\"10\" createrecords=\"false\" model=\"MonthlyAnnualSelection\" buttonposition=\"left\" mode=\"readonly\" uniqueid=\"subTable\" emptysearchbehavior=\"query\" cssclass=\"filterTable\"><fields/><rowactions/><massactions usefirstitemasdefault=\"true\"/><views><view type=\"standard\"/></views><filters><filter type=\"select\" filteroffoptionlabel=\"Monthly\" createfilteroffoption=\"true\" affectcookies=\"false\" autocompthreshold=\"25\" conditionsource=\"manual\" labelmode=\"manual\" label=\"Subscription\" condition=\"subFilter\"><sources><source type=\"manual\" effectsbehavior=\"justdefault\"><options><option label=\"Annual\" type=\"complex\" value=\"Annual\"><effects><effect action=\"deactivate\" value=\"\" condition=\"subFilter\"/></effects></option></options></source></sources></filter></filters><searchfields/></skootable></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"margin-bottom\" value=\"-7px\"/></styles></grid><pagetitle uniqueid=\"sk-dev5l-715\" model=\"Catalog\"><actions/><maintitle>&lt;div style=\"font-size:18px; font-family:Salesforce Sans; font-weight:normal; color:#393a3d\"&gt;\n&lt;br/&gt;\nNo offers meet this filter criteria. Please adjust and try again.\n&lt;/div&gt;</maintitle><renderconditions logictype=\"and\"><rendercondition fieldmodel=\"Catalog\" sourcetype=\"modelproperty\" nosourcerowbehavior=\"deactivate\" sourceproperty=\"hasNoRows\"/></renderconditions></pagetitle><skuidplus__deck searchmethod=\"client\" searchbox=\"false\" model=\"CatalogForDeck\" uniqueid=\"SkuidDeckMonthly\"><components><wrapper uniqueid=\"sk-350XTE-625\"><components><pagetitle model=\"Catalog\" uniqueid=\"sk-307Rgr-2048\" cssclass=\"pageTitleCatalog\"><actions/><conditions><condition type=\"contextrow\" field=\"segment\" mergefield=\"segment\" operator=\"=\"/><condition type=\"contextrow\" field=\"offerType\" mergefield=\"offerType\" operator=\"=\"/></conditions><renderconditions logictype=\"and\"/><maintitle>&lt;div style=\"font-size=24pt; font-weight:bold\"&gt;{{segment}} - {{offerType__ui}}&lt;/div&gt;</maintitle></pagetitle><skootable showconditions=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" searchmethod=\"client\" searchbox=\"false\" showexportbuttons=\"false\" pagesize=\"all\" createrecords=\"false\" model=\"Catalog\" buttonposition=\"left\" mode=\"readonly\" uniqueid=\"CatalogTable1\" emptysearchbehavior=\"query\" searchplaceholdertext=\"Find an Offer\"><fields><field id=\"displayProductName\" valuehalign=\"\" type=\"\" columnwidth=\"\"><label>PRODUCT</label></field><field id=\"payrollDiscountDescription\" valuehalign=\"\" type=\"\"><label>PAYROLL DISCOUNT</label></field><field id=\"discountDescription\" valuehalign=\"\" type=\"\" columnwidth=\"25%\"><label>QBO DISCOUNT</label></field><field type=\"COMBO\" valuehalign=\"right\" allowhtml=\"true\" columnwidth=\"120px\"><label>PAYROLL MONTHLY CHARGE</label><template>{{#payrollDiscountAmount}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{payrollDiscountedPrice}} &lt;br/&gt;&lt;/div&gt;\n&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{payrollListPrice}}&lt;/div&gt;\n{{/payrollDiscountAmount}}\n\n{{^payrollDiscountAmount}}\n{{#payrollListPrice}} &lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{payrollListPrice}} &lt;br/&gt;&lt;/div&gt; {{/payrollListPrice}}\n{{#payrollDiscountedPrice}}&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{payrollDiscountedPrice}}&lt;/div&gt; {{/payrollDiscountedPrice}}\n{{/payrollDiscountAmount}}</template></field><field type=\"COMBO\" valuehalign=\"right\" allowhtml=\"true\" columnwidth=\"120px\"><label>QBO MONTHLY CHARGE</label><template>{{#discountAmount}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{discountedPrice}} &lt;br/&gt;&lt;/div&gt;\n&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{listPrice}}&lt;/div&gt;\n{{/discountAmount}}\n\n{{^discountAmount}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{listPrice}} &lt;br/&gt;&lt;/div&gt;\n{{#discountedPrice}}&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{discountedPrice}}&lt;/div&gt; {{/discountedPrice}}\n{{/discountAmount}}</template></field></fields><rowactions><action type=\"multi\" label=\"Select Offer\" icon=\"fa-circle-o\" openicon=\"fa-dot-circle-o\"><popup width=\"80%\" title=\"Viewing {{Model.label}}: {{Name}}\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"true\" mode=\"edit\" model=\"Catalog\"><conditions><condition type=\"contextrow\" field=\"Id\" mergefield=\"Id\" autocreated=\"true\"/></conditions><columns><column width=\"50%\"><sections><section title=\"Section A\"><fields><field id=\"segment\"/><field id=\"region\"/><field id=\"offerType\"/></fields></section></sections></column><column width=\"50%\"><sections><section title=\"Section B\"><fields><field id=\"displayProductName\"/><field id=\"bundleListPrice\"/><field id=\"bundleDiscountedPrice\"/><field id=\"productCode\"/><field id=\"qboProductPriceBookEntryId\"/><field id=\"payrollDiscountedPrice\"/><field id=\"payrollProductPriceBookEntryId\"/><field id=\"discountedPrice\"/><field id=\"discountDescription\"/><field id=\"currencyCode\"/><field id=\"listCurrencyCode\"/><field id=\"listPrice\"/><field id=\"payrollListPrice\"/><field id=\"offerType__ui\"/><field id=\"trialDuration\"/></fields></section></sections></column></columns></basicfieldeditor></components></popup><actions/></action></rowactions><massactions usefirstitemasdefault=\"true\"/><views/><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"!=\" fieldmodel=\"CatalogForDeck\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\" enclosevalueinquotes=\"true\"/></renderconditions><filters/><searchfields/><conditions><condition type=\"contextrow\" field=\"segment\" mergefield=\"segment\" operator=\"=\"/><condition type=\"contextrow\" field=\"offerType\" mergefield=\"offerType\" operator=\"=\"/></conditions></skootable><skootable showconditions=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" searchmethod=\"client\" searchbox=\"false\" showexportbuttons=\"false\" pagesize=\"all\" createrecords=\"false\" model=\"Catalog\" buttonposition=\"left\" mode=\"readonly\" uniqueid=\"CatalogTableTrial1\" emptysearchbehavior=\"query\" searchplaceholdertext=\"Find an Offer\"><fields><field id=\"displayProductName\" valuehalign=\"\" type=\"\" columnwidth=\"\"><label>PRODUCT</label></field><field type=\"COMBO\" valuehalign=\"\" columnwidth=\"15%\"><label>TRIAL</label><template>{{trialDuration}}  {{trialUnit}}</template></field><field id=\"payrollDiscountDescription\" valuehalign=\"\" type=\"\"><label>PAYROLL DISCOUNT</label></field><field id=\"discountDescription\" valuehalign=\"\" type=\"\" columnwidth=\"25%\"><label>QBO DISCOUNT</label></field><field type=\"COMBO\" valuehalign=\"right\" allowhtml=\"true\" columnwidth=\"120px\"><label>PAYROLL MONTHLY CHARGE</label><template>{{#payrollDiscountAmount}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{payrollDiscountedPrice}} &lt;br/&gt;&lt;/div&gt;\n&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{payrollListPrice}}&lt;/div&gt;\n{{/payrollDiscountAmount}}\n\n{{^payrollDiscountAmount}}\n{{#payrollListPrice}} &lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{payrollListPrice}} &lt;br/&gt;&lt;/div&gt; {{/payrollListPrice}}\n{{#payrollDiscountedPrice}}&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{payrollDiscountedPrice}}&lt;/div&gt; {{/payrollDiscountedPrice}}\n{{/payrollDiscountAmount}}</template></field><field type=\"COMBO\" valuehalign=\"right\" columnwidth=\"120px\" allowhtml=\"true\"><label>QBO MONTHLY CHARGE</label><template>{{#discountAmount}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{discountedPrice}} &lt;br/&gt;&lt;/div&gt;\n&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{listPrice}}&lt;/div&gt;\n{{/discountAmount}}\n\n{{^discountAmount}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{listPrice}} &lt;br/&gt;&lt;/div&gt;\n{{#discountedPrice}}&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{discountedPrice}}&lt;/div&gt; {{/discountedPrice}}\n{{/discountAmount}}</template></field></fields><rowactions><action type=\"multi\" label=\"Select Offer\" icon=\"fa-circle-o\"><actions/></action></rowactions><massactions usefirstitemasdefault=\"true\"/><views/><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"CatalogForDeck\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\" enclosevalueinquotes=\"true\"/></renderconditions><filters/><searchfields/><conditions><condition type=\"contextrow\" field=\"segment\" mergefield=\"segment\" operator=\"=\"/><condition type=\"contextrow\" field=\"offerType\" mergefield=\"offerType\" operator=\"=\"/></conditions></skootable></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"25px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper></components><renderconditions logictype=\"and\"/></skuidplus__deck><skuidplus__deck searchmethod=\"client\" searchbox=\"false\" model=\"CatalogForDeck\" uniqueid=\"SkuidDeckAnnual\"><components><wrapper uniqueid=\"sk-350XTE-625\"><components><pagetitle model=\"Catalog\" uniqueid=\"sk-307Rgr-2048\" cssclass=\"pageTitleCatalog\"><actions/><conditions><condition type=\"contextrow\" field=\"segment\" mergefield=\"segment\" operator=\"=\"/><condition type=\"contextrow\" field=\"offerType\" mergefield=\"offerType\" operator=\"=\"/></conditions><maintitle>&lt;div style=\"font-size=24pt; font-weight:bold\"&gt;{{segment}} - {{offerType__ui}}&lt;/div&gt;</maintitle></pagetitle><skootable showconditions=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" searchmethod=\"client\" searchbox=\"false\" showexportbuttons=\"false\" pagesize=\"all\" createrecords=\"false\" model=\"Catalog\" buttonposition=\"left\" mode=\"readonly\" uniqueid=\"CatalogTable2\" emptysearchbehavior=\"query\" searchplaceholdertext=\"Find an Offer\"><fields><field id=\"displayProductName\" valuehalign=\"\" type=\"\" columnwidth=\"\"><label>PRODUCT</label></field><field id=\"payrollDiscountDescription\" valuehalign=\"\" type=\"\"><label>PAYROLL DISCOUNT</label></field><field id=\"discountDescription\" valuehalign=\"\" type=\"\" columnwidth=\"25%\"><label>QBO DISCOUNT</label></field><field type=\"COMBO\" valuehalign=\"right\" allowhtml=\"true\" columnwidth=\"120px\"><label>PAYROLL MONTHLY CHARGE</label><template>{{#payrollDiscountAmount}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{payrollDiscountedPrice}} &lt;br/&gt;&lt;/div&gt;\n&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{payrollListPrice}}&lt;/div&gt;\n{{/payrollDiscountAmount}}\n\n{{^payrollDiscountAmount}}\n{{#payrollListPrice}} &lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{payrollListPrice}} &lt;br/&gt;&lt;/div&gt; {{/payrollListPrice}}\n{{#payrollDiscountedPrice}}&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{payrollDiscountedPrice}}&lt;/div&gt; {{/payrollDiscountedPrice}}\n{{/payrollDiscountAmount}}</template></field><field type=\"COMBO\" valuehalign=\"right\" allowhtml=\"true\" columnwidth=\"120px\"><label>QBO ANNUAL CHARGE</label><template>{{#annualDiscountedPrice}}&lt;div style=\"font-weight: bold\"&gt;{{currencyCode}} {{annualDiscountedPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}\n{{#annualDiscountedPrice}}&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{annualListPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}\n{{^annualDiscountedPrice}}{{#annualListPrice}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{annualListPrice}}&lt;/div&gt;{{/annualListPrice}}{{/annualDiscountedPrice}}</template></field></fields><rowactions><action type=\"multi\" label=\"Select Offer\" icon=\"fa-circle-o\" openicon=\"fa-dot-circle-o\"><popup width=\"80%\" title=\"Viewing {{Model.label}}: {{Name}}\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"true\" mode=\"edit\" model=\"Catalog\"><conditions><condition type=\"contextrow\" field=\"Id\" mergefield=\"Id\" autocreated=\"true\"/></conditions><columns><column width=\"50%\"><sections><section title=\"Section A\"><fields><field id=\"segment\"/><field id=\"region\"/><field id=\"offerType\"/></fields></section></sections></column><column width=\"50%\"><sections><section title=\"Section B\"><fields><field id=\"displayProductName\"/><field id=\"bundleListPrice\"/><field id=\"bundleDiscountedPrice\"/><field id=\"productCode\"/><field id=\"qboProductPriceBookEntryId\"/><field id=\"payrollDiscountedPrice\"/><field id=\"payrollProductPriceBookEntryId\"/><field id=\"discountedPrice\"/><field id=\"discountDescription\"/><field id=\"currencyCode\"/><field id=\"listCurrencyCode\"/><field id=\"listPrice\"/><field id=\"payrollListPrice\"/><field id=\"offerType__ui\"/><field id=\"trialDuration\"/></fields></section></sections></column></columns></basicfieldeditor></components></popup><actions/></action></rowactions><massactions usefirstitemasdefault=\"true\"/><views/><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"!=\" fieldmodel=\"CatalogForDeck\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\" enclosevalueinquotes=\"true\"/></renderconditions><filters/><searchfields/><conditions><condition type=\"contextrow\" field=\"segment\" mergefield=\"segment\" operator=\"=\"/><condition type=\"contextrow\" field=\"offerType\" mergefield=\"offerType\" operator=\"=\"/></conditions></skootable><skootable showconditions=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" searchmethod=\"client\" searchbox=\"false\" showexportbuttons=\"false\" pagesize=\"all\" createrecords=\"false\" model=\"Catalog\" buttonposition=\"left\" mode=\"readonly\" uniqueid=\"CatalogTableTrial2\" emptysearchbehavior=\"query\" searchplaceholdertext=\"Find an Offer\"><fields><field id=\"displayProductName\" valuehalign=\"\" type=\"\" columnwidth=\"\"><label>PRODUCT</label></field><field type=\"COMBO\" valuehalign=\"\" columnwidth=\"15%\"><label>TRIAL</label><template>{{trialDuration}} {{trialUnit}}</template></field><field id=\"payrollDiscountDescription\" valuehalign=\"\" type=\"\"><label>PAYROLL DISCOUNT</label></field><field id=\"discountDescription\" valuehalign=\"\" type=\"\" columnwidth=\"25%\"><label>QBO DISCOUNT</label></field><field type=\"COMBO\" valuehalign=\"right\" allowhtml=\"true\" columnwidth=\"120px\"><label>PAYROLL MONTHLY CHARGE</label><template>{{#payrollDiscountAmount}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{payrollDiscountedPrice}} &lt;br/&gt;&lt;/div&gt;\n&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{payrollListPrice}}&lt;/div&gt;\n{{/payrollDiscountAmount}}\n\n{{^payrollDiscountAmount}}\n{{#payrollListPrice}} &lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{payrollListPrice}} &lt;br/&gt;&lt;/div&gt; {{/payrollListPrice}}\n{{#payrollDiscountedPrice}}&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{payrollDiscountedPrice}}&lt;/div&gt; {{/payrollDiscountedPrice}}\n{{/payrollDiscountAmount}}</template></field><field type=\"COMBO\" valuehalign=\"right\" columnwidth=\"120px\" allowhtml=\"true\"><label>QBO ANNUAL CHARGE</label><template>{{#annualDiscountedPrice}}&lt;div style=\"font-weight: bold\"&gt;{{currencyCode}} {{annualDiscountedPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}\n{{#annualDiscountedPrice}}&lt;div style=\"color :DimGray ;text-decoration: line-through\"&gt;{{currencyCode}} {{annualListPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}\n{{^annualDiscountedPrice}}{{#annualListPrice}}&lt;div style=\"font-weight:bold\"&gt;{{currencyCode}} {{annualListPrice}}&lt;/div&gt;{{/annualListPrice}}{{/annualDiscountedPrice}}</template></field></fields><rowactions><action type=\"multi\" label=\"Select Offer\" icon=\"fa-circle-o\"/></rowactions><massactions usefirstitemasdefault=\"true\"/><views/><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"CatalogForDeck\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\" enclosevalueinquotes=\"true\"/></renderconditions><filters/><searchfields/><conditions><condition type=\"contextrow\" field=\"segment\" mergefield=\"segment\" operator=\"=\"/><condition type=\"contextrow\" field=\"offerType\" mergefield=\"offerType\" operator=\"=\"/></conditions></skootable></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"25px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components><renderconditions logictype=\"and\"/></skuidplus__deck><pagetitle model=\"Catalog\" uniqueid=\"sk-39DCWS-2660\" cssclass=\"navButtons\"><actions><action type=\"multi\" label=\"Back\"><renderconditions logictype=\"and\"/><enableconditions logictype=\"and\"><condition type=\"blank\" fieldmodel=\"Catalog\" sourcetype=\"userinfo\" sourceproperty=\"hasRows\" sourceuserinfotype=\"name\" operator=\"=\" value=\"null\" enclosevalueinquotes=\"false\"/></enableconditions><actions/><hotkeys/></action><action type=\"multi\" label=\"Next - Order Details\" uniqueid=\"nextOrderDetailButton\"><actions><action type=\"blockUI\" message=\"Processing...\"/><action type=\"custom\" snippet=\"orderDetailsActivities\"><onerroractions><action type=\"blockUI\" message=\"Error in OrderDetails - See Console Log\" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"NavigateToStep2\"/><action type=\"custom\" snippet=\"toggleButtonSet\"/></actions></action></actions><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" enclosevalueinquotes=\"true\" fieldmodel=\"Catalog\" sourcetype=\"modelproperty\" nosourcerowbehavior=\"deactivate\" sourceproperty=\"hasRows\"/></renderconditions></pagetitle><grid uniqueid=\"sk-iiRwU-3064\"><divisions><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"80%\" ratio=\"1\"><components/></division><division behavior=\"specified\" verticalalign=\"top\" cssclass=\"centerTemplate\" width=\"30px\"><components><image source=\"staticresource\" uniqueid=\"sk-iiXfB-3084\" resource=\"Error_Icon\"><styles><styleitem type=\"itemsize\" height=\"custom\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"fit\" verticalalign=\"top\"><components><template multiple=\"false\" uniqueid=\"sk-3EqC1T-1741\" allowhtml=\"true\" model=\"SelectedRow\" cssclass=\"\"><contents>&lt;span style=\"color:red; text-align:center\"&gt;Please select a product&lt;/span&gt;</contents><renderconditions logictype=\"and\"/></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"margin-top\" value=\"10px\"/></styles><renderconditions logictype=\"and\"><rendercondition fieldmodel=\"SelectedRow\" sourcetype=\"modelproperty\" nosourcerowbehavior=\"deactivate\" sourceproperty=\"hasNoRows\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"buttonPressed__ui\" value=\"Next\"/><rendercondition type=\"fieldvalue\" enclosevalueinquotes=\"true\" fieldmodel=\"Catalog\" sourcetype=\"modelproperty\" nosourcerowbehavior=\"deactivate\" sourceproperty=\"hasRows\"/></renderconditions></grid><grid uniqueid=\"sk-3W8EX4-2024\"><divisions><division behavior=\"flex\" minwidth=\"80%\" ratio=\"1\" verticalalign=\"top\"><components/></division><division behavior=\"specified\" verticalalign=\"top\" width=\"30px\"><components><image source=\"staticresource\" uniqueid=\"sk-3W8Iy8-2043\" resource=\"Error_Icon\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"sk-3W8RvT-2083\" model=\"UserSelections\" allowhtml=\"true\"><contents>&lt;span style=\"color:red; text-align:center\"&gt;{{{orderError__ui}}}&lt;/span&gt;</contents></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"margin-top\" value=\"10px\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"blank\" operator=\"!=\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"orderError__ui\" value=\"null\" enclosevalueinquotes=\"false\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"buttonPressed__ui\" value=\"Next\"/></renderconditions></grid></components><actions/></step><step stepid=\"step2\" steplabel=\"\"><components><grid uniqueid=\"sk-1NncY2-113\" rowgutter=\"12px\" columngutter=\"20px\"><divisions><division behavior=\"flex\" verticalalign=\"top\" ratio=\"1\" minwidth=\"10px\"><components/></division><division behavior=\"specified\" verticalalign=\"top\" width=\"45%\"><components><wrapper uniqueid=\"orderWrapper\"><components><template multiple=\"false\" uniqueid=\"sk-3j2sRP-2534\" allowhtml=\"true\"><contents>&lt;span style=\"font-size:24px; font-weight:bold\"&gt; Product Details&lt;/span&gt;</contents><renderconditions logictype=\"and\"/></template><wrapper uniqueid=\"sk-3kid0b-7099\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewUser\" buttonposition=\"\" uniqueid=\"userFieldEditor\" mode=\"edit\" layout=\"above\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"\" collapsible=\"no\" showheader=\"true\"><fields><field id=\"NewOrExisting__ui\" valuehalign=\"\" type=\"RADIO_BUTTONS\" required=\"true\" cssclass=\"newUserPicklist\"><label>&lt;span style=\"font-size:20px\"&gt;User ID&lt;/span&gt;</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions logictype=\"and\"/></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewContact\" buttonposition=\"\" uniqueid=\"editEmailEditor\" mode=\"edit\" layout=\"above\" cssclass=\"\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Email\" valuehalign=\"\" type=\"\" required=\"true\"><label>Contact Email</label></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"blank\" operator=\"!=\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"emailErrorStep2_ui\" value=\"null\" enclosevalueinquotes=\"false\"/></renderconditions></basicfieldeditor><template multiple=\"false\" uniqueid=\"contactEmailTemplate\" model=\"NewContact\" allowhtml=\"true\"><contents>{{#Email}}&lt;div id=\"cEmailID\" style=\"font-size:14px\"&gt;Contact Email: {{{Email}}}&lt;/div&gt;  {{/Email}}\n\n</contents><renderconditions logictype=\"and\"/></template><template multiple=\"false\" uniqueid=\"sk-3rjkjt-1972\" model=\"OnlineSales_defSourceCode\" allowhtml=\"true\" cssclass=\"\"><contents>&lt;a id=\"saveEmail\" style=\"font-size:14px; color: #0077C5\" href=\"javascript:skuid.events.publish('orderAnother', ['saveEmail']);\" onclick=\"window.onbeforeunload = null;\"&gt;\nSave email\n&lt;/a&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"blank\" operator=\"!=\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"emailErrorStep2_ui\" value=\"null\" enclosevalueinquotes=\"false\"/></renderconditions></template><template multiple=\"false\" uniqueid=\"emailErrorTemplate\" model=\"UserSelections\" allowhtml=\"true\" cssclass=\"\"><contents>&lt;div style=\"color:red;font-size:9pt; font-weight:bold; padding-top:10px;padding-bottom:10px\" &gt; {{{emailErrorStep2_ui}}} &lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"blank\" operator=\"!=\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"emailErrorStep2_ui\" value=\"null\" enclosevalueinquotes=\"false\"/></renderconditions></template></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\"/><styleitem type=\"size\"/><styleitem property=\"margin-top\" value=\"-9px\"/></styles><renderconditions logictype=\"and\"/></wrapper><wrapper uniqueid=\"sk-612bA-1173\" cssclass=\"fieldEditor\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewUser\" buttonposition=\"\" uniqueid=\"userIDNew\" mode=\"edit\" layout=\"above\" cssclass=\"\"><columns><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\" cssclass=\"checkmarkField\"><fields><field id=\"UserID_ui\" valuehalign=\"\" type=\"\" required=\"true\"><label>User ID</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions/></field></fields><renderconditions logictype=\"and\"/></section></sections></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><template multiple=\"false\" uniqueid=\"sk-GpcSP-4870\" allowhtml=\"true\" cssclass=\"errorClass\"><contents>&lt;span style=\"color:red; font-size:9pt; font-weight:bold\"&gt;This user ID is already associated with an Intuit account.&lt;/span&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"ErrorType__ui\" value=\"ExistingUserName\"/></renderconditions></template><wrapper uniqueid=\"sk-GqNl4-4932\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewUser\" buttonposition=\"\" uniqueid=\"userIDConfirm\" mode=\"edit\" layout=\"above\"><columns><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"ConfirmEmail_ui\" valuehalign=\"\" type=\"\" cssclass=\"\" required=\"true\"><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" field=\"NewOrExisting__ui\" value=\"new\"/></renderconditions><enableconditions/><label>Confirm User ID</label></field></fields></section></sections></column></columns></basicfieldeditor><template multiple=\"false\" uniqueid=\"sk-GpI8t-4798\" allowhtml=\"true\" cssclass=\"errorClass\"><contents>&lt;span style=\"color:red; font-size:9pt; font-weight:bold\"&gt;The user IDs do not match.  Please try again.&lt;/span&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"skipandnorender\" field=\"ErrorType__ui\" value=\"NoMatch\"/></renderconditions></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"12px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,bottom,\" borders=\"top,\" margin=\"\"><styles><styleitem property=\"border-top\" value=\"10px solid transparent\"/><styleitem property=\"padding-top\" value=\"10px\"/><styleitem property=\"padding-bottom\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/><styleitem property=\"margin-top\" value=\"-5px\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"NewOrExisting__ui\" value=\"new\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-Gt2OT-5142\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewUser\" buttonposition=\"\" uniqueid=\"userIDExisting\" mode=\"edit\" layout=\"above\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\" cssclass=\"checkmarkField\"><fields><field id=\"UserID_ui\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"\"><label>Current User ID</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions/></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><template multiple=\"false\" uniqueid=\"sk-Gt4PH-5153\" allowhtml=\"true\" cssclass=\"errorClass\"><contents>&lt;span style=\"color:red; font-size:9pt; font-weight:bold\"&gt;This UserID does not exist.  Please enter an existing &lt;br&gt;Intuit user ID or create a new QBO User Login.&lt;/span&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"ErrorType__ui\" value=\"NoUserName\"/></renderconditions></template></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"NewOrExisting__ui\" value=\"existing\"/></renderconditions></wrapper><template multiple=\"false\" uniqueid=\"sk-1nY5De-745\" allowhtml=\"true\" model=\"UserSelections\" cssclass=\"errorClass\"><contents>&lt;div style=\"color:red;font-size:9pt; font-weight:bold\" &gt;\n&lt;br/&gt;User Validation Service Error: {{{errorMessage__ui}}}&lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"skipandnorender\" field=\"errorCode__ui\" value=\"faultCode\"/></renderconditions></template><richtext multiple=\"false\" uniqueid=\"tempPasswordText\" cssclass=\"pswdText\" model=\"NewContact\"><contents>&lt;p&gt;&lt;span style=\"font-size:12px;\"&gt;*Password setup instructions will be sent to : {{{Email}}}&lt;/span&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"NewOrExisting__ui\" value=\"new\"/></renderconditions></richtext><richtext multiple=\"false\" uniqueid=\"sk-1OunWK-370\" cssclass=\"pswdText\"><contents>&lt;p&gt;&lt;span style=\"font-size:12px;\"&gt;*The password associated w/ this login will be used.&lt;/span&gt;&lt;/p&gt;\n</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"NewOrExisting__ui\" value=\"existing\"/></renderconditions></richtext><wrapper uniqueid=\"sk-3OjMIb-914\"><components><template multiple=\"false\" uniqueid=\"sk-3Oj-9P-967\" allowhtml=\"true\" cssclass=\"languageTitle\"><contents>&lt;span style=\"font-weight:bold; font-size:20px\"&gt;Product Language&lt;/span&gt;&lt;br/&gt;</contents></template><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewUser\" buttonposition=\"\" uniqueid=\"LanguageEditor\" mode=\"edit\" layout=\"above\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Language_ui\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"picklistCustom\"/></fields></section></sections></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"25px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"or\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"Canada\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"France\"/></renderconditions></wrapper></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\" borders=\"all\" padding=\"top,right,left,\" margin=\"\"><styles><styleitem property=\"border\" value=\"1px solid #dddddd\"/><styleitem property=\"padding-left\" value=\"25px\"/><styleitem property=\"padding-top\" value=\"23px\"/><styleitem property=\"padding-right\" value=\"25px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"custom\"><styles><styleitem property=\"min-height\" value=\"650px\"/><styleitem property=\"max-height\" value=\"700px\"/><styleitem property=\"overflow-y\" value=\"auto\"/></styles></styleitem><styleitem property=\"margin-top\" value=\"-26px\"/></styles><renderconditions logictype=\"and\"/></wrapper></components></division><division behavior=\"specified\" verticalalign=\"top\" width=\"45%\"><components><wrapper uniqueid=\"sk-14E7f6-1051\"><components><wrapper uniqueid=\"sk-19wzMD-1874\"><components><template multiple=\"false\" uniqueid=\"sk-14Gj0x-1254\" allowhtml=\"true\"><contents>&lt;span style=\"font-size:24px; font-weight:bold\"&gt;Company Details&lt;/span&gt;</contents></template><template multiple=\"false\" uniqueid=\"sk-19w-Se-1883\" allowhtml=\"true\" model=\"NewUser\"><contents>{{#CompanyName_ui}}&lt;span style=\"font-size:14px;color:#6C6C6C;\"&gt;&lt;br/&gt;Company:&lt;/span&gt;&lt;span style=\"font-weight:bold; font-size:16px\"&gt; {{{CompanyName_ui}}}&lt;/span&gt; {{/CompanyName_ui}}\n&lt;br/&gt;&lt;br/&gt;\n&lt;span style=\"font-size:14px;font-weight:bold\"&gt;Company Address&lt;/span&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,bottom,left,\"><styles><styleitem property=\"padding-left\" value=\"2px\"/><styleitem property=\"padding-top\" value=\"8px\"/><styleitem property=\"padding-bottom\" value=\"12px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"CompanyAddress\" buttonposition=\"\" uniqueid=\"frenchCompAddressEditor\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\"><template>&lt;span style=\"font-style:normal; color:red; font-size:12pt; font-weight:bold\"&gt;Missing Required Field Values&lt;/span&gt;</template><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"CompAddressErrorStatus_ui\" value=\"AddressValuesMissing\"/></renderconditions><enableconditions/></field><field id=\"AddressLine1_ui\" valuehalign=\"\" type=\"\"><label>Adresse</label></field><field id=\"City_ui\" valuehalign=\"\" type=\"\"><label>Ville</label></field><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"PostalCode_ui\" valuehalign=\"\" type=\"\"><label>Code Postal</label></field></fields></section></sections></column></columns><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" readonly=\"true\" allowhtml=\"true\"><template>&lt;div style=\"font-size:14px;font-style: normal;font-weight:bold\"&gt;Country: {{{Country__c}}}&lt;/div&gt;</template></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"France\"/></renderconditions></basicfieldeditor><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"CompanyAddress\" buttonposition=\"\" uniqueid=\"compAddressEditor\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\"><template>&lt;span style=\"font-style:normal; color:red; font-size:12pt; font-weight:bold\"&gt;Missing Required Field Values&lt;/span&gt;</template><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"skipandnorender\" field=\"CompAddressErrorStatus_ui\" value=\"AddressValuesMissing\"/></renderconditions><enableconditions/></field><field id=\"AddressLine1_ui\" valuehalign=\"\" type=\"\" required=\"true\"><label>Street</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"multiple\" operator=\"in\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"\" enclosevalueinquotes=\"true\"><values><value>Canada</value><value>United Kingdom</value></values></rendercondition></renderconditions><enableconditions/></field><field id=\"AddressLine1_ui\" valuehalign=\"\" type=\"\"><label>Street</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"multiple\" operator=\"not in\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"\" enclosevalueinquotes=\"true\"><values><value>Canada</value><value>United Kingdom</value></values></rendercondition></renderconditions><enableconditions/></field><field id=\"City_ui\" valuehalign=\"\" type=\"\" required=\"true\"><label>Town/City</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"multiple\" operator=\"in\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"\" enclosevalueinquotes=\"true\"><values><value>Canada</value><value>United Kingdom</value></values></rendercondition></renderconditions><enableconditions/></field><field id=\"City_ui\" valuehalign=\"\" type=\"\"><label>Town/City</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"multiple\" operator=\"not in\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"\" enclosevalueinquotes=\"true\"><values><value>Canada</value><value>United Kingdom</value></values></rendercondition></renderconditions><enableconditions/></field><columns layoutmode=\"fixed\"><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"State_ui\" valuehalign=\"\" type=\"CUSTOM\" cssclass=\"picklistCustom picklistState\" snippet=\"picklistState\"><label>State</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"USA\"/></renderconditions><enableconditions/></field><field id=\"State_ui\" valuehalign=\"\" type=\"CUSTOM\" cssclass=\"picklistCustom picklistState condField\" snippet=\"picklistState\" required=\"true\"><label>Province/Territory</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"Canada\"/></renderconditions><enableconditions/></field><field id=\"State_ui\" valuehalign=\"\" type=\"CUSTOM\" cssclass=\"picklistCustom picklistState condField\" snippet=\"picklistState\"><label>Province/Territory</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"Australia\"/></renderconditions><enableconditions/></field><field id=\"State_ui\" valuehalign=\"\" type=\"CUSTOM\" cssclass=\"picklistCustom picklistState condField\" snippet=\"picklistState\" required=\"true\"><label>County</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"United Kingdom\"/></renderconditions><enableconditions/></field></fields></section></sections></column><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"PostalCode_ui\" valuehalign=\"\" type=\"\"><label>Zip</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"USA\"/></renderconditions><enableconditions/></field><field id=\"PostalCode_ui\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"condField\"><label>Postal Code</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"multiple\" operator=\"in\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"\" enclosevalueinquotes=\"true\"><values><value>Canada</value><value>United Kingdom</value></values></rendercondition></renderconditions><enableconditions/></field><field id=\"PostalCode_ui\" valuehalign=\"\" type=\"\" cssclass=\"condField\"><label>Postal Code</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"multiple\" operator=\"not in\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"\" enclosevalueinquotes=\"true\"><values><value>USA</value><value>Canada</value><value>United Kingdom</value></values></rendercondition></renderconditions><enableconditions/></field></fields></section></sections></column></columns><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\"><template>&lt;div style=\"font-size:14px;font-style: normal;font-weight:bold\"&gt;Country: {{{Country__c}}}&lt;/div&gt;</template><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions/></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"France\"/></renderconditions></basicfieldeditor><template multiple=\"false\" uniqueid=\"errorCompAddress\" allowhtml=\"true\" model=\"UserSelections\" cssclass=\"\"><contents>&lt;div style=\"padding-left: 8px; font-style:normal; color:red; font-size:9pt; font-weight:bold\"&gt;{{CompAddressErrorMsg_ui}}&lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"blank\" operator=\"!=\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"CompAddressErrorMsg_ui\" value=\"null\" enclosevalueinquotes=\"false\"/></renderconditions></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" borders=\"bottom,right,top,\" padding=\"right,top,left,\"><styles><styleitem property=\"border-top\" value=\"1px solid #dddddd\"/><styleitem property=\"border-right\" value=\"1px solid #dddddd\"/><styleitem property=\"border-bottom\" value=\"1px solid #dddddd\"/><styleitem property=\"padding-left\" value=\"25px\"/><styleitem property=\"padding-top\" value=\"23px\"/><styleitem property=\"padding-right\" value=\"25px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"custom\"><styles><styleitem property=\"min-height\" value=\"650px\"/><styleitem property=\"max-height\" value=\"750px\"/><styleitem property=\"overflow-y\" value=\"auto\"/></styles></styleitem><styleitem property=\"margin-top\" value=\"-26px\"/><styleitem property=\"margin-left\" value=\"-20px\"/></styles></wrapper><wrapper uniqueid=\"sk-3j3O_6-2648\"><components><pagetitle model=\"SelectedRow\" uniqueid=\"next_order\"><actions><action type=\"multi\" label=\"Back\" cssclass=\"whiteButton\" uniqueid=\"backButton\"><actions><action type=\"custom\" snippet=\"navStep1\"/><action type=\"updateRow\" fieldmodel=\"UserSelections\" field=\"currentStep\" enclosevalueinquotes=\"true\" value=\"step1\" affectedrows=\"context\"/><action type=\"updateRow\" fieldmodel=\"UserSelections\" field=\"CompAddressErrorStatus_ui\" enclosevalueinquotes=\"true\" value=\"null\" affectedrows=\"context\"/><action type=\"updateRow\" fieldmodel=\"NewUser\" field=\"ErrorType__ui\" enclosevalueinquotes=\"true\" affectedrows=\"context\"/></actions></action><action type=\"multi\" label=\"Next - Order\"><actions><action type=\"blockUI\" message=\"Processing...\"/><action type=\"custom\" snippet=\"PreventExitDialog\"><onerroractions/></action><action type=\"custom\" snippet=\"UserValidation\"><onerroractions><action type=\"blockUI\" message=\"Error in User Validation - See Console Log\" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"disablePopupEsc\"><onerroractions><action type=\"blockUI\" message=\"There was an error\" timeout=\"2000\"/></onerroractions></action></actions><renderconditions logictype=\"and\"/><enableconditions/><hotkeys/></action></actions><renderconditions logictype=\"and\"/></pagetitle><pagetitle uniqueid=\"next_payment\" model=\"Catalog\"><actions><action type=\"multi\" label=\"Back\" snippet=\"navStep1\" cssclass=\"whiteButton\" uniqueid=\"backButton\"><actions><action type=\"custom\" snippet=\"navStep1\"/><action type=\"updateRow\" fieldmodel=\"UserSelections\" field=\"currentStep\" enclosevalueinquotes=\"true\" value=\"step1\"/><action type=\"updateRow\" fieldmodel=\"UserSelections\" field=\"CompAddressErrorStatus_ui\" enclosevalueinquotes=\"true\" value=\"null\"/><action type=\"updateRow\" fieldmodel=\"NewUser\" field=\"ErrorType__ui\" enclosevalueinquotes=\"true\"/></actions><hotkeys/></action><action type=\"multi\" label=\"Next - Payment\" uniqueid=\"paymentButton\"><actions><action type=\"custom\" snippet=\"UserValidation\"><onerroractions><action type=\"blockUI\" message=\"Error in User Validation - See Console Log\" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"styleStatePicklist\"><onerroractions><action type=\"blockUI\" message=\"Error in State Picklist \" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"styleYearPicklist\"><onerroractions><action type=\"blockUI\" message=\"Error in Year Picklist \" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"styleMonthPicklist\"><onerroractions><action type=\"blockUI\" message=\"Error in Month Picklist\" timeout=\"2000\"/></onerroractions></action><action type=\"updateRow\" fieldmodel=\"UserSelections\" field=\"currentStep\" enclosevalueinquotes=\"true\" value=\"step3\"/><action type=\"custom\" snippet=\"ccTokenInit\"><onerroractions><action type=\"blockUI\" message=\"Error in CC Token Initialization\" timeout=\"2000\"/></onerroractions></action></actions></action></actions><renderconditions logictype=\"and\"/></pagetitle><grid uniqueid=\"sk-3z5SNe-882\" rowgutter=\"\" cssclass=\"displayNone\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"50%\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"CompanyAddress\" buttonposition=\"\" uniqueid=\"sk-3z5np_-906\" mode=\"edit\" layout=\"\" cssclass=\"\"><columns layoutmode=\"fixed\"><column verticalalign=\"top\" width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><columns layoutmode=\"fixed\" columngutter=\"4px\" rowgutter=\"4px\"><column width=\"40px\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Enter_Credit_Card__ui\" valuehalign=\"\" type=\"\"><label>&lt;span style=\"color:white\"&gt;&lt;/span&gt;</label></field></fields></section></sections></column><column width=\"75%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\"><template>&lt;span style=\"font-style:normal;font-size:14px;margin-left:-55px\"&gt;Enter credit card&lt;/span&gt;</template></field></fields></section></sections></column></columns></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"skipandnorender\" field=\"offerType\" value=\"TRIAL\"/></renderconditions></basicfieldeditor></components></division><division behavior=\"specified\" verticalalign=\"top\" width=\"50%\"><components/></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"/></grid></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"30px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"20px\" ratio=\"1\"><components/></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"margin-top:\"/></styles><renderconditions logictype=\"and\"/></grid></components><actions/></step><step stepid=\"step3\" steplabel=\"\"><components><grid uniqueid=\"sk-1aKRTd-293\" columngutter=\"\"><divisions><division behavior=\"flex\" verticalalign=\"top\" ratio=\"1\" minwidth=\"10px\"><components/></division><division behavior=\"specified\" verticalalign=\"top\" width=\"45%\"><components><wrapper uniqueid=\"sk-CqIIV-1580\"><components><wrapper uniqueid=\"sk-ClRVi-1193\"><components><template multiple=\"false\" uniqueid=\"sk-ClTfT-1202\" allowhtml=\"true\"><contents>&lt;span style=\"font-size:22px; font-weight:bold\"&gt;Billing Address&lt;/span&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,bottom,\" borders=\"\"><styles><styleitem property=\"padding-top\" value=\"3px\"/><styleitem property=\"padding-bottom\" value=\"6px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewAddress\" buttonposition=\"\" uniqueid=\"sameAsCompAddressBoxEditor\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><columns layoutmode=\"fixed\"><column width=\"40px\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"SameAsCompAddr_ui\" valuehalign=\"\" type=\"\" cssclass=\"sameAs\"><label>&lt;span style=\"color:white\"&gt;c&lt;/span&gt;</label></field></fields></section></sections></column><column width=\"280px\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\"><template>&lt;span style=\"font-style:normal;font-size:14px;margin-left:-10px\"&gt;&lt;br/&gt;Same as company address&lt;/span&gt;</template></field></fields></section></sections></column></columns><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\"><template>&lt;span style=\"font-style:normal; color:red; font-size:12pt; font-weight:bold\"&gt;Missing Required Field Values&lt;/span&gt;</template><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"errorStatus\" value=\"AddressValuesMissing\"/></renderconditions><enableconditions/></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewAddress\" buttonposition=\"\" uniqueid=\"FranceBillingAddressEditor\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Name\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"ca\"><label>Adresse</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><field id=\"City__c\" valuehalign=\"\" type=\"\" cssclass=\"ca\"><label>Ville</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><field id=\"Postal_Code__c\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"ca\"><label>Code Postal</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\"><template>&lt;div style=\"font-size:14px;font-style: normal;font-weight:bold\"&gt;Country: {{{Country__c}}}&lt;/div&gt;</template></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentRegion__ui\" value=\"France\"/></renderconditions></basicfieldeditor><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewAddress\" buttonposition=\"\" uniqueid=\"australiaBillingAddressEditor\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Name\" valuehalign=\"\" type=\"\" cssclass=\"ca\" required=\"true\"><label>Billing Address</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><field id=\"City__c\" valuehalign=\"\" type=\"\" cssclass=\"ca\"><label>Town/City</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><columns layoutmode=\"fixed\"><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"State__c\" valuehalign=\"\" type=\"CUSTOM\" required=\"true\" cssclass=\"picklistCustom picklistState ca\" snippet=\"picklistState\"><label>Province/Territory</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field></fields></section></sections></column><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Postal_Code__c\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"ca\"><label>Postal Code</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field></fields></section></sections></column></columns></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentRegion__ui\" value=\"Australia\"/></renderconditions></basicfieldeditor><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewAddress\" buttonposition=\"\" uniqueid=\"UKBillingAddressEditor\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Name\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"ca\"><label>Billing Address</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><field id=\"City__c\" valuehalign=\"\" type=\"\" cssclass=\"ca\"><label>Town/City</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><columns layoutmode=\"fixed\"><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"State__c\" valuehalign=\"\" type=\"CUSTOM\" required=\"true\" cssclass=\"picklistCustom picklistState ca\" snippet=\"picklistState\"><label>County</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field></fields></section></sections></column><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Postal_Code__c\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"ca\"><label>Postal Code</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field></fields></section></sections></column></columns></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentRegion__ui\" value=\"United Kingdom\"/></renderconditions></basicfieldeditor><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewAddress\" buttonposition=\"\" uniqueid=\"CanadaBillingAddressEditor\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Name\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"ca\"><label>Street</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><field id=\"City__c\" valuehalign=\"\" type=\"\" cssclass=\"ca\"><label>Town/City</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><columns layoutmode=\"fixed\"><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"State__c\" valuehalign=\"\" type=\"CUSTOM\" required=\"true\" snippet=\"picklistState\" cssclass=\"picklistCustom picklistState ca\"><label>Province/Territory</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field></fields></section></sections></column><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Postal_Code__c\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"ca\"><label>Postal Code</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field></fields></section></sections></column></columns></fields></section></sections></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentRegion__ui\" value=\"Canada\"/></renderconditions></basicfieldeditor><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewAddress\" buttonposition=\"\" uniqueid=\"billAddressFieldEditor\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Billing Address\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Name\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"ca\"><label>Billing Address</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field><field id=\"City__c\" valuehalign=\"\" type=\"\" cssclass=\"ca\"><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions logictype=\"and\"/><label>City</label></field></fields></section><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><columns layoutmode=\"fixed\"><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"State__c\" valuehalign=\"\" type=\"CUSTOM\" required=\"true\" snippet=\"picklistState\" cssclass=\"picklistCustom picklistState ca\" addnoneoption=\"false\"><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions/></field></fields><renderconditions logictype=\"and\"/></section></sections><renderconditions logictype=\"and\"/></column><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Postal_Code__c\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"ca\"><label>Zip</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"/><enableconditions logictype=\"and\"/></field></fields></section></sections></column></columns></fields></section></sections><renderconditions logictype=\"and\"/></column></columns><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentRegion__ui\" value=\"USA\"/></renderconditions></basicfieldeditor><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"NewAddress\" buttonposition=\"\" uniqueid=\"CountryPicklistFE\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><columns layoutmode=\"fixed\"><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Country_4CA_ui\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"picklistCustom ca caCountry\"><label>Country</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"multiple\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" sourceparam=\"OfferRegion\" sourceproperty=\"hasRows\" nosourcerowbehavior=\"deactivate\" operator=\"in\" field=\"region\" value=\"\" enclosevalueinquotes=\"true\"><values><value>USA</value><value>Canada</value></values></rendercondition></renderconditions><enableconditions/></field><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\" cssclass=\"finalCountry\"><template>&lt;div style=\"font-size:14px;font-style: normal;font-weight:bold\"&gt;Country: {{{Country__c}}}&lt;/div&gt;</template><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"USA\" sourceparam=\"OfferRegion\"/><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"region\" value=\"Canada\" sourceparam=\"OfferRegion\"/><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewAddress\" sourcetype=\"param\" sourceparam=\"OfferRegion\" value=\"France\"/></renderconditions><enableconditions/></field></fields></section></sections></column><column width=\"50%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields/></section></sections></column></columns></fields></section></sections></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><template multiple=\"false\" uniqueid=\"errorAddress\" model=\"UserSelections\" allowhtml=\"true\" cssclass=\"\"><contents>&lt;span style=\"padding-left: 8px; font-style:normal; color:red; font-size:9pt; font-weight:bold\"&gt;{{addressError}}&lt;/span&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"blank\" operator=\"!=\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"addressError\" value=\"null\" enclosevalueinquotes=\"false\"/></renderconditions></template></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\" borders=\"bottom,top,left,\" padding=\"right,top,left,\"><styles><styleitem property=\"border-left\" value=\"1px solid #dddddd\"/><styleitem property=\"border-top\" value=\"1px solid #dddddd\"/><styleitem property=\"border-bottom\" value=\"1px solid #dddddd\"/><styleitem property=\"padding-left\" value=\"27px\"/><styleitem property=\"padding-top\" value=\"19px\"/><styleitem property=\"padding-right\" value=\"27px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"custom\"><styles><styleitem property=\"min-height\" value=\"500px\"/><styleitem property=\"max-height\" value=\"500px\"/><styleitem property=\"overflow-y\" value=\"auto\"/></styles></styleitem></styles><renderconditions logictype=\"and\"/></wrapper></components></division><division behavior=\"specified\" verticalalign=\"top\" width=\"45%\"><components><wrapper uniqueid=\"sk-CqS85-1617\"><components><wrapper uniqueid=\"sk-CmMrH-1339\"><components><template multiple=\"false\" uniqueid=\"sk-CmOSs-1346\" allowhtml=\"true\"><contents>&lt;span style=\"font-size:22px; font-weight:bold\"&gt;Credit Card Information&lt;/span&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"CountryFromLoggedInUser\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"Country\" value=\"USA\" sourceparam=\"country\"/></renderconditions></template><template multiple=\"false\" uniqueid=\"sk-3SE9qr-738\" allowhtml=\"true\"><contents>&lt;span style=\"font-size:22px; font-weight:bold\"&gt;Payment Information&lt;/span&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"multiple\" operator=\"in\" fieldmodel=\"CountryFromLoggedInUser\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"Country\" value=\"\" enclosevalueinquotes=\"true\" sourceparam=\"country\"><values><value>Canada</value><value>Australia</value><value>United Kingdom</value></values></rendercondition></renderconditions></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\" borders=\"top,\"><styles><styleitem property=\"border-top\" value=\"3px solid transparent\"/><styleitem property=\"padding-bottom\" value=\"6px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"BillingProfile\" buttonposition=\"\" uniqueid=\"paymentInfoFieldEditor\" mode=\"edit\" layout=\"above\" cssclass=\"orderFieldEditor\"><columns><column width=\"100%\" cssclass=\"cardSelectionClass\"><sections><section title=\"Payment Info\" collapsible=\"no\" showheader=\"false\"><fields><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\"><template>&lt;span style=\"font-style:normal; color:red; font-size:12pt; font-weight:bold\"&gt;Missing Required Field Values&lt;/span&gt;</template><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"skipandnorender\" field=\"errorStatus\" value=\"requiredValuesMissing\"/></renderconditions><enableconditions/></field><columns layoutmode=\"fixed\"><column width=\"100%\" cssclass=\"cardSelectionClass\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Payment_Method__c\" valuehalign=\"\" type=\"RADIO_BUTTONS\" required=\"true\" cssclass=\"newUserPicklist paymentMethod\"><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"CountryFromLoggedInUser\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"Country\" value=\"United Kingdom\" sourceparam=\"country\"/></renderconditions><enableconditions/><label>&lt;span style=\"color:white\"&gt;Payment Method&lt;/span&gt;</label></field></fields></section></sections","skuid__Layout2__c":"></column></columns><field id=\"Name_of_Credit_Card__c\" valuehalign=\"\" type=\"\" required=\"true\"><label>Name on Card</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"Payment_Method__c\" value=\"Credit Card\"/></renderconditions><enableconditions/></field><field id=\"CreditCardNumber_ui\" valuehalign=\"\" type=\"\" required=\"true\" cssclass=\"addCCImages\"><label>Card Number</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"Payment_Method__c\" value=\"Credit Card\"/></renderconditions><enableconditions/></field><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" readonly=\"true\" cssclass=\"errorCCNumber\"><template>&lt;span style=\"font-style:normal; color:red; font-size:9pt; font-weight:bold\"&gt;The credit card number isn't valid.  Please try again.&lt;/span&gt;</template><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" field=\"errorStatus\" value=\"invalidCC\" nosourcerowbehavior=\"deactivate\"/></renderconditions><enableconditions/></field></fields></section><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><columns layoutmode=\"fixed\"><column width=\"50%\" cssclass=\"addPadding\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\" cssclass=\"moveDown\"><fields><field id=\"Expiry_Month__c\" showhelp=\"false\" valuehalign=\"\" type=\"\" required=\"true\" readonly=\"false\" cssclass=\"picklistCustom picklistMonth\" snippet=\"datePicklist\" addnoneoption=\"false\"><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" value=\"Credit Card\" field=\"Payment_Method__c\"/></renderconditions><enableconditions/><label>Expires On</label></field></fields></section></sections></column><column width=\"50%\" cssclass=\"addPadding\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"Expiry_Year__c\" decimalplaces=\"\" valuehalign=\"\" type=\"CUSTOM\" required=\"true\" snippet=\"picklistYear\" cssclass=\"picklistCustom picklistYear\"><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"Payment_Method__c\" value=\"Credit Card\"/></renderconditions><enableconditions/><label>&lt;span style=\"color:white\"&gt;Year&lt;/span&gt;</label></field></fields></section></sections></column></columns></fields></section><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><columns layoutmode=\"fixed\"><column width=\"40%\"><sections><section title=\"New Section\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"CVV_ui\" valuehalign=\"\" type=\"\" required=\"true\"><label>Security Code</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"Payment_Method__c\" value=\"Credit Card\"/></renderconditions><enableconditions/></field></fields></section></sections></column></columns><field type=\"COMBO\" valuehalign=\"\" editmodebehavior=\"autopopup\" allowhtml=\"true\" cssclass=\"errorCVV\" readonly=\"true\"><template>&lt;span style=\"font-style:normal; color:red; font-size:9pt; font-weight:bold\"&gt;The security code is invalid.&lt;/span&gt;</template><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"errorStatus\" value=\"invalidCVV\"/></renderconditions><enableconditions/></field><field id=\"Bank_Account_Name__c\" valuehalign=\"\" type=\"\" required=\"true\"><label>Name of Account Holder</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"Payment_Method__c\" value=\"Debit Card\" enclosevalueinquotes=\"true\"/></renderconditions><enableconditions/></field><field id=\"Bank_Account_Number__c\" valuehalign=\"\" type=\"\" required=\"true\"><label>Bank/Building Society Account Number</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"Payment_Method__c\" value=\"Debit Card\"/></renderconditions><enableconditions/></field><field id=\"Bank_Routing_Number__c\" valuehalign=\"\" type=\"\" required=\"true\"><label>Branch Sort Code</label><renderconditions logictype=\"and\" onhidedatabehavior=\"cancel\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"BillingProfile\" sourcetype=\"fieldvalue\" field=\"Payment_Method__c\" value=\"Debit Card\"/></renderconditions><enableconditions/></field></fields></section></sections><renderconditions logictype=\"and\"/></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" borders=\"all\" padding=\"right,top,left,\"><styles><styleitem property=\"border\" value=\"1px solid #dddddd\"/><styleitem property=\"padding-left\" value=\"27px\"/><styleitem property=\"padding-top\" value=\"19px\"/><styleitem property=\"padding-right\" value=\"27px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"custom\"><styles><styleitem property=\"min-height\" value=\"500px\"/><styleitem property=\"max-height\" value=\"500px\"/><styleitem property=\"overflow-y\" value=\"auto\"/></styles></styleitem></styles><renderconditions logictype=\"and\"/></wrapper><wrapper uniqueid=\"sk-CrwLp-706\"><components><pagetitle uniqueid=\"sk-Cg1KX-877\" model=\"Catalog\"><actions><action type=\"multi\" label=\"Back\" cssclass=\"whiteButton\" uniqueid=\"backPaymentButton\"><actions><action type=\"custom\" snippet=\"navStep2\"><onerroractions><action type=\"blockUI\" message=\"There was an error : From navStep2 Snippet\" timeout=\"3000\"/></onerroractions></action><action type=\"updateRow\" fieldmodel=\"UserSelections\" field=\"CompAddressErrorMsg_ui\" enclosevalueinquotes=\"true\" value=\"\"/><action type=\"updateRow\" fieldmodel=\"UserSelections\" field=\"errorStatus\" enclosevalueinquotes=\"true\" value=\"BLANK\"/><action type=\"updateRow\" fieldmodel=\"UserSelections\" field=\"currentStep\" enclosevalueinquotes=\"true\" value=\"step2\"/><action type=\"save\"><models><model>UserSelections</model></models><onerroractions><action type=\"blockUI\" message=\"There was an error : Model UserSelections\" timeout=\"3000\"/></onerroractions></action><action type=\"publish\" fieldmodel=\"OnlineSales_CountryFilter\" affectedrows=\"context\" event=\"backPaymentButtonClicked\"/></actions></action><action type=\"multi\" label=\"Place Order\"><actions><action type=\"custom\" snippet=\"PreventExitDialog\"><onerroractions><action type=\"blockUI\" message=\"There was an error in PreventExitDialog\" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"paymentRequiredFieldsValidation\"><onerroractions><action type=\"blockUI\" message=\"Error in Payment Required Fields Validation\" timeout=\"2000\"/></onerroractions></action><action type=\"custom\" snippet=\"navStep4\"/></actions></action></actions><renderconditions logictype=\"and\"/></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"50px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper></components></division><division behavior=\"flex\" verticalalign=\"top\" ratio=\"1\" minwidth=\"20px\"><components/></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"/></grid></components><actions/></step><step stepid=\"step4\" steplabel=\"\"><components><grid uniqueid=\"orderSuccessGrid\"><divisions><division behavior=\"flex\" verticalalign=\"top\" ratio=\"1\" minwidth=\"100px\"><components><wrapper uniqueid=\"sk-NXu1k-740\"><components><image source=\"staticresource\" uniqueid=\"sk-GSGM--2176\" resource=\"EndOfFlowIcons\" path=\"checkmark_icon_132px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"160px\"/></styles></styleitem><styleitem type=\"border\" padding=\"all\"><styles><styleitem property=\"padding\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem property=\"margin\" value=\"0 auto\"/></styles></image><template multiple=\"false\" uniqueid=\"sk-GRJ3D-2086\" allowhtml=\"true\" model=\"NewUser\"><contents>&lt;div style=\"text-align: center\"&gt;\n&lt;div style=\"font-size: 24px; font-weight: bold; padding-bottom: 12px\"&gt;Order Complete&lt;/div&gt;\n&lt;div style=\"font-size: 14px; padding-bottom: 10px\"&gt;COMPANY ID:  &lt;span style=\"font-weight: bold; font-style: normal\"&gt;{{createCompanyID_ui}}&lt;/span&gt;&lt;/div&gt;\n&lt;div style=\"font-size: 14px; padding-bottom: 10px\"&gt;USERID:  &lt;span style=\"font-weight: bold; font-style: normal\"&gt;{{UserID_ui}}&lt;/span&gt;&lt;/div&gt;\n&lt;/div&gt;</contents></template><template multiple=\"false\" uniqueid=\"sk-sN1KG-785\" model=\"NewContact\" allowhtml=\"true\"><contents>&lt;div style=\"text-align: center\"&gt;\n&lt;div style=\"font-size: 14px; color:black; padding-bottom: 8px\"&gt;PW Setup Email Sent: &lt;br/&gt;&lt;span style=\"font-weight:bold; color:black; font-style: normal\"&gt;{{{Email}}}&lt;/span&gt;&lt;/div&gt;\n&lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"NewOrExisting__ui\" value=\"new\"/></renderconditions></template><wrapper uniqueid=\"sk-2MSH8C-1056\"><components><grid uniqueid=\"orderAnotherGrid\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\" cssclass=\"displayNone\"><components><image source=\"staticresource\" uniqueid=\"sk-R5_3r-3915\" resource=\"EndOfFlowIcons\" path=\"folders_icon_21px.png\" datasource=\"salesforce\" behavior=\"none\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles><renderconditions logictype=\"and\"/></image></components></division><division behavior=\"specified\" verticalalign=\"top\" width=\"90%\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"UserSelections\" buttonposition=\"\" uniqueid=\"multiCompanyFieldEditor\" mode=\"edit\" layout=\"above\"><columns layoutmode=\"fixed\"><column width=\"100%\" cssclass=\"needPlaceholder\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\" cssclass=\"needPlaceholder\"><fields><field id=\"MultiCoName__ui\" valuehalign=\"\" type=\"\" required=\"false\"><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions/><label>Order Another</label></field></fields></section></sections><renderconditions logictype=\"and\"/></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><template multiple=\"false\" uniqueid=\"sk-1iAYab-1844\" allowhtml=\"true\" model=\"UserSelections\"><contents>&lt;div style=\"color:red;font-size:12px\"&gt;Multi-CoName Missing&lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"false\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"MultiCoName_Missing\" value=\"true\"/></renderconditions></template><wrapper uniqueid=\"sk-2W8M70-938\"><components><pagetitle uniqueid=\"sk-2makQy-1097\" model=\"Catalog\" cssclass=\"centerTitle\"><actions><action type=\"multi\" label=\"Place Next Order\"><actions><action type=\"custom\" snippet=\"validateMultiCompName\"/></actions></action></actions></pagetitle></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"18px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"/></grid></components><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem type=\"border\" padding=\"top,bottom,left,\"><styles><styleitem property=\"padding-left\" value=\"29px\"/><styleitem property=\"padding-top\" value=\"14px\"/><styleitem property=\"padding-bottom\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/><styleitem property=\"margin\" value=\"auto\"/><styleitem property=\"width\" value=\"30%\"/><styleitem property=\"text-align\" value=\"center\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"segment\" value=\"YES\" userinfotype=\"userid\" sourceparam=\"bulkSegment\" enclosevalueinquotes=\"true\"/></renderconditions></wrapper><wrapper uniqueid=\"viewAccountBtnWrapper\" cssclass=\"\"><components><pagetitle uniqueid=\"sk-LhnvQ-1364\" model=\"NewAccount\" cssclass=\"centerTitle\"><actions><action type=\"multi\" label=\"View Account\" snippet=\"PreventExitDialog\"><actions><action type=\"custom\" snippet=\"PreventExitDialog\"/><action type=\"custom\" snippet=\"accountRedirectAndCloseTab\"/></actions><hotkeys/><renderconditions logictype=\"and\"/><enableconditions logictype=\"and\"/></action></actions><renderconditions logictype=\"and\"/><conditions/></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,top,\"><styles><styleitem property=\"padding-top\" value=\"40px\"/><styleitem property=\"padding-bottom\" value=\"11px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"segment\" value=\"NO\" sourceparam=\"bulkSegment\" enclosevalueinquotes=\"true\"/></renderconditions></wrapper></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"all\"><styles><styleitem property=\"padding\" value=\"16px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"custom\"><styles><styleitem property=\"min-height\" value=\"500px\"/><styleitem property=\"max-height\" value=\"700px\"/><styleitem property=\"overflow-y\" value=\"auto\"/></styles></styleitem></styles><renderconditions logictype=\"and\"/></wrapper></components></division><division behavior=\"specified\" verticalalign=\"top\" width=\"20%\"><components><wrapper uniqueid=\"sk-LdgXZ-905\"><components><wrapper uniqueid=\"sk-LfFg9-999\"><components><template multiple=\"false\" uniqueid=\"sk-LfI7W-1007\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:24px\"&gt;What's Next?&lt;/div&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-LfTrG-1028\"><components><grid uniqueid=\"sk-Lrj1t-2878\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\"><components><image source=\"staticresource\" uniqueid=\"sk-Lfe-C-1055\" resource=\"EndOfFlowIcons\" path=\"checkmark_icon_21px.png\" datasource=\"salesforce\" behavior=\"none\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"sk-LhymA-1403\" model=\"NewAccount\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:14px; color: #BABEC5\"&gt;Account Created&lt;/div&gt;\n{{#$Param.isInConsole}}&lt;a class=\"navigatePrimary\" href=\"#\" onclick=\"skuid.snippet.getSnippet('accountRedirect')('/{{{Id}}}','{{{Name}}}');\" style=\"cursor:pointer;\"&gt;{{/$Param.isInConsole}}\n{{^$Param.isInConsole}}&lt;a class=\"navigatePrimary\" href=\"/{{{Id}}}\" style=\"cursor:pointer;\"&gt;{{/$Param.isInConsole}}\n    &lt;div style=\"font-size:14px; font-weight:bold; color:#0077C5\"&gt;{{{Name}}}&lt;/div&gt;\n&lt;/a&gt;</contents><renderconditions logictype=\"and\"/></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid><wrapper uniqueid=\"sk-NfGLo-955\"><components><template multiple=\"false\" uniqueid=\"sk-LlUZF-886\" allowhtml=\"true\"><contents>&lt;hr style=\"border-top: 1px solid; border-color: #BABEC5\"/&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,top,\"><styles><styleitem property=\"padding-top\" value=\"19px\"/><styleitem property=\"padding-bottom\" value=\"19px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><grid uniqueid=\"sk-Lrr9o-2910\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\"><components><image source=\"staticresource\" uniqueid=\"sk-LlcYx-902\" resource=\"EndOfFlowIcons\" path=\"checkmark_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"sk-Nc6Kx-894\" model=\"NewOppty\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:14px; color: #BABEC5\"&gt;Opportunity Created&lt;/div&gt;\n{{#$Param.isInConsole}}&lt;a class=\"navigatePrimary\" href=\"#\" onclick=\"skuid.snippet.getSnippet('careConsoleRedirection')('/{{{Id}}}','{{{Name}}}',true);\" style=\"cursor:pointer;\"&gt;{{/$Param.isInConsole}}\n{{^$Param.isInConsole}}&lt;a class=\"navigatePrimary\" href=\"/{{{Id}}}\" style=\"cursor:pointer;\"&gt;{{/$Param.isInConsole}}\n    &lt;div style=\"font-size:14px; font-weight:bold; color:#0077C5\"&gt;{{Id}}&lt;/div&gt;\n&lt;/a&gt;</contents><renderconditions logictype=\"and\"/></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid><wrapper uniqueid=\"sk-NfLZx-978\"><components><template multiple=\"false\" uniqueid=\"sk-NfMPE-986\" allowhtml=\"true\"><contents>&lt;hr style=\"border-top: 1px solid; border-color: #BABEC5\"/&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,top,\"><styles><styleitem property=\"padding-top\" value=\"19px\"/><styleitem property=\"padding-bottom\" value=\"19px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><grid uniqueid=\"sk-LsqxV-2989\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\"><components><image source=\"staticresource\" uniqueid=\"sk-NeWz1-818\" resource=\"EndOfFlowIcons\" path=\"Information_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"sk-Lt0-x-3020\" model=\"SelectedRow\" allowhtml=\"true\"><contents>&lt;div style=\"font-weight: bold\"&gt;After Free 30-day Trial&lt;/div&gt;\n&lt;div style=\"padding-bottom: 10px\"&gt;Immediately after trial, you may subscribe at this rate:&lt;/div&gt;\n&lt;div style=\"font-weight: bold; font-size: 18px\"&gt;QBO {{shortQBOProductName}}&lt;/div&gt;\n{{#shortPayrollProductName}}&lt;div style=\"font-weight: bold; font-size: 14px\"&gt;w/ {{shortPayrollProductName}}&lt;/div&gt;{{/shortPayrollProductName}}</contents></template><wrapper uniqueid=\"sk-NgRUK-1074\"><components><template multiple=\"false\" uniqueid=\"sk-NgPoJ-1068\" allowhtml=\"true\" model=\"SelectedRow\"><contents>{{#monthlyannual__ui}}{{#discountedPrice}}&lt;div style=\"font-size: 18; font-weight: bold\"&gt;{{currencyCode}} {{discountedPrice}}&lt;/div&gt;{{/discountedPrice}}{{/monthlyannual__ui}}\n{{#monthlyannual__ui}}{{#discountedPrice}}&lt;div style=\"font-size: 12px; color: #6C6C6C; text-decoration: line-through\"&gt;{{currencyCode}} {{listPrice}}/month&lt;/div&gt;{{/discountedPrice}}{{/monthlyannual__ui}}\n{{#monthlyannual__ui}}{{^discountedPrice}}&lt;div style=\"font-size: 18; font-weight: bold\"&gt;{{#listPrice}}QBO: {{currencyCode}} {{listPrice}}{{/listPrice}}&lt;/div&gt;{{/discountedPrice}}{{/monthlyannual__ui}}\n{{^monthlyannual__ui}}{{#annualDiscountedPrice}}&lt;div style=\"font-size: 18; font-weight: bold\"&gt;QBO: {{currencyCode}} {{annualDiscountedPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}{{/monthlyannual__ui}}\n{{^monthlyannual__ui}}{{#annualDiscountedPrice}}&lt;div style=\"font-size: 12px; color: #6C6C6C; text-decoration: line-through; color:DimGray\"&gt;{{currencyCode}} {{annualListPrice}}/year&lt;/div&gt;{{/annualDiscountedPrice}}{{/monthlyannual__ui}}\n{{^monthlyannual__ui}}{{^annualDiscountedPrice}}&lt;div style=\"font-size: 18; font-weight: bold\"&gt;{{#annualListPrice}}QBO: {{currencyCode}} {{annualListPrice}}{{/annualListPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}{{/monthlyannual__ui}}</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-NfVYC-1008\"><components><template multiple=\"false\" uniqueid=\"sk-NdYwP-1288\" allowhtml=\"true\" model=\"SelectedRow\"><contents>{{#discountDescription}}&lt;div&gt;&lt;span style=\"font-size: 14px\"&gt;DISCOUNT&lt;br&gt;{{discountDescription}}&lt;/span&gt;&lt;/div&gt;{{/discountDescription}}</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"8px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\"/></renderconditions></grid><wrapper uniqueid=\"additionalOpptyWrapper\"><components><grid uniqueid=\"nonBulkPricingOrderAnotherGrid\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\" cssclass=\"\"><components><image source=\"staticresource\" uniqueid=\"sk-R5_3r-3915\" resource=\"EndOfFlowIcons\" path=\"folders_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"UserSelections\" buttonposition=\"\" uniqueid=\"multiCompanyFieldEditor\" mode=\"edit\" layout=\"above\"><columns><column width=\"100%\" cssclass=\"needPlaceholder\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\" cssclass=\"needPlaceholder\"><fields><field id=\"MultiCoName__ui\" valuehalign=\"\" type=\"\" required=\"false\"><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions/><label>Order Another</label></field></fields></section></sections><renderconditions logictype=\"and\"/></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><template multiple=\"false\" uniqueid=\"sk-1iAYab-1844\" allowhtml=\"true\" model=\"UserSelections\"><contents>&lt;div style=\"color:red;font-size:12px\"&gt;Multi-CoName Missing&lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"false\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"MultiCoName_Missing\" value=\"true\"/></renderconditions></template><template multiple=\"false\" uniqueid=\"sk-R66Dj-3938\" model=\"UserSelections\" allowhtml=\"true\"><renderconditions logictype=\"and\"/><contents>&lt;a href=\"javascript:skuid.events.publish('orderAnother', ['OrderAnother']);\" onclick=\"window.onbeforeunload = null;\"&gt;\n&lt;span style=\"font-size:14px; font-weight: bold; color: #0077C5\"&gt;Place Next Order&lt;/span&gt;\n&lt;/a&gt;\n</contents></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"segment\" value=\"NO\" sourceparam=\"bulkSegment\" enclosevalueinquotes=\"true\"/></renderconditions></grid><wrapper uniqueid=\"sk-R6amc-4014\" cssclass=\"\"><components><template multiple=\"false\" uniqueid=\"sk-R6UzH-3999\" allowhtml=\"true\"><contents>&lt;hr style=\"border-top: 1px solid; border-color: #cdcdcd\"/&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,top,\"><styles><styleitem property=\"padding-top\" value=\"10px\"/><styleitem property=\"padding-bottom\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"segment\" value=\"NO\" sourceparam=\"bulkSegment\" enclosevalueinquotes=\"true\"/></renderconditions></wrapper><grid uniqueid=\"sk-R6ehc-4035\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\"><components><image source=\"staticresource\" uniqueid=\"sk-R7bSS-4599\" resource=\"EndOfFlowIcons\" path=\"crown_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"sk-R6hbp-4045\" allowhtml=\"true\" model=\"UserSelections\"><contents>{{#$Param.isInConsole}}&lt;a href=\"#\" onclick=\"skuid.snippet.getSnippet('createAdditionalOpportunity')();\" style=\"cursor:pointer;\"&gt;{{/$Param.isInConsole}}\n{{^$Param.isInConsole}}&lt;a href=\"/006/e?retURL=%2Fapex%2FAccountDetailOverride%3Fid%3D{{{AccountID__ui}}}&amp;accid={{{AccountID__ui}}}\" onclick=\"window.onbeforeunload = null;\"&gt;{{/$Param.isInConsole}}\n&lt;span style=\"font-size:14px; font-weight: bold; color: #0077C5\"&gt;Create Additional&lt;br&gt;Opportunity&lt;/span&gt;\n&lt;/a&gt;\n&lt;div style=\"font-size:12px; font-weight:normal; color:gray\"&gt;(Add-on Services)&lt;/div&gt;</contents></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"padding-top\" value=\"12px\"/></styles></grid></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\"/></renderconditions></wrapper></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"\"><styles><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components><styles><styleitem type=\"background\" bgtype=\"color\"><styles><styleitem property=\"background-color\" value=\"#ebf9ff\"/></styles></styleitem><styleitem type=\"border\" padding=\"right,left,top,\"><styles><styleitem property=\"padding-left\" value=\"19px\"/><styleitem property=\"padding-top\" value=\"13px\"/><styleitem property=\"padding-right\" value=\"19px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"custom\"><styles><styleitem property=\"min-height\" value=\"500px\"/><styleitem property=\"max-height\" value=\"700px\"/><styleitem property=\"overflow-y\" value=\"auto\"/></styles></styleitem></styles><renderconditions logictype=\"and\"/></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"height\" value=\"650px\"/></styles></grid></components><actions/></step></steps><renderconditions logictype=\"and\"/></wizard></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" margin=\"bottom,right,left,top,\"><styles><styleitem property=\"margin-left\" value=\"19px\"/><styleitem property=\"margin-top\" value=\"18px\"/><styleitem property=\"margin-right\" value=\"19px\"/><styleitem property=\"margin-bottom\" value=\"18px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components></division><division behavior=\"specified\" verticalalign=\"top\" width=\"240px\" uniqueid=\"detailDiv\"><components><wrapper uniqueid=\"DetailPanel\"><components><wrapper uniqueid=\"sk-3kw4ML-1093\"><components><template multiple=\"false\" uniqueid=\"sk-3kw64Z-1100\" allowhtml=\"true\" model=\"SelectedRow\"><contents>&lt;div style=\"font-weight: bold; font-size: 18px\"&gt;Your purchase includes:&lt;/div&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"18px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-3kwkfn-1153\"><components><template multiple=\"false\" uniqueid=\"sk-3kwq2g-1169\" model=\"SelectedRow\" allowhtml=\"true\"><contents>&lt;div style=\"font-size: 14px\"&gt;{{offerType__ui}}&lt;/div&gt;\n&lt;div style=\"font-weight: bold; font-size: 18px\"&gt;QBO {{shortQBOProductName}}&lt;/div&gt;\n{{#shortPayrollProductName}}&lt;div style=\"font-weight: bold; font-size: 14px\"&gt;w/ {{shortPayrollProductName}}&lt;/div&gt;{{/shortPayrollProductName}}</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"9px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-3l0pSf-2382\"><components><template multiple=\"false\" uniqueid=\"sk-3l0ubB-2403\" model=\"SelectedRow\" allowhtml=\"true\"><contents>{{#monthlyannual__ui}}{{#discountedPrice}}&lt;div style=\"font-size: 14px; font-weight: bold\"&gt;QBO: {{currencyCode}} {{discountedPrice}}&lt;/div&gt;{{/discountedPrice}}{{/monthlyannual__ui}}\n{{#monthlyannual__ui}}{{#discountedPrice}}&lt;div style=\"font-size: 12px; color: #6C6C6C; text-decoration: line-through\"&gt;{{currencyCode}} {{listPrice}}/month&lt;/div&gt;{{/discountedPrice}}{{/monthlyannual__ui}}\n{{#monthlyannual__ui}}{{^discountedPrice}}&lt;div style=\"font-size: 14px; font-weight: bold\"&gt;{{#listPrice}}QBO: {{currencyCode}} {{listPrice}}{{/listPrice}}&lt;/div&gt;{{/discountedPrice}}{{/monthlyannual__ui}}\n{{^monthlyannual__ui}}{{#annualDiscountedPrice}}&lt;div style=\"font-size: 14px; font-weight: bold\"&gt;QBO: {{currencyCode}} {{annualDiscountedPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}{{/monthlyannual__ui}}\n{{^monthlyannual__ui}}{{#annualDiscountedPrice}}&lt;div style=\"font-size: 12px; color: #6C6C6C; text-decoration: line-through; color:DimGray\"&gt;{{currencyCode}} {{annualListPrice}}/year&lt;/div&gt;{{/annualDiscountedPrice}}{{/monthlyannual__ui}}\n{{^monthlyannual__ui}}{{^annualDiscountedPrice}}&lt;div style=\"font-size: 14px; font-weight: bold\"&gt;{{#annualListPrice}}QBO: {{currencyCode}} {{annualListPrice}}{{/annualListPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}{{/monthlyannual__ui}}\n{{#discountDescription}}&lt;div style=\"font-size: 12px; color: #6C6C6C; color:DimGray\"&gt;{{discountDescription}}&lt;/div&gt;{{/discountDescription}}</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"12px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-3ZVz3s-2340\"><components><template multiple=\"false\" uniqueid=\"sk-3ZOlLo-1559\" model=\"SelectedRow\" allowhtml=\"true\"><contents>{{#payrollDiscountedPrice}}&lt;div style=\"font-size: 14px; font-weight: bold\"&gt;Payroll: {{currencyCode}} {{payrollDiscountedPrice}}&lt;/div&gt;{{/payrollDiscountedPrice}}\n{{#payrollDiscountedPrice}}&lt;div style=\"font-size: 12px; color: #6C6C6C; text-decoration: line-through\"&gt;{{currencyCode}} {{payrollListPrice}}/month&lt;/div&gt;{{/payrollDiscountedPrice}}\n{{#payrollDiscountedPrice}}{{#perEmployeeFee__ui}}&lt;div style=\"font-size: 12px; color: #6C6C6C\"&gt;+ {{currencyCode}} {{perEmployeeFee__ui}}/employee/month&lt;/div&gt;{{/perEmployeeFee__ui}}{{/payrollDiscountedPrice}}\n{{^payrollDiscountedPrice}}&lt;div style=\"font-size: 14px; font-weight: bold\"&gt;{{#payrollListPrice}}Payroll: {{currencyCode}} {{payrollListPrice}}{{/payrollListPrice}}&lt;/div&gt;{{/payrollDiscountedPrice}}\n{{#payrollDiscountDescription}}&lt;div style=\"font-size: 12px; color: #6C6C6C; color:DimGray\"&gt;{{payrollDiscountDescription}}&lt;/div&gt;{{/payrollDiscountDescription}}</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"12px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-3l5SAi-3181\"><components><template multiple=\"false\" uniqueid=\"sk-3l5Vr_-3197\" model=\"SelectedRow\" allowhtml=\"true\" cssclass=\"displayNone\"><contents>{{#discountTime__ui}}&lt;div&gt;&lt;span style=\"font-size: 14px; color:#2CA01C; font-weight:bold\"&gt;SAVE {{discountAmount}} &lt;/span&gt;&lt;span style=\"font-size: 14px\"&gt; for {{discountTime__ui}}&lt;/span&gt;&lt;/div&gt;{{/discountTime__ui}}</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" margin=\"bottom,\" padding=\"\"><styles><styleitem property=\"margin-bottom\" value=\"0px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper><wrapper uniqueid=\"sk-3ZV_wN-2350\"><components><pagetitle model=\"SelectedRow\" uniqueid=\"sendQuoteComponent\"><actions><action type=\"multi\" label=\"Send Quote\" uniqueid=\"sendQuoteBtn\" cssclass=\"grayOut\"><renderconditions logictype=\"and\"/><enableconditions logictype=\"and\"/><actions><action type=\"custom\" snippet=\"sendQuote\"/></actions><hotkeys/></action></actions><renderconditions logictype=\"and\"/></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" margin=\"bottom,top,\"><styles><styleitem property=\"margin-top\" value=\"24px\"/><styleitem property=\"margin-bottom\" value=\"17px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"Catalog\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" sourceparam=\"HIDE\" value=\"HIDE\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-3ZW0Qm-2358\"><components><template multiple=\"false\" uniqueid=\"sk-1NqsTf-284\" allowhtml=\"true\" cssclass=\"OpptyEditorDetails\"><contents>&lt;hr style=\"border: 1px dashed; color: #8d9096\"/&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" margin=\"bottom,\" padding=\"right,bottom,\"><styles><styleitem property=\"padding-right\" value=\"5px\"/><styleitem property=\"padding-bottom\" value=\"20px\"/><styleitem property=\"margin-bottom\" value=\"0px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper><wrapper uniqueid=\"sk-3l5oKm-3233\"><components><template multiple=\"false\" uniqueid=\"sk-8BTKV-5688\" model=\"NewAccount\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:14px; color: #8d9096\"&gt;ACCOUNT CREATED&lt;/div&gt;\n\n    &lt;div style=\"font-size:14px; font-weight:bold; color:#0077C5\"&gt;{{{Name}}}&lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step3\"/></renderconditions></template><template multiple=\"false\" uniqueid=\"sk-2diy18-830\" model=\"NewAccount\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:14px; color: #8d9096\"&gt;ACCOUNT CREATED&lt;/div&gt;\n{{#$Param.isInConsole}}&lt;a class=\"navigatePrimary\" href=\"#\" onclick=\"skuid.snippet.getSnippet('accountRedirect')('/{{{Id}}}','{{{Name}}}');\" style=\"cursor:pointer;\"&gt;{{/$Param.isInConsole}}\n{{^$Param.isInConsole}}&lt;a class=\"navigatePrimary\" href=\"/{{{Id}}}\" style=\"cursor:pointer;\"&gt;{{/$Param.isInConsole}}\n\n    &lt;div style=\"font-size:14px; font-weight:bold; color:#0077C5\"&gt;{{{Name}}}&lt;/div&gt;\n&lt;/a&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step2\"/></renderconditions></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"20px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper><wrapper uniqueid=\"sk-3l6R2M-3390\"><components><template multiple=\"false\" uniqueid=\"sk-8QmuI-763\" model=\"NewOppty\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:14px; color: #8d9096\"&gt;OPPORTUNITY CREATED&lt;/div&gt;\n\n    &lt;div style=\"font-size:14px; font-weight:bold; color:#0077C5\"&gt;{{Id}}&lt;/div&gt;\n</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper><wrapper uniqueid=\"sk-CfpAj-842\"><components><template multiple=\"false\" uniqueid=\"sk-CfvaN-865\" allowhtml=\"true\"><contents>&lt;hr style=\"border: 1px dashed; color: #8d9096\"/&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"right,top,bottom,\" margin=\"top,\"><styles><styleitem property=\"padding-top\" value=\"17px\"/><styleitem property=\"padding-right\" value=\"5px\"/><styleitem property=\"padding-bottom\" value=\"17px\"/><styleitem property=\"margin-top\" value=\"0px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"blank\" operator=\"=\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"Temp_Pwd\" value=\"null\" enclosevalueinquotes=\"false\"/></renderconditions></wrapper><wrapper uniqueid=\"sk-Cf1UP-664\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"UserSelections\" buttonposition=\"\" uniqueid=\"sk-Xoi4d-1221\" mode=\"edit\" layout=\"above\"><columns layoutmode=\"fixed\"><column width=\"100%\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\"><fields><field id=\"SourceCode__ui\" valuehalign=\"\" type=\"\"><label>Source Code (TBT)</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions logictype=\"and\"/></field><field id=\"ClusterId_ui\" valuehalign=\"\" type=\"\"><label>Cluster Name</label><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions logictype=\"and\"/></field></fields></section></sections></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><template multiple=\"false\" uniqueid=\"sk-Cf7-R-685\" model=\"NewUser\" allowhtml=\"true\" cssclass=\"displayNone\"><contents>{{#Temp_Pwd}}&lt;div style=\"font-size:14px; color: #8d9096\"&gt;TEMPORARY QBO&lt;br&gt;\nCOMPANY PASSWORD&lt;/div&gt;{{/Temp_Pwd}}\n&lt;div style=\"font-style: normal; font-family:AvenirNextLTPro-Demi; font-size:18px\"&gt;{{Temp_Pwd}}&lt;/div&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step2\"/><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" sourceparam=\"isProduction\" value=\"NO\"/></renderconditions></wrapper></components><styles><styleitem type=\"background\" bgtype=\"color\"><styles><styleitem property=\"background-color\" value=\"#ebf9ff\"/></styles></styleitem><styleitem type=\"border\" padding=\"right,left,top,\"><styles><styleitem property=\"padding-left\" value=\"20px\"/><styleitem property=\"padding-top\" value=\"18px\"/><styleitem property=\"padding-right\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"custom\"><styles><styleitem property=\"min-height\" value=\"100vh\"/><styleitem property=\"max-height\" value=\"100vh\"/><styleitem property=\"overflow-y\" value=\"auto\"/></styles></styleitem></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"currentStep\" value=\"step4\"/></renderconditions></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid><pagetitle model=\"UserSelections\" uniqueid=\"sk-1iCzMM-2185\" cssclass=\"displayNone\"><maintitle><template>{{Name}}</template></maintitle><subtitle><template>{{Model.label}}</template></subtitle><actions><action type=\"multi\" label=\"Order Another\" uniqueid=\"orderAnother\"><actions><action type=\"custom\" snippet=\"anotherOrderRedirection\"/></actions></action></actions><renderconditions logictype=\"and\"/></pagetitle><pagetitle model=\"MonthlyAnnualSelection\" uniqueid=\"PageActions\" cssclass=\"displayNone\"><maintitle><template>{{Name}}</template></maintitle><subtitle><template>{{Model.label}}</template></subtitle><actions><action type=\"multi\" label=\"Exit Breadcrumb\" uniqueid=\"ExitBreadcrumb\"><actions><action type=\"blockUI\"/><action type=\"showPopup\"><popup title=\"\" width=\"308px\"><components><wrapper uniqueid=\"sk-3oN6Ah-1624\"><components><template multiple=\"false\" uniqueid=\"sk-3oFzZS-1214\" allowhtml=\"true\"><contents>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&lt;span style=\"color:#FF6A00; font-size: 4em\" class=\"nx-skootable-buttonicon sk-icon inline nx-skootable-buttonicon-visible fa-exclamation-circle\"&gt;&lt;/span&gt;&lt;/td&gt;\n        &lt;td&gt;Any data you have entered will not be saved.&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"\" margin=\"\" borders=\"bottom,\"><styles><styleitem property=\"border-bottom\" value=\"1px solid #dddddd\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-3oQ2w1-1814\"><components><pagetitle uniqueid=\"sk-8VCrn-1217\" model=\"UserSelections\" cssclass=\"centerButtonTitle\"><actions><action type=\"multi\" label=\"Cancel\" cssclass=\"leftButton whiteButton\"><actions><action type=\"closeAllPopups\"/></actions></action><action type=\"multi\" label=\"Continue\" cssclass=\"rightButton\"><actions><action type=\"redirect\" window=\"self\" url=\"{{exitLink__ui}}\"/><action type=\"custom\" snippet=\"PreventExitDialog\"/></actions></action></actions><renderconditions logictype=\"and\"/></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" margin=\"top,\"><styles><styleitem property=\"margin-top\" value=\"20px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper></components></popup></action><action type=\"unblockUI\"/></actions><renderconditions logictype=\"and\"/><enableconditions/><hotkeys/></action><action type=\"multi\" label=\"Exit Popup Account\" uniqueid=\"ExitButtonAccount\"><actions><action type=\"blockUI\"/><action type=\"showPopup\"><popup title=\"\" width=\"308px\"><components><wrapper uniqueid=\"sk-3oN6Ah-1624\"><components><template multiple=\"false\" uniqueid=\"sk-3oFzZS-1214\" allowhtml=\"true\"><contents>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&lt;span style=\"color:#FF6A00; font-size: 4em\" class=\"nx-skootable-buttonicon sk-icon inline nx-skootable-buttonicon-visible fa-exclamation-circle\"&gt;&lt;/span&gt;&lt;/td&gt;\n        &lt;td&gt;Any data you have entered will not be saved.&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"\" margin=\"\" borders=\"bottom,\"><styles><styleitem property=\"border-bottom\" value=\"1px solid #dddddd\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-3oQ2w1-1814\"><components><pagetitle uniqueid=\"sk-8VCrn-1217\" model=\"NewAccount\" cssclass=\"centerButtonTitle\"><actions><action type=\"multi\" label=\"Cancel\" cssclass=\"leftButton whiteButton\"><actions><action type=\"closeAllPopups\"/></actions></action><action type=\"multi\" label=\"Continue\" cssclass=\"rightButton\"><actions><action type=\"redirect\" window=\"self\" url=\"/{{Id}}\"/><action type=\"custom\" snippet=\"PreventExitDialog\"/></actions></action></actions><renderconditions logictype=\"and\"/></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" margin=\"top,\"><styles><styleitem property=\"margin-top\" value=\"20px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper></components></popup></action><action type=\"unblockUI\"/></actions><hotkeys/><renderconditions logictype=\"and\"/><enableconditions/></action><action type=\"multi\" label=\"Exit Popup Opp\" uniqueid=\"ExitButtonOpp\"><actions><action type=\"blockUI\"/><action type=\"showPopup\"><popup title=\"\" width=\"308px\"><components><wrapper uniqueid=\"sk-3oN6Ah-1625\"><components><template multiple=\"false\" uniqueid=\"sk-3oFzZS-1215\" allowhtml=\"true\"><contents>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&lt;span style=\"color:#FF6A00; font-size: 4em\" class=\"nx-skootable-buttonicon sk-icon inline nx-skootable-buttonicon-visible fa-exclamation-circle\"&gt;&lt;/span&gt;&lt;/td&gt;\n        &lt;td&gt;Any data you have entered will not be saved.&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"\" margin=\"\" borders=\"bottom,\"><styles><styleitem property=\"border-bottom\" value=\"1px solid #dddddd\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-3oQ2w1-1815\"><components><pagetitle uniqueid=\"sk-8YVpD-1471\" model=\"NewOppty\" cssclass=\"centerButtonTitle\"><actions><action type=\"multi\" label=\"Cancel\" cssclass=\"leftButton whiteButton\"><actions><action type=\"closeAllPopups\"/></actions></action><action type=\"multi\" label=\"Continue\" cssclass=\"rightButton\" window=\"self\" url=\"/{{Id}}\"><actions><action type=\"redirect\" url=\"/{{Id}}\" window=\"self\"/><action type=\"custom\" snippet=\"PreventExitDialog\"/></actions></action></actions><renderconditions logictype=\"and\"/></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" margin=\"top,\"><styles><styleitem property=\"margin-top\" value=\"20px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components><afterclose/></popup></action><action type=\"unblockUI\"/></actions><renderconditions logictype=\"and\"/><enableconditions/></action><action type=\"multi\" label=\"Order Popup\" uniqueid=\"orderPopup-change\"><actions><popup title=\"New Popup\" width=\"70%\"><components><panelset type=\"standard\" uniqueid=\"sk-GQ_FY-2057\" scroll=\"\"><panels><panel type=\"right\" width=\"500px\"><components/></panel><panel><components><image source=\"staticresource\" uniqueid=\"sk-GSGM--2176\" resource=\"EndOfFlowIcons\" path=\"checkmark_icon_132px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"200px\"/></styles></styleitem><styleitem type=\"border\" padding=\"all\"><styles><styleitem property=\"padding\" value=\"20px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem property=\"margin\" value=\"0 auto\"/></styles></image><template multiple=\"false\" uniqueid=\"sk-GRJ3D-2086\" allowhtml=\"true\" model=\"NewUser\"><contents>&lt;div style=\"text-align: center\"&gt;\n&lt;div style=\"font-size: 24px; font-weight: bold\"&gt;Order Complete&lt;/div&gt;&lt;br&gt;\n&lt;div style=\"font-size: 14px\"&gt;COMPANY ID:  &lt;span style=\"font-weight: bold\"&gt;{{CompanyName_ui}}&lt;/span&gt;&lt;/div&gt;\n&lt;div style=\"font-size: 14px\"&gt;USERID:  &lt;span style=\"font-weight: bold\"&gt;{{UserID_ui}}&lt;/span&gt;&lt;/div&gt;\n&lt;div style=\"font-size: 14px\"&gt;TEMP PW:  &lt;span style=\"font-weight: bold\"&gt;{{Temp_Pwd}}&lt;/span&gt;&lt;/div&gt;\n&lt;/div&gt;</contents></template><pagetitle model=\"NewAccount\" uniqueid=\"sk-GWcKp-2586\"><actions><action type=\"multi\" label=\"View Account\"/></actions></pagetitle></components></panel></panels></panelset></components></popup><action type=\"showPopup\"><popup title=\"Order Complete\" width=\"700px\"><components><grid uniqueid=\"orderPopupGrid\"><divisions><division behavior=\"flex\" verticalalign=\"top\" ratio=\"1\" minwidth=\"100px\"><components><wrapper uniqueid=\"sk-NXu1k-740\"><components><image source=\"staticresource\" uniqueid=\"sk-GSGM--2176\" resource=\"EndOfFlowIcons\" path=\"checkmark_icon_132px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"160px\"/></styles></styleitem><styleitem type=\"border\" padding=\"all\"><styles><styleitem property=\"padding\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem property=\"margin\" value=\"0 auto\"/></styles></image><template multiple=\"false\" uniqueid=\"sk-GRJ3D-2086\" allowhtml=\"true\" model=\"NewUser\"><contents>&lt;div style=\"text-align: center\"&gt;\n&lt;div style=\"font-size: 24px; font-weight: bold; padding-bottom: 12px\"&gt;Order Complete&lt;/div&gt;\n&lt;div style=\"font-size: 14px; padding-bottom: 10px\"&gt;COMPANY ID:  &lt;span style=\"font-weight: bold; font-style: normal\"&gt;{{createCompanyID_ui}}&lt;/span&gt;&lt;/div&gt;\n&lt;div style=\"font-size: 14px; padding-bottom: 10px\"&gt;USERID:  &lt;span style=\"font-weight: bold; font-style: normal\"&gt;{{UserID_ui}}&lt;/span&gt;&lt;/div&gt;\n&lt;/div&gt;</contents></template><template multiple=\"false\" uniqueid=\"sk-sN1KG-785\" model=\"NewContact\" allowhtml=\"true\"><contents>&lt;div style=\"text-align: center\"&gt;\n&lt;div style=\"font-size: 14px; color:black; padding-bottom: 8px\"&gt;PW Setup Email Sent: &lt;span style=\"font-weight:bold; color:black; font-style: normal\"&gt;{{{Email}}}&lt;/span&gt;&lt;/div&gt;\n&lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"NewUser\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"NewOrExisting__ui\" value=\"new\"/></renderconditions></template><wrapper uniqueid=\"sk-2MSH8C-1056\"><components><grid uniqueid=\"orderAnotherGrid\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\" cssclass=\"displayNone\"><components><image source=\"staticresource\" uniqueid=\"sk-R5_3r-3915\" resource=\"EndOfFlowIcons\" path=\"folders_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"UserSelections\" buttonposition=\"\" uniqueid=\"multiCompanyFieldEditor\" mode=\"edit\" layout=\"above\"><columns><column width=\"100%\" cssclass=\"needPlaceholder\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\" cssclass=\"needPlaceholder\"><fields><field id=\"MultiCoName__ui\" valuehalign=\"\" type=\"\" required=\"false\"><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions/><label>Order Another</label></field></fields></section></sections><renderconditions logictype=\"and\"/></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><template multiple=\"false\" uniqueid=\"sk-1iAYab-1844\" allowhtml=\"true\" model=\"UserSelections\"><contents>&lt;div style=\"color:red;font-size:12px\"&gt;Multi-CoName Missing&lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"false\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"MultiCoName_Missing\" value=\"true\"/></renderconditions></template></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\" cssclass=\"pushDown\"><components><wrapper uniqueid=\"sk-2W8M70-938\"><components><pagetitle uniqueid=\"sk-2makQy-1097\" model=\"Catalog\" cssclass=\"centerTitle\"><actions><action type=\"multi\" label=\"Place Next Order\"><actions><action type=\"custom\" snippet=\"validateMultiCompName\"/></actions></action></actions></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"18px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"/></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"/></grid></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,bottom,left,\"><styles><styleitem property=\"padding-left\" value=\"29px\"/><styleitem property=\"padding-top\" value=\"14px\"/><styleitem property=\"padding-bottom\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/><styleitem property=\"margin\" value=\"auto\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"segment\" value=\"YES\" userinfotype=\"userid\" sourceparam=\"bulkSegment\" enclosevalueinquotes=\"true\"/></renderconditions></wrapper><wrapper uniqueid=\"viewAccountBtnWrapper\" cssclass=\"\"><components><pagetitle uniqueid=\"sk-LhnvQ-1364\" model=\"NewAccount\" cssclass=\"centerTitle\"><actions><action type=\"multi\" label=\"View Account\"><actions><action type=\"redirect\" window=\"self\" url=\"/{{{Id}}}\"/><action type=\"custom\" snippet=\"PreventExitDialog\"/></actions><hotkeys/><renderconditions logictype=\"and\"/><enableconditions/></action></actions><renderconditions logictype=\"and\"/><conditions/></pagetitle></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,top,\"><styles><styleitem property=\"padding-top\" value=\"40px\"/><styleitem property=\"padding-bottom\" value=\"11px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"segment\" value=\"NO\" sourceparam=\"bulkSegment\" enclosevalueinquotes=\"true\"/></renderconditions></wrapper></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"all\"><styles><styleitem property=\"padding\" value=\"16px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"custom\"><styles><styleitem property=\"min-height\" value=\"500px\"/><styleitem property=\"max-height\" value=\"700px\"/><styleitem property=\"overflow-y\" value=\"auto\"/></styles></styleitem></styles><renderconditions logictype=\"and\"/></wrapper></components></division><division behavior=\"specified\" verticalalign=\"top\" width=\"40%\"><components><wrapper uniqueid=\"sk-LdgXZ-905\"><components><wrapper uniqueid=\"sk-LfFg9-999\"><components><template multiple=\"false\" uniqueid=\"sk-LfI7W-1007\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:24px\"&gt;What's Next?&lt;/div&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,\"><styles><styleitem property=\"padding-bottom\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-LfTrG-1028\"><components><grid uniqueid=\"sk-Lrj1t-2878\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\"><components><image source=\"staticresource\" uniqueid=\"sk-Lfe-C-1055\" resource=\"EndOfFlowIcons\" path=\"checkmark_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"sk-LhymA-1403\" model=\"NewAccount\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:14px; color: #BABEC5\"&gt;Account Created&lt;/div&gt;\n&lt;a href=\"/{{{Id}}}\" onclick=\"window.onbeforeunload = null;\"&gt;\n    &lt;div style=\"font-size:14px; font-weight:bold; color:#0077C5\"&gt;{{{Name}}}&lt;/div&gt;\n&lt;/a&gt;</contents><renderconditions logictype=\"and\"/></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid><wrapper uniqueid=\"sk-NfGLo-955\"><components><template multiple=\"false\" uniqueid=\"sk-LlUZF-886\" allowhtml=\"true\"><contents>&lt;hr style=\"border-top: 1px solid; border-color: #BABEC5\"/&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,top,\"><styles><styleitem property=\"padding-top\" value=\"19px\"/><styleitem property=\"padding-bottom\" value=\"19px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><grid uniqueid=\"sk-Lrr9o-2910\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\"><components><image source=\"staticresource\" uniqueid=\"sk-LlcYx-902\" resource=\"EndOfFlowIcons\" path=\"checkmark_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"sk-Nc6Kx-894\" model=\"NewOppty\" allowhtml=\"true\"><contents>&lt;div style=\"font-size:14px; color: #BABEC5\"&gt;Opportunity Created&lt;/div&gt;\n&lt;a href=\"/{{{Id}}}\" onclick=\"window.onbeforeunload = null;\"&gt;\n&lt;div style=\"font-size:14px; font-weight:bold; color:#0077C5\"&gt;{{Id}}&lt;/div&gt;\n&lt;/a&gt;</contents><renderconditions logictype=\"and\"/></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></grid><wrapper uniqueid=\"sk-NfLZx-978\"><components><template multiple=\"false\" uniqueid=\"sk-NfMPE-986\" allowhtml=\"true\"><contents>&lt;hr style=\"border-top: 1px solid; border-color: #BABEC5\"/&gt;</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,top,\"><styles><styleitem property=\"padding-top\" value=\"19px\"/><styleitem property=\"padding-bottom\" value=\"19px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><grid uniqueid=\"sk-LsqxV-2989\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\"><components><image source=\"staticresource\" uniqueid=\"sk-NeWz1-818\" resource=\"EndOfFlowIcons\" path=\"Information_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"sk-Lt0-x-3020\" model=\"SelectedRow\" allowhtml=\"true\"><contents>&lt;div style=\"font-weight: bold\"&gt;After Free 30-day Trial&lt;/div&gt;\n&lt;div style=\"padding-bottom: 10px\"&gt;Immediately after trial, you may subscribe at this rate:&lt;/div&gt;\n&lt;div style=\"font-weight: bold; font-size: 18px\"&gt;QBO {{shortQBOProductName}}&lt;/div&gt;\n{{#shortPayrollProductName}}&lt;div style=\"font-weight: bold; font-size: 14px\"&gt;w/ {{shortPayrollProductName}}&lt;/div&gt;{{/shortPayrollProductName}}</contents></template><wrapper uniqueid=\"sk-NgRUK-1074\"><components><template multiple=\"false\" uniqueid=\"sk-NgPoJ-1068\" allowhtml=\"true\" model=\"SelectedRow\"><contents>{{#monthlyannual__ui}}{{#discountedPrice}}&lt;div style=\"font-size: 18; font-weight: bold\"&gt;{{currencyCode}} {{discountedPrice}}&lt;/div&gt;{{/discountedPrice}}{{/monthlyannual__ui}}\n{{#monthlyannual__ui}}{{#discountedPrice}}&lt;div style=\"font-size: 12px; color: #6C6C6C; text-decoration: line-through\"&gt;{{currencyCode}} {{listPrice}}/month&lt;/div&gt;{{/discountedPrice}}{{/monthlyannual__ui}}\n{{#monthlyannual__ui}}{{^discountedPrice}}&lt;div style=\"font-size: 18; font-weight: bold\"&gt;{{#listPrice}}QBO: {{currencyCode}} {{listPrice}}{{/listPrice}}&lt;/div&gt;{{/discountedPrice}}{{/monthlyannual__ui}}\n{{^monthlyannual__ui}}{{#annualDiscountedPrice}}&lt;div style=\"font-size: 18; font-weight: bold\"&gt;QBO: {{currencyCode}} {{annualDiscountedPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}{{/monthlyannual__ui}}\n{{^monthlyannual__ui}}{{#annualDiscountedPrice}}&lt;div style=\"font-size: 12px; color: #6C6C6C; text-decoration: line-through; color:DimGray\"&gt;{{currencyCode}} {{annualListPrice}}/year&lt;/div&gt;{{/annualDiscountedPrice}}{{/monthlyannual__ui}}\n{{^monthlyannual__ui}}{{^annualDiscountedPrice}}&lt;div style=\"font-size: 18; font-weight: bold\"&gt;{{#annualListPrice}}QBO: {{currencyCode}} {{annualListPrice}}{{/annualListPrice}}&lt;/div&gt;{{/annualDiscountedPrice}}{{/monthlyannual__ui}}</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper><wrapper uniqueid=\"sk-NfVYC-1008\"><components><template multiple=\"false\" uniqueid=\"sk-NdYwP-1288\" allowhtml=\"true\" model=\"SelectedRow\"><contents>{{#discountDescription}}&lt;div&gt;&lt;span style=\"font-size: 14px\"&gt;DISCOUNT&lt;br&gt;{{discountDescription}}&lt;/span&gt;&lt;/div&gt;{{/discountDescription}}</contents></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"top,\"><styles><styleitem property=\"padding-top\" value=\"8px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\"/></renderconditions></grid><wrapper uniqueid=\"additionalOpptyWrapper\"><components><grid uniqueid=\"nonBulkPricingOrderAnotherGrid\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\" cssclass=\"\"><components><image source=\"staticresource\" uniqueid=\"sk-R5_3r-3915\" resource=\"EndOfFlowIcons\" path=\"folders_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><basicfieldeditor showheader=\"true\" showsavecancel=\"false\" showerrorsinline=\"true\" model=\"UserSelections\" buttonposition=\"\" uniqueid=\"multiCompanyFieldEditor\" mode=\"edit\" layout=\"above\"><columns><column width=\"100%\" cssclass=\"needPlaceholder\"><sections><section title=\"Section A\" collapsible=\"no\" showheader=\"false\" cssclass=\"needPlaceholder\"><fields><field id=\"MultiCoName__ui\" valuehalign=\"\" type=\"\" required=\"false\"><renderconditions logictype=\"and\" onhidedatabehavior=\"keep\"/><enableconditions/><label>Order Another</label></field></fields></section></sections><renderconditions logictype=\"and\"/></column></columns><renderconditions logictype=\"and\"/></basicfieldeditor><template multiple=\"false\" uniqueid=\"sk-1iAYab-1844\" allowhtml=\"true\" model=\"UserSelections\"><contents>&lt;div style=\"color:red;font-size:12px\"&gt;Multi-CoName Missing&lt;/div&gt;</contents><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" enclosevalueinquotes=\"false\" fieldmodel=\"UserSelections\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"MultiCoName_Missing\" value=\"true\"/></renderconditions></template><template multiple=\"false\" uniqueid=\"sk-R66Dj-3938\" model=\"UserSelections\" allowhtml=\"true\"><renderconditions logictype=\"and\"/><contents>&lt;a href=\"javascript:skuid.events.publish('orderAnother', ['OrderAnother']);\" onclick=\"window.onbeforeunload = null;\"&gt;\n&lt;span style=\"font-size:14px; font-weight: bold; color: #0077C5\"&gt;Place Next Order&lt;/span&gt;\n&lt;/a&gt;\n</contents></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"segment\" value=\"NO\" sourceparam=\"bulkSegment\" enclosevalueinquotes=\"true\"/></renderconditions></grid><wrapper uniqueid=\"sk-R6amc-4014\" cssclass=\"\"><components><template multiple=\"false\" uniqueid=\"sk-R6UzH-3999\" allowhtml=\"true\"><contents>&lt;hr style=\"border-top: 1px solid; border-color: #cdcdcd\"/&gt;</contents><renderconditions logictype=\"and\"/></template></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"bottom,top,\"><styles><styleitem property=\"padding-top\" value=\"10px\"/><styleitem property=\"padding-bottom\" value=\"10px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"=\" fieldmodel=\"SelectedRow\" sourcetype=\"param\" nosourcerowbehavior=\"deactivate\" field=\"segment\" value=\"NO\" sourceparam=\"bulkSegment\" enclosevalueinquotes=\"true\"/></renderconditions></wrapper><grid uniqueid=\"sk-R6ehc-4035\"><divisions><division behavior=\"specified\" verticalalign=\"top\" width=\"40px\"><components><image source=\"staticresource\" uniqueid=\"sk-R7bSS-4599\" resource=\"EndOfFlowIcons\" path=\"crown_icon_21px.png\"><styles><styleitem type=\"itemsize\" width=\"custom\"><styles><styleitem property=\"width\" value=\"20px\"/></styles></styleitem><styleitem type=\"border\"/></styles></image></components></division><division behavior=\"flex\" verticalalign=\"top\" minwidth=\"100px\" ratio=\"1\"><components><template multiple=\"false\" uniqueid=\"sk-R6hbp-4045\" allowhtml=\"true\" model=\"UserSelections\"><contents>&lt;a href=\"/006/e?retURL=%2Fapex%2FAccountDetailOverride%3Fid%3D{{{AccountID__ui}}}&amp;accid={{{AccountID__ui}}}\" onclick=\"window.onbeforeunload = null;\"&gt;\n&lt;span style=\"font-size:14px; font-weight: bold; color: #0077C5\"&gt;Create Additional&lt;br&gt;Opportunity&lt;/span&gt;\n&lt;/a&gt;\n&lt;div style=\"font-size:12px; font-weight:normal; color:gray\"&gt;(Add-on Services)&lt;/div&gt;</contents></template></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"padding-top\" value=\"12px\"/></styles></grid></components><styles><styleitem type=\"background\"/><styleitem type=\"border\"/><styleitem type=\"size\"/></styles><renderconditions logictype=\"and\"><rendercondition type=\"fieldvalue\" operator=\"!=\" enclosevalueinquotes=\"true\" fieldmodel=\"SelectedRow\" sourcetype=\"fieldvalue\" nosourcerowbehavior=\"deactivate\" field=\"offerType\" value=\"TRIAL\"/></renderconditions></wrapper></components><styles><styleitem type=\"background\"/><styleitem type=\"border\" padding=\"\"><styles><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\"/></styles></wrapper></components><styles><styleitem type=\"background\" bgtype=\"color\"><styles><styleitem property=\"background-color\" value=\"#ebf9ff\"/></styles></styleitem><styleitem type=\"border\" padding=\"right,left,top,\"><styles><styleitem property=\"padding-left\" value=\"19px\"/><styleitem property=\"padding-top\" value=\"13px\"/><styleitem property=\"padding-right\" value=\"19px\"/><styleitem property=\"box-sizing\" value=\"border-box\"/></styles></styleitem><styleitem type=\"size\" height=\"custom\"><styles><styleitem property=\"min-height\" value=\"500px\"/><styleitem property=\"max-height\" value=\"700px\"/><styleitem property=\"overflow-y\" value=\"auto\"/></styles></styleitem></styles><renderconditions logictype=\"and\"/></wrapper></components></division></divisions><styles><styleitem type=\"background\" bgtype=\"none\"/><styleitem property=\"height\" value=\"650px\"/></styles></grid></components><afterclose/></popup></action><action type=\"blockUI\"/><action type=\"unblockUI\"/></actions></action></actions><renderconditions logictype=\"and\"/></pagetitle></components><resources><labels><label id=\"OnlineSales_SpecialPartner\"/><label id=\"OnlineSales_ProductionOrg\"/><label id=\"OnlineSales_defSourceCode\"/></labels><css><cssitem location=\"inline\" name=\"progressIndicator\" cachelocation=\"false\">/* Separator Lines */\n.pgi-line {\n  width: 90px;\n  border: solid 1px;\n  color: #8D9096;\n  position: relative;\n    left: -16px;\n    top: 17px;\n}\n\n/* Bubble Generics */\n.pgi-innercircle {\n  position: relative;\n  text-align: center;\n  border-radius: 50%;\n    width: 24px;\n    height: 24px;\n}\n\n.pgi-number {\n  vertical-align: middle;\n    text-align: center;\n    font-size: 24px;\n    font-weight: 500;\n  position: relative;\n    bottom: 3px;\n}\n.pgi-outercircle {\n  border-radius: 50%;\n    border-style: solid;\n    border-width: 3px;\n    width: 24px;\n    padding: 2px;\n    height: 24px;\n  position: relative;\n    margin: auto;\n}\n.pgi-text {\n  font-family: sans-serif;\n  font-size: 12px;\n  text-align: center;\n  margin-top: 5px; /* Text shouldn't be too close to Bubbles */\n}\n.pgi {\n    text-decoration: none !important;\n}\n\n/* NoStep */\n.pgi-nostep .pgi-innercircle {\n  background: #FFFFFF;\n}\n.pgi-nostep .pgi-number {\n  color: #0077C5;\n}\n.pgi-nostep .pgi-outercircle {\n  border-color: #8D9096;\n  background: #FFFFFF;\n}\n.pgi-nostep .pgi-text {\n  color: #8D9096;\n}\n\n/* Step */\n.pgi-step .pgi-innercircle {\n  background: #FFFFFF;\n}\n.pgi-step .pgi-number {\n  color: #0077C5;\n}\n.pgi-step .pgi-outercircle {\n  border-color: #8D9096;\n  background: #FFFFFF;\n}\n.pgi-step .pgi-text {\n  color: #8D9096;\n}\n\n.pgi-step:hover .pgi-outercircle {\n  border-color: #34bfff;\n}\n\n/* CurrentStep */\n.pgi-currentstep .pgi-innercircle {\n  background: #0077C5;\n}\n.pgi-currentstep .pgi-number {\n  color: #eceef1;\n}\n.pgi-currentstep .pgi-outercircle {\n  border-color: #0077C5;\n  background: #FFFFFF;\n}\n.pgi-currentstep .pgi-text {\n  color: #0077C5;\n}\n\n.pgi-currentstep:hover .pgi-innercircle{\n  background: #FFFFFF;\n}\n.pgi-currentstep:hover .pgi-outercircle {\n  border-color: #34bfff;\n}\n.pgi-currentstep:hover .pgi-number{\n  color: #0077C5;\n}\n\n/* Previous Step */\n.pgi-prevstep .pgi-innercircle {\n  background: #2CA01C;\n}\n.pgi-prevstep .pgi-number {\n  color: #FFFFFF;\n}\n.pgi-prevstep .pgi-outercircle {\n  border-color: #8D9096;\n  background: #FFFFFF;\n}\n.pgi-prevstep .pgi-text {\n  color: #8D9096;\n}\n\n.pgi-prevstep:hover .pgi-outercircle {\n  border-color: #34bfff;\n}</cssitem><cssitem location=\"inline\" name=\"newcss\" cachelocation=\"false\">.condField {\n    margin-top: -10px;\n}\n\n.paymentMethod .nx-radiowrapper {\n   display: inline-block;\n   min-width: 11em;\n}\n\n.grayOut,.grayOut:hover,.grayOut:active,.grayOut:focus{\n    background-color : lightgray;\n    color : black;\n    border-color : lightgray;\n    cursor :default;\n}\n.wordwraps{     \n    word-wrap: break-word;            \n    width: 380px        \n}\n\n.languageTitle { padding-left: 8px; padding-top: 15px;}\n\ninput[disabled],slect[disabled]{\n    color: #6C6C6C;\n    padding: 6px;\n    margin: 0 0 0 0;\n}\n\n.emailError.nx-field.nx-modified .nx-fieldtext\n    {\n        color: red;\n        font-size: 9pt;\n        font-weight: bold;\n        text-align: left;\n        padding-top: 10px;\n        padding-bottom: 10px;\n    }\n    \n.pushDown{\n    padding-top: 32px;\n}    \n    </cssitem></css><javascript><jsitem location=\"inline\" name=\"pageInit\" cachelocation=\"false\" url=\"\">(function(skuid){\n\tvar $ = skuid.$;\n    registerSnippet = skuid.snippet.register;\n    var leadModel,accountModel,leadCondition,accountCondition;\n    var leadID = skuid.page.params.LeadId;\n    var accID = skuid.page.params.AccountId;\n\tsubscriptionFilter\n\tskuid.page.params.step3_Visited = false; //initial visit to false\n\t/*BTBS-6011 Start*/\n\tskuid.page.params.isInConsole = typeof(srcUp) == 'function';//is the page in console.\n\t/*BTBS-6011 End*/\n\t// ================= subscriptionFilter =================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Function to set up Monthly vs Annual filter\n\tskuid.snippet.registerSnippet('subscriptionFilter', function() {\n        subscriptionFilter();\n    });\n    \n    // ================= highlightRow =======================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Makes the catalog table clickable\n\t// ======================================================\n    skuid.snippet.registerSnippet('highlightRow', function() {\n        highlightRow();\n    });\n    \n    // ================= highlightSelectedRow ===============\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Used when going between steps, ensure the\n\t//              correct row is selected when returning\n\t//              to the catalog\n\t// ======================================================\n    skuid.snippet.registerSnippet('highlightSelectedRow', function() {\n        highlightSelectedRow();\n    });\n    \n    // ================= updateFilters ======================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Function to update initial load filters\n\t//              when coming from account depending on\n\t//              CAN or COID\n\t// ======================================================\n    skuid.snippet.registerSnippet('updateFilters', function() {\n        updateFilters();\n    });\n    \n    // ================= wizardStep =========================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Updates the step for the progress bar\n\t// ======================================================\n    skuid.snippet.registerSnippet('wizardStep', function() {\n        wizardStep();\n    });\n    \n    // ================= updateDeckModel ====================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Takes the Catalog model (REST model) and \n\t//              generates the deck to show the different\n\t//              product offerings grouped together\n\t// ======================================================\n    skuid.snippet.registerSnippet('updateDeckModel', function() {\n        updateDeckModel();\n    });\n    /*BTBS-6011 Start*/\n    // ================= CareConsoleRedirection ====================\n\t// Inputs: Url to Redirect,Detail to be shown on tab,should be new tab or sub tab\n\t// Outputs: None\n\t// Description: takes the input and perform care console\n\t//              redirection\n\t// ======================================================\n    skuid.snippet.registerSnippet('careConsoleRedirection', function(url,detail,isNewTab,isCloseCurrentSubTab) {\n        careConsoleRedirection(url,detail,isNewTab,isCloseCurrentSubTab);\n    });\n    \n    // ================= AccountRedirect ====================\n\t// Inputs: Url to Redirect,Detail to be shown on tab\n\t// Outputs: None\n\t// Description: takes the input and perform care console\n\t//              redirection for Account\n\t// ======================================================\n    skuid.snippet.registerSnippet('accountRedirect', function(url,detail) {\n        var accModel = skuid.$M('NewAccount');\n        var accRow = accModel.getFirstRow();\n        var accountID = accModel.getFieldValue(accRow,'Id');\n        skuid.snippet.getSnippet('careConsoleRedirection')(url,detail,accountID.indexOf(skuid.page.params.AccountId) == -1,false);\n    });\n    \n    // ================= AccountRedirectAndCloseTab ====================\n\t// Inputs: Url to Redirect,Detail to be shown on tab\n\t// Outputs: None\n\t// Description: takes the input and perform care console\n\t//              redirection for Account\n\t// ======================================================\n    skuid.snippet.registerSnippet('accountRedirectAndCloseTab', function() {\n        var accModel = skuid.$M('NewAccount');\n        var accRow = accModel.getFirstRow();\n        var accountID = accModel.getFieldValue(accRow,'Id');\n        var detail = accModel.getFieldValue(accRow,'Name');\n        if(skuid.page.params.isInConsole){\n            skuid.snippet.getSnippet('careConsoleRedirection')('/'+accountID,detail,accountID.indexOf(skuid.page.params.AccountId) == -1,true);\n        }else{\n            window.location.href = '/'+accountID;\n        }\n    });\n    \n    // ================= PlaceAnotherOrder ====================\n\t// Inputs: Url to Redirect,Detail to be shown on tab\n\t// Outputs: None\n\t// Description: takes the input and perform care console\n\t//              redirection for Account\n\t// ======================================================\n    skuid.snippet.registerSnippet('anotherOrderRedirection', function() {\n        var userModel = skuid.$M('UserSelections');\n        var userRow = userModel.getFirstRow();\n        var accountID = userModel.getFieldValue(userRow,'AccountID__ui');\n        var companyName = encodeURI(userModel.getFieldValue(userRow,'MultiCoName__ui'));\n        var detail = 'New QBO Order';\n        \n        var accModel = skuid.$M('NewAccount');\n        var accRow = accModel.getFirstRow();\n        var accountCountry = accModel.getFieldValue(accRow,'Country__c');\n        \n        var url = '/apex/OnlineSalesCatalogSkuid?AccountId='+accountID+'&amp;Name='+companyName+'&amp;another=yes&amp;country='+accountCountry;\n        if(skuid.page.params.isInConsole){\n            skuid.snippet.getSnippet('careConsoleRedirection')(url,detail,false,true);\n        }else{\n            window.location.href = url;\n        }\n    });\n    \n    // ================= CreateAdditionalOpportunity ====================\n\t// Inputs: Url to Redirect,Detail to be shown on tab\n\t// Outputs: None\n\t// Description: takes the input and perform care console\n\t//              redirection for Account\n\t// ======================================================\n    skuid.snippet.registerSnippet('createAdditionalOpportunity', function() {\n        var userModel = skuid.$M('UserSelections');\n        var userRow = userModel.getFirstRow();\n        var accountID = userModel.getFieldValue(userRow,'AccountID__ui');\n        var url = '/006/e?retURL=%2Fapex%2FAccountDetailOverride%3Fid%3D'+accountID+'&amp;accid='+accountID\n        skuid.snippet.getSnippet('careConsoleRedirection')(url,'New Opportunity',false,true);\n    });\n    \n    /*BTBS-6011 End*/\n\t$(document.body).one('pageload',function(){\n\t    \n\t    // ======================================\n\t    // Set up REST model for Catalog\n\t    // ======================================\n\t    var RESTModel = skuid.model.getModel('Catalog'),\n\t        segmentModel = skuid.model.getModel('SegmentPicklist'),\n\t        uniqueArr = {},\n\t        segmentRows = [];\n\t  \n\t    // ======================================\n\t    // Populate model segment filter choices\n\t    // ======================================\n\t    $.each(RESTModel.getRows(),function(){\n        \tvar row = this,\n        \t\tsegment = RESTModel.getFieldValue(row,'segment');\n        \tif (uniqueArr[segment] === undefined) {\n        \t\tuniqueArr[segment] = true;\n        \t\tsegmentRows.push({segment : segment});\n        \t}\n        });\n        // Sort choices by New to QBO / Desktop Migrator / Multi-Company / ...then alphabetically\n        segmentRows = segmentRows.sort(function(a,b){\n                if (a.segment &lt; b.segment) return -1;\n                if (a.segment &gt; b.segment) return 1;\n                return 0;\n        });\n        \n        var sortOrder = [\n            {segment: 'Multi Company'},\n            {segment: 'Desktop Migrator'},\n            {segment: 'New to QBO'},\n            {segment: 'All Customers'}];\n            \n        $.each(sortOrder, function(){\n            a = this.segment;\n            b = this.offerType;\n            $.each(segmentRows, function(i, value){\n                if((this.segment == a) &amp;&amp; (this.offerType == b)) {\n                    segmentRows.unshift(value);\n                    segmentRows.splice(i + 1, 1);\n                }\n            });\n        });\n        \n        segmentRows.reverse();\n        if (segmentRows.length) segmentModel.adoptRows(segmentRows);\n        \n        // ======================================\n\t    // Set up country region from User\n\t    // ======================================\n        var regionCondition = RESTModel.getConditionByName('region');\n        \n        /* var countryModel = skuid.model.getModel('CountryFromLoggedInUser'),\n            country = countryModel.getFieldValue(countryModel.getFirstRow(), 'Country');\n\t    */\n\t    console.log('ccccc = ',skuid.page.params.country);\n\t    //RESTModel.setCondition(regionCondition, country);\n\t    \n\t    RESTModel.setCondition(regionCondition, skuid.page.params.country);\n\t    RESTModel.activateCondition(regionCondition);\n\t    RESTModel.updateData();\n\t    \n        // ======================================\n\t    // Refresh Filter Table\n\t    // ======================================\n        var filterTable = skuid.component.getById('CatalogFilterTable');\n        filterTable.render();\n        \n        // ======================================\n\t    // Set up lead / account models\n\t    // ======================================\n\t    var leadModel = skuid.$M('Lead'),\n            accountModel = skuid.$M('Account'),\n            masterAdminModel = skuid.$M('MasterAdmin'),\n    \t\t//leadCondition = leadModel.getConditionByName('LeadIDCondition'),\n    \t\taccountCondition = accountModel.getConditionByName('AccountIDPageParameter');\n\n\t    var userModel = skuid.model.getModel('UserSelections'), \n\t        subModel = skuid.model.getModel('MonthlyAnnualSelection'),\n\t        newUserModel = skuid.model.getModel('NewUser'),\n    \t    userModelRow = userModel.getFirstRow();\n    \t    newUserRow = newUserModel.getFirstRow();\n    \t    \n    \tuserModel.updateRow(userModel.getFirstRow(), {MonthlyChoice: 'initial'});\n    \t$.blockUI({message: 'Updating Catalog'});    \n    \t\n    \t// ======================================\n\t    // Determine if 'From Lead' or 'From Acct'\n\t    // ======================================\n\t    // If leadID in url parameters, then 'From Lead' and set appropriate fields\n\t\tif( leadID !== undefined &amp;&amp; leadID !== ''){\n\t\t    userModel.updateRow(userModelRow, {FromLead__ui: true});\n\t\t    userModel.save();\n\t\t    newUserModel.updateRow(newUserRow, {NewOrExisting__ui: 'new'})\n\t\t    newUserModel.save();\n\t\t}\n\t\t// If accountID in url parameters, initialize the filters based on CAN / COID\n\t\t// Set appropriate fields\n\t\tif( accID !== undefined &amp;&amp; accID !== ''){\n\t\t    accountModel.activateCondition(accountCondition);\n\t\t    accountModel.updateData(function(){\n\t            updateFilters();\n\t        });\n\t\t    userModel.updateRow(userModelRow, {FromLead__ui: false});\n\n\t\t    newUserModel.updateRow(newUserRow, {NewOrExisting__ui: 'existing'});\n\t\t    newUserModel.save();\n\t\t}\n\t\t\n\t\t// ======================================\n\t    // Finish initializing page\n\t    // ======================================\n        subscriptionFilter();\n        wizardStep();\n        \n        //  ===============================================================\n        //  Access the Custom Label \"OnlineSales_SpecialPartner\" for the required special Segment \n        //  This is to determine the order confirmation multi-company order input block appearance\n        //  ================================================\n        \n\t    var prodKey = skuid.model.getModel('OnlineSales_ProductionKey');\n        var isProduction = prodKey.getFieldValue(prodKey.getFirstRow(),'Value__c');\n\t    \n\t    skuid.page.params.isProduction = isProduction;\n\t    \n\t    /*Start - BTBS-6015 - Updated to Custom Setting */\n\t    var defSourceCode = skuid.model.getModel('OnlineSales_defSourceCode');\n\t    var defSourceCodeValue = defSourceCode.getFieldValue(defSourceCode.getFirstRow(),'Value__c');\n\t    skuid.page.params.defSourceCode = defSourceCodeValue;\n\t    /*End - BTBS-6015 - Updated to Custom Setting */\n\t});\n    \n    // Error message when navigating back\n    window.onbeforeunload = function() {return \"All data will be lost.\"}\n    \n    // ================= updateFilters ======================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Function to update initial load filters\n\t//              when coming from account depending on\n\t//              CAN or COID\n\t// ======================================================\n    function updateFilters() {\n        \n        // ======================================\n        //  If coming from Account -&gt;\n        //     CAN: Defaults to Desktop Migrator\n        //     COID:  Defaults to Multi-Company or All if no Multi\n        //     No CAN or COID:  Defaults to All \n        // ======================================\n        \n        // ======================================\n\t    // Set up models\n\t    // ======================================\n        var segmentPicklistModel = skuid.$M('SegmentPicklist'),\n            catalogModel = skuid.$M('Catalog'),\n            accountModel = skuid.$M('Account'),\n            accountRow = accountModel.getFirstRow(),\n            segmentCondition = catalogModel.getConditionByName('segment');\n            \n\t    var CAN = accountModel.getFieldValue(accountRow, 'CAN__c');\n\t    var COID = accountModel.getFieldValue(accountRow, 'Company_ID__c');\n\t    \n\t    // ======================================\n\t    // Set up conditions based on CAN / COID\n\t    // ======================================\n\t    if (CAN !== null) {\n\t        //catalogModel.setCondition(segmentCondition, 'Desktop Migrator');\n\t    }\n\t    else if (COID !== null) {\n\t        //catalogModel.setCondition(segmentCondition, 'Multi-Company');\n\t    }\n\t    \n\t    if ((CAN !== null) || (COID !== null)) {\n    \t    catalogModel.updateData(function() {\n    \t        if (catalogModel.data.length === 0) {\n    \t            //$.blockUI({message: 'Updating Catalog'});    \n    \t            catalogModel.deactivateCondition(segmentCondition);\n    \t            catalogModel.updateData(function() {\n    \t                //$.unblockUI();\n    \t            });\n    \t        }\n    \t    });\n\t    }\n\t    else {\n\t        // highlightRow is set to automatically run if the Catalog model is queried which happens if CAN / COID are not null\n\t        // Otherwise, need to run this function since Catalog isn't queried\n\t        highlightRow();\n\t    }\n    }\n    \n    // ================= subscriptionFilter =================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Function to set up Monthly vs Annual filter\n\t// ======================================================\n\tfunction subscriptionFilter() {\n\t    \n\t    // ======================================\n\t    // Set up models, components &amp; conditions\n\t    // ======================================\n\t    // Model condition (inactive vs active) will determine whether or not Monthly or Annual is chosen\n    \tvar subModel = skuid.model.getModel('MonthlyAnnualSelection'), \n    \t    subModelRow = subModel.getFirstRow();\n    \t    condition = subModel.getConditionByName('subFilter');\n    \tvar selectedModel = skuid.model.getModel('SelectedRow');\n    \t\n    \t// aDeck &amp; mDeck refer to the two decks in the catalog\n    \t// aDeck renders if it's annual and will only show annual pricing\n    \t// mDeck renders if it's monthly and will only show monthly pricing\n    \tvar aDeck = skuid.component.getById('SkuidDeckAnnual'),\n\t        mDeck = skuid.component.getById('SkuidDeckMonthly'),\n\t        subTable = skuid.component.getById('subTable');\n\t    var userModel = skuid.model.getModel('UserSelections'), \n\t        userModelRow = userModel.getFirstRow(),\n\t        fromLead = userModel.getFieldValue(userModelRow, 'FromLead__ui');\n\t        \n\t    var originalValue = userModel.getFieldValue(userModelRow, 'MonthlyChoice');\n\t    var flag = '';\n        \n        // ======================================\n\t    // Render the appropriate deck model\n\t    // ======================================\n    \t// When model condition is inactive - Annual is selected, Monthly choice == false\n    \t// When model condition is active - Monthly is selected, Monthly choice == true\n    \tif(condition.inactive) {\n    \t    userModel.updateRow(userModelRow, {MonthlyChoice: false});\n    \t    aDeck.render();\n    \t    mDeck.unrender();\n    \t    flag = false;\n    \t}\n    \telse {\n    \t    userModel.updateRow(userModelRow, {MonthlyChoice: true});\n    \t    mDeck.render();\n    \t    aDeck.unrender();\n    \t    flag = true;\n    \t}\n    \n        // Block the UI to save the monthly selection choice\n\t    $.blockUI({message: 'Updating Catalog'});\n\t    userModel.save({callback: function(result){\n\t        $.unblockUI();\n\t    }});\n\t    \n\t    // Don't run this on page load if coming from Account since it's re-run when the filters are updated\n\t    if ((originalValue !== 'initial') || (fromLead === true)) {\n    \t    highlightRow();\n    \t}\n    \treturn;\n\t}\n      \n    // ================= highlightRow =======================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Makes the catalog table clickable\n\t// ======================================================\n\tfunction highlightRow() {\n\t    \n\t    // ======================================\n\t    // Set up models and table components\n\t    // ======================================\n\t    var selectedRowModel = skuid.model.getModel('SelectedRow');\n\t    var userModel = skuid.model.getModel('UserSelections'), \n    \t    userModelRow = userModel.getFirstRow();\n\t    \n\t    var subModel = skuid.model.getModel('MonthlyAnnualSelection');\n\t    var originalValue = userModel.getFieldValue(userModel.getFirstRow(), 'MonthlyChoice');\n\t    \n\t    var tableName = ['#CatalogTable1', '#CatalogTableTrial1', '#CatalogTable2', '#CatalogTableTrial2'];\n\n        // ======================================\n\t    // Highlight the row based on user click\n\t    // ======================================\n\t    // For each table row, add CSS class 'highlighted-row' on click and fill in circle\n\t    // Ensure only one row is selected at all times.  Check all other rows and remove selected row classes as needed\n\t    for (i = 0; i&lt;tableName.length; i++) {\n    \t\t$(tableName[i] + ' table tbody tr').click(function(){\n    \t\t    selectedRow = this; \n    \t\t    console.log('@@@ ROW Selected is : @@@@ ',$(this).data('object').row);\n    \t\t    \n    \t\t    $(selectedRow).addClass('highlighted-row');\n    \t\t    iconElement = $(selectedRow).find('.nx-skootable-buttonicon');\n    \t\t    $(iconElement).removeClass('fa-circle-o').addClass('fa-dot-circle-o');\n    \t\t    \n    \t\t    for (j = 0; j&lt;tableName.length; j++) {\n        \t\t    // Ensure only one row is selected\n        \t\t    $(tableName[j] + ' table tbody tr').each(function(){\n        \t\t        if ((this != selectedRow) &amp;&amp; ($(this).hasClass('highlighted-row'))) {\n        \t\t            $(this).removeClass('highlighted-row');\n        \t\t            iconElement = $(this).find('.nx-skootable-buttonicon');\n        \t\t            $(iconElement).removeClass('fa-dot-circle-o').addClass('fa-circle-o');\n        \t\t        }\n        \t\t    });\n    \t\t    }\n    \t\t});\n\t    }\n\t    \n\t    // For performance, don't run on initial load\n\t    if (originalValue === 'initial') {\n\t        highlightSelectedRow();\n\t    }\n\t}\n\t\n\t// ================= highlightSelectedRow ===============\n\t// Outputs: None\n\t// Description: Used when going between steps, ensure the\n\t//              correct row is selected when returning\n\t//              to the catalog\n\t// ======================================================\n\tfunction highlightSelectedRow() {\n\t    \n\t    // ======================================\n\t    // Set up models and table components\n\t    // ======================================\n\t    var tableName = ['#CatalogTable1', '#CatalogTableTrial1', '#CatalogTable2', '#CatalogTableTrial2'];\n\t    var selectedRowModel = skuid.model.getModel('SelectedRow'),\n\t        selectedRow = selectedRowModel.getFirstRow();\n            monthlyannualSelectedRow = selectedRowModel.getFieldValue(selectedRow, 'monthlyannual__ui');\n        var userModel = skuid.model.getModel('UserSelections'), \n    \t    userModelRow = userModel.getFirstRow(),\n            monthlyannualUserSelected = userModel.getFieldValue(userModelRow, 'MonthlyChoice');\n        \n        // ======================================\n\t    // Highlight the user selected product\n\t    // ======================================\n\t    // Loop through the tables and check if the row is equivalent to the row in SelectedRow model\n\t    // Add class 'highlighted-row' and fill in circle of the selected row\n\t    for (i = 0; i&lt;tableName.length; i++) {\n    \t\t$(tableName[i] + ' table tbody tr').each(function() {\n    \t\t    if(($(this).data('object').row == selectedRow) &amp;&amp; (monthlyannualSelectedRow === monthlyannualUserSelected)) {\n    \t\t        $(this).addClass('highlighted-row');\n    \t\t        iconElement = $(selectedRow).find('.nx-skootable-buttonicon');\n    \t\t        $(iconElement).removeClass('fa-circle-o').addClass('fa-dot-circle-o');\n    \t\t        i = 4; // Break out of loop\n    \t\t    }\n    \t\t});\n\t    }\n\t}\n\t\n\t// ================= wizardStep =========================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Updates the step for the progress bar\n\t// ======================================================\n\tfunction wizardStep() {\n\t    \n\t    // ======================================\n\t    // Set up models and components\n\t    // ======================================\n\t    var myWiz = skuid.component.getById('mywizard'),\n\t        userModel = skuid.model.getModel('UserSelections'), \n    \t    userModelRow = userModel.getFirstRow();\n    \tvar panel = $('#mainGrid').find('#detailDiv');\n\t    \n\t    // ======================================\n\t    // Update step field / hide panel on step 1\n\t    // ======================================\n\t    userModel.updateRow(userModelRow, {currentStep: 'step1', selectedStep: 'step1'});\n        panel.hide();\n\t    return;\n\t}\n\t\n\t// ================= updateDeckModel ====================\n\t// Inputs: None\n\t// Outputs: None\n\t// Description: Takes the Catalog model (REST model) and \n\t//              generates the deck to show the different\n\t//              product offerings grouped together\n\t// ======================================================\n\tfunction updateDeckModel(){\n\t    \n\t    // ======================================\n\t    // Set up models and components\n\t    // ======================================\n    \tvar RESTModel = skuid.model.getModel('Catalog'),\n    \t    UIModel = skuid.model.getModel('CatalogForDeck'),\n    \n        \t//\tUnique combination of Customer Segments and Types\n        \tuniqueKeySet = {},\n        \n        \t//\tThe actual rows that we will adopt\n        \trowsToAdopt = [];\n        \n        //Clear orderError__ui everytime the Catalog refreshed\n        var userSelModel = skuid.model.getModel('UserSelections');\n        var userSelRow = userSelModel.getFirstRow();\n            userSelModel.updateRow(userSelRow, {orderError__ui : ''});\n        \n        \n        // ==============================================\n\t    // Find all the unique segment - offerTypes pairs\n\t    // ==============================================\n\t    // Loop through the Catalog model and push all unique pairings of segment - offerType\n        $.each(RESTModel.getRows(),function(){\n        \tvar row = this,\n        \t\tsegment = RESTModel.getFieldValue(row,'segment'),\n        \t\tofferType = RESTModel.getFieldValue(row,'offerType'),\n        \t\tkey = segment + '-' + offerType;\n\n        \tif (uniqueKeySet[key] === undefined) {\n        \t\tuniqueKeySet[key] = true;\n        \t\trowsToAdopt.push({\n        \t\t\tsegment : segment,\n        \t\t\tofferType : offerType\n        \t\t});\n        \t}\n        });\n        \n        // =========================================================================\n\t    // Sort Catalog by:\n\t    // All Customers / New to QBO / Desktop Migrator / Multi-Company / ... then alphabetically\n        // =========================================================================\n        rowsToAdopt.sort(function(a, b){\n            if (a.segment &lt; b.segment) return -1;\n            if (a.segment &gt; b.segment) return 1;\n            return 0;\n        });\n        \n        var sortOrder = [\n            {segment: 'Multi Company', offerType: 'PAID'},\n            {segment: 'Desktop Migrator', offerType: 'TRIAL'},\n            {segment: 'Desktop Migrator', offerType: 'PAID'},\n            {segment: 'New to QBO', offerType: 'TRIAL'},\n            {segment: 'New to QBO', offerType: 'PAID'},\n            {segment: 'All Customers', offerType: 'TRIAL'},\n            {segment: 'All Customers', offerType: 'PAID'}];\n            \n        $.each(sortOrder, function(){\n            a = this.segment;\n            b = this.offerType;\n            $.each(rowsToAdopt, function(i, value){\n                if((this.segment == a) &amp;&amp; (this.offerType == b)) {\n                    rowsToAdopt.unshift(value);\n                    rowsToAdopt.splice(i + 1, 1);\n                }\n            });\n        });\n        \n        rowsToAdopt.reverse();\n        \n        // ===================================================================\n\t    // Update the UI only model (CatalogForDeck) with REST model offerings\n        // ===================================================================\n        //\tIf we found any rows, adopt them\n        if (rowsToAdopt.length) UIModel.adoptRows(rowsToAdopt);\n        return 0;\n\t}\n\t/*BTBS-6011 Start*/\n\tfunction careConsoleRedirection(url,detail,isNewTab,isCloseCurrentSubTab){\n\t    if(isNewTab){\n            sforce.console.openPrimaryTab(null, url, true, detail, null, detail);\n        }else{\n             var openSubtab = function(result) {\n                sforce.console.openSubtab(result.id, url, true, detail, null);\n            };\n            sforce.console.getEnclosingPrimaryTabId(openSubtab);\n        }\n        \n        if(isCloseCurrentSubTab){\n            var closeSubtab = function closeSubtab(result) {\n                sforce.console.closeTab(result.id);\n            };\n            sforce.console.getEnclosingTabId(closeSubtab);\n        }\n\t}\n\t/*BTBS-6011 End*/\n})(skuid);\n\n//#Sri - Copied from OnlineSalesIncludeAddon\nfunction redirectTo(elem, url,detail,isNewTab, inCurrentTab){\n    \n    if (typeof(srcUp) == 'function'){ //Checks that it is in console\n        if(isNewTab){\n            sforce.console.openPrimaryTab(null, url, true, detail, null, null)\n        }else{\n            if(inCurrentTab){\n                sforce.console.getEnclosingPrimaryTabId(function(result){\n                    var tabId = result.id;\n                    sforce.console.openPrimaryTab(tabId, url, true);\n                    //sforce.console.closeTab(tabId);\n                });\n                var closeSubtab = function closeSubtab(result) {\n                    sforce.console.closeTab(result.id);\n                };\n                sforce.console.getEnclosingTabId(closeSubtab);\n            }else{\n                var openSubtab = function(result) {\n                    sforce.console.openSubtab(result.id, url, true, detail, null);\n                };\n                sforce.console.getEnclosingPrimaryTabId(openSubtab);                            \n            }\n        }\n        \n    } else {\n        /* Start - BTBS-6011 */\n        if(elem != null){\n            elem.setAttribute(\"href\", url);\n        }\n        else{\n            window.location.href = url;\n        }\n         /*End - BTBS-6011 */\n    }\n}</jsitem><jsitem location=\"inlinesnippet\" name=\"paymentRequiredFieldsValidation\" cachelocation=\"false\">\nvar params = arguments[0],\n    $ = skuid.$,\n    mainDFD = $.Deferred();\n\n// ========================================================\n// Description:  This is for verification of address and\n//               CC info at the end of Step 3\n// ========================================================\n\n// =============================\n// Set up Billing / CC models\n// =============================\nvar bpModel = skuid.model.getModel(\"BillingProfile\");\nvar addressModel = skuid.model.getModel(\"NewAddress\");\nvar ccModel =  skuid.model.getModel(\"CCTokenInfo\");\nvar userModel = skuid.model.getModel(\"UserSelections\");\nvar newUserModel = skuid.model.getModel(\"NewUser\");\n\nvar ccRow = bpModel.getFirstRow();\nvar ccNumber = bpModel.getFieldValue(ccRow,\"CreditCardNumber_ui\");  \nvar cvvCode = bpModel.getFieldValue(ccRow,\"CVV_ui\");\nvar expiryMonth = bpModel.getFieldValue(ccRow,\"Expiry_Month__c\");\nvar expiryYear = bpModel.getFieldValue(ccRow,\"Expiry_Year__c\");\n\nvar models = [ addressModel,bpModel ];\n\nvar paymentType = bpModel.getFieldValue(ccRow,\"Payment_Method__c\");\nvar ccType = bpModel.getFieldValue(ccRow, 'ccType__ui');\n\nconsole.log('paymentMethod ===',paymentType);\n\nif(paymentType === 'Credit Card'){\n    \n// Strip out spaces from input value\nif(ccNumber !== null){\nccNumber = ccNumber.replace( /\\s+/g, \"\" );\n}\n\nvar currentYear = (new Date()).getFullYear();\n\n// Clear out error codes\nuserModel.updateRow(userModel.getFirstRow(), {errorStatus: null});\n\n// =============================\n// Validate the CVV and Exp Date\n// =============================\nconsole.log('From payment Validation CVVCode =',cvvCode);\nconsole.log('From payment Validation expYear =',expiryYear);\nvar models = [bpModel];\n\nvar fieldsNOTEmpty = skuid.snippet.get('genericValidateFields')(models);\n\nif(fieldsNOTEmpty === true){\n    \nif(expiryYear === null){\n    console.log('KV3 Please Enter a Valid Year',expiryYear);\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidYear'});\n            userModel.save();\n            mainDFD.reject();   $.unblockUI();\n}        \n else if (expiryYear.toString().length &lt; 4 || expiryYear.toString().length &gt; 4 || (expiryYear &lt; currentYear)) \n        {\n            console.log('3 Please Enter a Valid Year');\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidYear'});\n            userModel.save();\n            mainDFD.reject();   $.unblockUI();\n        }\nif(cvvCode === null){\n    console.log('KV2 Please Enter a Valid 3-4 Digit CVV Number',cvvCode);\n    userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidCVV'});\n            userModel.save();\n            mainDFD.reject();   $.unblockUI();\n}\nelse if ( (cvvCode === '' || cvvCode === undefined || cvvCode.toString().length &lt; 3 || cvvCode.toString().length &gt;= 4) &amp;&amp; ccType !== 'American Express') \n        {\n            console.log('2 Please Enter a Valid 3-4 Digit CVV Number');\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidCVV'});\n            userModel.save();\n            mainDFD.reject();   $.unblockUI();\n        }\n        else if ( (cvvCode === '' || cvvCode === undefined || cvvCode.toString().length &lt;= 3 || cvvCode.toString().length &gt; 4) &amp;&amp; ccType === 'American Express') \n        {\n            console.log('3 Please Enter a Valid 4 Digit CVV Number');\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidCVV'});\n            userModel.save();\n            mainDFD.reject();   $.unblockUI();\n        }\n\n}\nelse{\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'requiredValuesMissing'});\n            userModel.save();\n    mainDFD.reject();   \n    $.unblockUI();   \n}\n\n    \n}\nelse if(paymentType === 'Debit Card'){\n    var fieldsNOTEmpty = skuid.snippet.get('genericValidateFields')(models);\n\n    if(fieldsNOTEmpty === false){\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'requiredValuesMissing'});\n            userModel.save();\n            mainDFD.reject();   \n            $.unblockUI();   \n    }\n    else{\n            userModel.updateRow(userModel.getFirstRow(), {errorStatus: null});\n    }\n    \n}\n\n\n// =============================\n// Validate the Billing Address and Save Billing address\n// Save Billing Profile\n// Create the company and publish the results of new company created\n// =============================\n\nvar results = skuid.snippet.getSnippet('checkAddress')();\n\n    results.done(function() \n        {\n                                var errStatus = userModel.getFieldValue(userModel.getFirstRow(), 'errorStatus');\n                                \n                                console.log('From ABOVE errStatus Block');\n                            \n                            if (errStatus === null)\n                            {\n        \n                                    console.log('From BELOW errStatus Block');\n                                    //Here we should Save the address if User CHECKED the update CheckBox\n                                    //Also check if the SAME Address Exists, if not then save it, else Don't\n                                    \n                                    // =============================\n                                    // Update billing address\n                                    // =============================\n                                   var addressSave = skuid.snippet.getSnippet('updateBillingAddress')();\n                                   var billprofile,companyCreated;    \n                                    //================================\n                                    //Save Billing Profile\n                                    //================================\n                                    addressSave.done(function()\n                                    {\n                                                    console.log('addressSave-DONE',addressSave);\n                                                    billprofile = skuid.snippet.getSnippet('saveBillingProfile')();\n                                                    \n                                                    console.log('Billing Profile Before === DONE',billprofile);\n                                 \n                                        billprofile.done(function()\n                                        {\n                                                  console.log('Billing Profile AFTER ==== DONE',billprofile);\n                                                  companyCreated = skuid.snippet.getSnippet('CreateCompany')();\n                                        \t\t  \n                                        \t\t  //done\n                                        \t\t  companyCreated.done(function()\n                                                  {\n                                                    \n                                                            var userModel = skuid.$M('NewUser'),\n                                                            userRow = userModel.getFirstRow(),\n                                                            success = userModel.getFieldValue(userModel.getFirstRow(), 'success_ui'),\n                                                            errMsgReceived = userModel.getFieldValue(userModel.getFirstRow(), 'errorMessage_ui');\n                                                            \n                                                            console.log('From createCompany.done success ===',success);\n                                                    \n                                                            if(success === true)\n                                                            {\n                                                             \n                                                                console.log('From createCompany.done success IF-Block');\n                                                                $('#orderPopup').click();\n                                                                \n                                                                //Shashi - 07/06/2016 - Commented opty close, will be enabled for July release\n                                                                //skuid.snippet.getSnippet('closeOpportunity')();\n                                                                \n                                                                var popup = $('#orderPopupGrid').parent();\n                                                                // This disables the esc key on the popup\n                                                                $(popup).dialog({ closeOnEscape: false });\n                                                                popup.css('padding', '0px');\n                                                                popup.parent().css('padding', '0px');\n                                                        \n                                                                if (newUserModel.getFieldValue(newUserModel.getFirstRow(), 'Temp_Pwd') === null) \n                                                                {\n                                                                         popup.parent().css('height', '435px');\n                                                                }\n                                                                else{\n                                                                        popup.parent().css('height', '430px');\n                                                                    }\n                                                                \n                                                                \n                                                                if(skuid.page.params.bulkSegment === 'YES'){\n                                                                    popup.parent().css('height', '450px');\n                                                                }\n                                                                // Add placeholder\n                                                                $('.needPlaceholder .nx-field input, .nx-field textarea').each(function(i, item)\n                                                    \t            {\n                                                                            item.setAttribute(\"placeholder\", \"New Company Name\");\n                                                                    });\n                                                        \n                                                                $.unblockUI();\n                                                                mainDFD.resolve();\n                                                            }\n                                                    \n                                                            /**else{\n                                                                    //alert USER on Error/Failure\n                                                                    console.log('From Else Block of Create Company Result Check: Payment Fields Snippet',errMsgReceived);\n                                                                    alert('Oops Something is Wrong!\\n'+errMsgReceived);\n                                                                    mainDFD.reject(); \n                                                                   // $.unblockUI();\n                                                            \n                                                            }**/\n                                                            //Clear CVV\n                                                            bpModel.updateRow(bpModel.getFirstRow(),{ Credit_Card_Verification_Number__c : ''});\n                                                            bpModel.save();\n                                                \n                                                    });\n                            \t\t  \n                                        });\n                                        \n                                    });\n        \n        \n        \n                                }\n            \n    \n        });\n\nreturn mainDFD.promise();\n\n\n</jsitem><jsitem location=\"inlinesnippet\" name=\"UserValidation\" cachelocation=\"false\">\n\n// ========================================================================\n// Description: This function is used when going from\n//              Step 2 to Step 3.  Verifies that the User\n//              Id is valid depending on the following \n//              conditions:\n//  If New User -&gt; Check that the username is NOT already in the database\n//  If Existing User -&gt; Check that the username is already in the database\n// ========================================================================\n\nconsole.log('From User Validation Snippet');\n\nconsole.log('skuid.page.params.Something === ',skuid.page.params.Something);\n\n// =========================================\n// Set up Models and Components\n// =========================================\n\nvar params = arguments[0],\n$ = skuid.$,\nmainDFD = $.Deferred();\n\nvar userModel = skuid.$M('NewUser');\n\nvar selectedModel = skuid.$M('SelectedRow');\n\nvar userRow = userModel.getFirstRow(),\n    userSelection = userModel.getFieldValue(userRow, 'NewOrExisting__ui');\n    \n    //Clear the Error initially\n    userModel.updateRow(userRow, {ErrorType__ui: ''});\n    \nvar addressModel = skuid.$M('Address'),\n    newAddressModel = skuid.$M('NewAddress'),\n    newAddressCond = newAddressModel.getConditionByName('NewAddress2OldAddress');\n    \nvar accountModel = skuid.$M('Account'), \n    newAccountModel = skuid.$M('NewAccount');\n    \nvar userSelModel = skuid.$M('UserSelections');\n\nvar wizard = skuid.component.getById('mywizard');\n\nvar inputEmail = userModel.getFieldValue(userRow,\"UserID_ui\");\nvar inputConfirmEmail_ui = userModel.getFieldValue(userRow,\"ConfirmEmail_ui\");\n\nvar flag = true;\n\nvar contactModel=skuid.$M('NewContact');\nvar contactRow = contactModel.getFirstRow();\n\nvar authID;\n\n\nvar selOfferType = selectedModel.getFieldValue(selectedModel.getFirstRow(), 'offerType');\n\nvar checkmarkField1 = $('#userIDNew').find('.nx-field input');\nvar checkmarkField2 = $('#userIDConfirm').find('.nx-field input');\nvar checkmarkField = $('#userIDExisting').find('.nx-field input');\n\nvar coAddrModel = skuid.$M('CompanyAddress');\nvar coAddrRow = coAddrModel.getFirstRow();\nvar opted_For_CC = coAddrModel.getFieldValue(coAddrRow, 'Enter_Credit_Card__ui');\n\nvar emailError =  userSelModel.getFieldValue(userSelModel.getFirstRow(),'emailErrorStep2_ui');\n\n   if(emailError !== null){\n\n        mainDFD.reject();\n        $.unblockUI();\n        flag = false;\n    \n   }\n        \n// =========================================\n// Verify that the email fields match\n// =========================================\nif((inputEmail !== inputConfirmEmail_ui) &amp;&amp; (userSelection === 'new'))\n{\n    userModel.updateRow(userRow, {ErrorType__ui: 'NoMatch'});\n    if (checkmarkField2.hasClass('addCheck')) {\n            checkmarkField2.removeClass('addCheck');\n    }\n    checkmarkField2.addClass('addError');\n    mainDFD.reject();\n    $.unblockUI();\n    flag = false;\n}\n\n\nvar errorTypeUI = userModel.getFieldValue(userModel.getFirstRow(),\"ErrorType__ui\");\n\n// =========================================\n// Check database for existing usernames\n// =========================================\nif(errorTypeUI === '')\n{\n    if (checkmarkField2.hasClass('addError')) \n    {\n            checkmarkField2.removeClass('addError');\n            checkmarkField2.addClass('addCheck');\n    }\n    \n    \n$.blockUI({ \n    message: 'Processing . . .',\n    onBlock: function() {\n        var result ='';\n        try {\n             result = sforce.apex.execute('OnlineSalesUserValidation','userValidation', {userName:inputEmail });  \n             console.log(result);\n             var resp;\n             var res;\n            \n             if(result[0].includes(\"AUTHID\"))\n             {\n                 resp=result[0].split(\"AUTHID\");\n                 res=resp[0];\n                 authID=resp[1];\n                 console.log('resp User validation:'+resp);\n                 console.log('UV res '+res);\n                 console.log('UV authID'+authID);\n             }\n             else\n             {\n                 res=result[0];\n             }\n             \n             if(res === ''){\n                  \n                  flag = false; //STOP User on Step-2 itself      \n                    \n                    var userSelModel = skuid.model.getModel('UserSelections');      \n                    var selRow = userSelModel.getFirstRow();        \n                    userSelModel.updateRow(selRow, {errorCode__ui: 'faultCode'});       \n                    userSelModel.updateRow(selRow, {errorMessage__ui: 'UserValidation Service Unavailable : result-blank' });     \n                    \n                    mainDFD.reject(); \n                    $.unblockUI();\n             }\n             else if(res.indexOf('Error') !== -1){\n                  \n                  flag = false; //STOP User on Step-2 itself      \n                    \n                    var userSelModel1 = skuid.model.getModel('UserSelections');      \n                    var selRow1 = userSelModel1.getFirstRow();        \n                    userSelModel1.updateRow(selRow1, {errorCode__ui: 'faultCode'});       \n                    userSelModel1.updateRow(selRow1, {errorMessage__ui: res });     \n                    \n                    mainDFD.reject(); \n                    $.unblockUI();\n             }\n             else if(!res.includes('USER_FOUND') &amp;&amp; !res.includes('USER_NOT_FOUND')){\n                        \n                        flag = false; //STOP User on Step-2 itself      \n                    \n                        var userSelModel2 = skuid.model.getModel('UserSelections');      \n                        var selRow2 = userSelModel2.getFirstRow();        \n                        userSelModel2.updateRow(selRow2, {errorCode__ui: 'faultCode'});       \n                        userSelModel2.updateRow(selRow2, {errorMessage__ui: res });     \n                        \n                        mainDFD.reject(); \n                        $.unblockUI();\n             }\n        }\n        catch(e) {\n            console.log('ERROR OCCURED:- ',e);\n            flag = false; //STOP User on Step-2 itself      \n                    \n            var userSelModel = skuid.model.getModel('UserSelections');      \n            var selRow = userSelModel.getFirstRow();        \n            userSelModel.updateRow(selRow, {errorCode__ui: 'faultCode'});       \n            userSelModel.updateRow(selRow, {errorMessage__ui: e.faultstring });     \n            \n            mainDFD.reject(); \n            $.unblockUI();\n        }\n        // If it's an existing user and there's no username found, add error\n        if(res === 'USER_NOT_FOUND' &amp;&amp; userSelection === 'existing') {\n            console.log('User Name is Available!');\n            userModel.updateRow(userRow, {ErrorType__ui: 'NoUserName'});\n            // Add error icon\n            if (checkmarkField.hasClass('addCheck')) {\n                    checkmarkField.removeClass('addCheck');\n            }\n            checkmarkField.addClass('addError');\n            mainDFD.reject();\n            $.unblockUI();\n            flag = false;\n        }\n        // If it's a new user and there's an existing username found, add error\n        else if (res === 'USER_FOUND' &amp;&amp; userSelection === 'new')\n        {\n            console.log('This User Already Exists!');\n            userModel.updateRow(userRow, {ErrorType__ui: 'ExistingUserName'});\n            // Add error icon\n            if (checkmarkField1.hasClass('addCheck')) {\n                    checkmarkField1.removeClass('addCheck');\n            }\n            checkmarkField1.addClass('addError');\n            mainDFD.reject();\n            $.unblockUI();\n            flag = false;\n        }\n        else {\n                    /* BTBS-5724: Duplicate Contact Created on OOE\n                    Developer: Prerna Purwar, 2017/04/03\n                    Update UI field Auth ID on contact model\n                    */\n                    if (res === 'USER_FOUND'){\n                       console.log('authID:'+authID);\n                        if(authID!=null &amp;&amp; authID!='')\n                        {\n                            var contactModel=skuid.$M('NewContact');\n                            var contactRow = contactModel.getFirstRow();\n                            console.log('Contact row:'+contactRow);\n                            contactModel.updateRow(contactRow, {authID__ui: authID});\n                            \n                        }\n                        \n                    }\n                    // End BTBS-5724\n                    \n                    //==================================================\n                    //  Validate address and standardize\n                    //  If any errors BLOCK user, if NOT process further\n                    //==================================================\n                    var uSelModel = skuid.model.getModel('UserSelections');\n                   \n                    var compAddrCheck = skuid.snippet.getSnippet('companyAddressCheck')();\n\n                    compAddrCheck.done(function()\n                    {\n                            var errStatus = uSelModel.getFieldValue(uSelModel.getFirstRow(), 'CompAddressErrorStatus_ui');\n\n                            console.log('From companyAddressCheck.done() ABOVE the errStatus checking Block');\n                        \n                            if (errStatus === null){\n                                \n                                    console.log('errStatus is null and address standardized --- from U_Validation');\n                                    \n                                    var saveCompAddress = skuid.snippet.getSnippet('saveCompanyAddress')();\n                                    saveCompAddress.done(function()\n                                    {\n                                        \n                                            // =========================================\n                                            // No username errors (AND) No Company Address Save Errors \n                                            // Either goTo Trial-PopUp OR goTo Step-3\n                                            // =========================================\n                                            \n                                            if (flag === true) \n                                            {\n                                                userModel.updateRow(userRow, {ErrorType__ui: 'NoErrors'});\n                                                \n                                                // =========================================\n                                                // Generate password for new customers\n                                                // =========================================\n                                                userModel.updateRow(userRow, {Temp_Pwd: null});\n                                                if ((userSelection === 'new') &amp;&amp; (userModel.getFieldValue(userRow, 'Temp_Pwd') === null)) {\n                                                    //OnlineSalesCatalogController.getTempPassword('8',function(result){ userModel.updateRow(userRow,{ Temp_Pwd: result }); });\n                                                    // Add checkmark icons\n                                                    if (checkmarkField1.hasClass('addError')) {\n                                                        checkmarkField1.removeClass('addError');\n                                                    }\n                                                    if (checkmarkField2.hasClass('addError')) {\n                                                        checkmarkField2.removeClass('addError');\n                                                    }\n                                                    checkmarkField1.addClass('addCheck');\n                                                    checkmarkField2.addClass('addCheck');\n                                                }\n                                                else if (userSelection === 'existing') {\n                                                    // Add checkmark Icons\n                                                    if (checkmarkField.hasClass('addError')) {\n                                                        checkmarkField.removeClass('addError');\n                                                    }\n                                                    checkmarkField.addClass('addCheck');\n                                                }\n                                                \n                                                // =========================================\n                                                // If Trial - just go to order popup\n                                                // =========================================\n                                                if (selOfferType === \"TRIAL\" &amp;&amp; opted_For_CC === false) {\n                                                    \n                                                    //    Here Make a call to Snippet that Call Service to CreateCompany \n                                                    var companyCreated = skuid.snippet.getSnippet('CreateCompany')();\n                                                    companyCreated.done(function(){\n                                                    \n                                                        var userModel = skuid.$M('NewUser'),\n                                                        userRow = userModel.getFirstRow(),\n                                                        success = userModel.getFieldValue(userModel.getFirstRow(), 'success_ui'),\n                                                        errMsgReceived = userModel.getFieldValue(userModel.getFirstRow(), 'errorMessage_ui');\n                                                        \n                                                        if(success === true)\n                                                        {\n                                                            \n                                                                    //$('#orderPopup').click();\n                                                                    skuid.snippet.getSnippet('navStep4')();\n                                                                    // Shashi - commenting close opty code for now, should be enabled for future sprints\n                                                                    // skuid.snippet.getSnippet('closeOpportunity')();\n                                                            \n                                                                    var popup = $('#orderPopupGrid').parent();\n                                                        \n                                                                    // This disables the esc key on the popup\n                                                                    $(popup).dialog({ closeOnEscape: false });\n                                                                    var maxHeight = 420;\n                                                                    popup.css('padding', '0px');\n                                                                    popup.parent().css('padding', '0px');\n                                                                    \n                                                                    // Adjust the height;\n                                                                    if (selectedModel.getFieldValue(selectedModel.getFirstRow(), 'hasDiscount') === false){\n                                                                                maxHeight = maxHeight - 10;\n                                                                        }\n                                                                        else{\n                                                                                maxHeight = maxHeight + 20;\n                                                                        }\n                                                                        popup.parent().css('height', maxHeight + 'px');\n                                                                    \n                                                                            \n                                                                    $.unblockUI()","skuid__Layout3__c":";\n                                                                    mainDFD.resolve();\n                                                                        \n                                                        }\n                                                        else{\n                                                                    //alert USER on Error/Failure\n                                                                    alert(errMsgReceived);\n                                                                    mainDFD.reject();\n                                                                    $.unblockUI();\n                                                        }\n                                                    });\n                                                    \n                                                    \n                                                }\n                                                // =========================================\n                                                // If not a trial, go to Step 3\n                                                // =========================================\n                                                else\n                                                {\n                                                    \n                                                    console.log('this is a PAID Scenario - FROM User Validation Snippet');\n                                                           \n                                                    wizard.navigate('step3');\n                                                    var userSelModel = skuid.$M('UserSelections');\n                                                    userSelModel.updateRow(userSelModel.getFirstRow(), {currentStep: 'step3', selectedStep: 'step3'});\n                                                    userSelModel.save();\n                                                    \n                                                    // Set up page 3 with CC icons\n                                                    var ccField = $('.addCCImages').find('.nx-field input');\n                                                    if (!ccField.hasClass('addAllCC')) {\n                                                        ccField.addClass('addAllCC');\n                                                    }\n                                                    \n                                                    var fromLead = userSelModel.getFieldValue(userSelModel.getFirstRow(), 'FromLead__ui');\n                                                     \n                                                    // If this is from an existing account \n                                                    if ((fromLead === false) &amp;&amp; (addressModel.data.length !== 0) &amp;&amp; (newAddressModel.data.length === 0)) {\n                                                        //newAddressModel.updateData(function(){\n                                                                        if(newAddressModel.data.length === 0) {\n                                                                             // New account creation - copy address from original account\n                                                                            var newAddress = addressModel.getFieldValue(addressModel.getFirstRow(), 'Name');\n                                                                            var newCity = addressModel.getFieldValue(addressModel.getFirstRow(), 'City__c');\n                                                                            var newZip = addressModel.getFieldValue(addressModel.getFirstRow(), 'Postal_Code__c');\n                                                                            //var newDept = addressModel.getFieldValue(addressModel.getFirstRow(), 'Department__c');\n                                                                            var newState = addressModel.getFieldValue(addressModel.getFirstRow(), 'State__c');\n                                                                            var newCountry = addressModel.getFieldValue(addressModel.getFirstRow(), 'Country__c');\n                                                                            \n                                                                            var newRowAccount = newAddressModel.createRow({ additionalConditions : [\n                                                                                {field : 'Name', value : newAddress},\n                                                                                {field : 'City__c', value : newCity},\n                                                                                {field : 'Postal_Code__c', value : newZip},\n                                                                                {field : 'State__c', value : newState},\n                                                                                {field : 'Country__c', value : newCountry},\n                                                                                {field : 'Country_4CA_ui', value : newCountry}]\n                                                                                \n                                                                            });\n                                                                            //{field : 'UpdateAccount', value : true},{field : 'Department__c', value : newDept},]\n                                                                        }\n                                                                        else {\n                                                                                     // No new account creation - abandon scenario - pull in the existing address\n                                                                                    // newAddressModel.updateRow(newAddressModel.getFirstRow(), {UpdateAccount: true});\n                                                                        }\n                                                            $.unblockUI();\n                                                       // });\n                                                    }\n                                                    else if(newAddressModel.data.length === 0) \n                                                            {\n                                                                            newAddressModel.createRow();\n                                                                            $.unblockUI();\n                                                            }\n                                                            else \n                                                            {\n                                                                $.unblockUI();\n                                                            }\n                                                            \n                                                            /*** BTBS-5275 Changes ===== BEGIN ****/\n                                                                var region = selectedModel.getFieldValue(selectedModel.getFirstRow(), 'region');\n                                                                var step3_Visited = skuid.page.params.step3_Visited;\n                                                                \n                                                                if((region === 'USA' || region === 'Canada') &amp;&amp; step3_Visited === false){\n                                                                  \n                                                                            //newAddressModel.updateRow(newAddressModel.getFirstRow(), {Country_4CA_ui: region});\n                                                                    \n                                                                }\n                                                            /*** BTBS-5275 Changes ===== END ****/ \n                                                   \n                                                    \n                                                }\n                                                    //Before finally landing on step-3\n                                                    //Disable sameAs box if company address unavailable\n                                                    var compAddress = skuid.model.getModel('CompanyAddress'),\n                                                        compAddrRow = compAddress.getFirstRow();\n                                                    //var compAddrID = compAddress.getFieldValue(compAddrRow, 'Id');\n                                                    var addrLine1 = compAddress.getFieldValue(compAddrRow, 'AddressLine1_ui');\n                                                    \n                                                    if(addrLine1 === null || addrLine1 === '' || addrLine1 === undefined)\n                                                    {\n                                                        skuid.$(\".sameAs\").find(\"input\").each(function(){\n                                                                this.disabled = true;\n                                                                console.log('--- comp address unavilable - so SAME as Disabled.');\n                                                        });\n                                                    }\n                                                    else{\n                                                          skuid.$(\".sameAs\").find(\"input\").each(function(){\n                                                                this.disabled = false;\n                                                                console.log('--- comp address avilable - so SAME as ENABLED.');\n                                                        });\n                                                    }\n                                                    \n                                                    /*skuid.$(\".caCountry\").find(\"select\").each(function(){\n                                                         this.disabled = true; console.log('======= caCountry Disabled =======');\n                                                    });*/\n                                                    \n                                                    /*** BTBS-5275 Changes ===== BEGIN ****/\n        \n                                                    var currRegion = selectedModel.getFieldValue(selectedModel.getFirstRow(), 'region');\n                                                    console.log('@@@ region FROM UserValidation @@@ ',currRegion);\n                                                    \n                                                    var selModel = skuid.$M('UserSelections');\n                                                        if(skuid.page.params.step3_Visited === false){\n                                                            selModel.updateRow(selModel.getFirstRow(), {currentRegion__ui: currRegion});\n                                                        }\n                                                        \n                                            \n                                                    /**** BTBS-5275 Changes ====== END ****/\n                                                    \n                                                \n                                                mainDFD.resolve();\n                                            }\n                                            \n                                            \n                                            \n                                    });\n                                \n                            }\n                    });\n               \n            \n                \n                    \n            \n            \n                }\n        \n            }\n        });\n\n    }\n\n//For either cases of TRIAL/PAID, need to capture sourcecode \nuserSelModel.save();  \n\n//Scroll To TOP Always on Landing Step\n$(\"html, body\").animate({ scrollTop: 0 }, 1);\n\n//When VISITING Step-3 for first time: Set Flag to TRUE\n//Else case will not apply: Means User is navigating back n forth between steps\n/*if(skuid.page.params.step3_Visited === false){\n    skuid.page.params.step3_Visited = true;\n}*/\n\nreturn mainDFD.promise();\n\n//END of Snippet\n</jsitem><jsitem location=\"external\" name=\"AJAXKit\" cachelocation=\"false\" url=\"/soap/ajax/36.0/apex.js\">var params = arguments[0],\n\t$ = skuid.$;\n</jsitem><jsitem location=\"inlinesnippet\" name=\"orderDetailsActivities\" cachelocation=\"false\">var params = arguments[0],\n    $ = skuid.$,\n    mainDFD = $.Deferred(),\n    wizard = skuid.component.getById('mywizard');\n\n// ========================================================================\n// Description: This function is used when going from\n//              Step 1 to Step 2.  Functionality differs depending on \n//              input scenario.  Opportunity object is updated with selected\n//              product.\n//  From Lead -&gt; Converts Lead, creates a new account / opportunity / contact\n//  From Account (w/ CAN or COID) -&gt; Creates a new account / opportunity / contact\n//                                   based on new company name\n//  From Account (abandon scenario) -&gt; Uses existing account / opportunity / contact\n// ========================================================================\n\n// ==============================\n// Set up Models / Variables \n// ==============================\nvar subModel = skuid.model.getModel('MonthlyAnnualSelection'), \n\tsubModelRow = subModel.getFirstRow(),\n\tsel = subModel.getFieldValue(subModelRow, 'MonthlyChoice'),\n\tpanel = $('#mainGrid').find('#detailDiv');\nvar userSelModel = skuid.model.getModel('UserSelections'),\n    userSelModelRow = userSelModel.getFirstRow();\n    fromLead = userSelModel.getFieldValue(userSelModelRow, 'FromLead__ui'),\n    accountName = userSelModel.getFieldValue(userSelModelRow, 'AccountName__ui');\n    accountName = skuid.utils.decodeHTML(accountName.replace(/&amp;amp;/g, '&amp;'));\nvar masterAdminModel = skuid.model.getModel('MasterAdmin');\n\nvar errorDB = skuid.model.getModel('ErrorDB');\nvar errorDBRow = errorDB.getFirstRow();\nvar leadRecordTemp = '';  \n\n\n\n\n\n// ==============================\n// Moved selected row into model\n// ==============================\nvar selectedRowModel = skuid.model.getModel('SelectedRow'),\n    flag = false;\n    selectedRow = {};\n    selectedRowModel.abandonAllRows();\n// Find highlighted row for the selected offer\nvar tableName = ['#CatalogTable1', '#CatalogTableTrial1', '#CatalogTable2', '#CatalogTableTrial2'];\nfor (i = 0; i&lt;tableName.length; i++) {\n    $(tableName[i] + ' table tbody tr').each(function(){\n        if ($(this).hasClass('highlighted-row')) {\n            selectedRow = $(this).data('object');\n            selectedRowModel.adoptRow(selectedRow.row);\n            flag = true;\n            return false;\n        }\n    });\n}\n\nuserSelModel.updateRow(userSelModelRow, {buttonPressed__ui: \"Next\"});\nuserSelModel.save();\n    \n// If no rows were selected, show an error\nif (flag === false) {\n    mainDFD.reject();\n    $.unblockUI();\n    return false;\n} /* START - #BTBS-5974 - #Sriteja - Throwing an error if Product doesnt have a List Price for current Selection */\nelse{\n    var currentSelection = selectedRowModel.getFirstRow();\n    \n    if(userSelModelRow == null || userSelModelRow == undefined || currentSelection == null || currentSelection == undefined || \n        (userSelModelRow.MonthlyChoice &amp;&amp; currentSelection.bundleListPrice ==0) || \n        (!userSelModelRow.MonthlyChoice  &amp;&amp; currentSelection.annualListPrice ==0) ){\n         console.log('Monthly Charge : ' + currentSelection.bundleListPrice + '\\nAnnual Charge : ' + currentSelection.annualListPrice);\n         \n         userSelModel.updateRow(userSelModelRow, { orderError__ui: 'This offer is not eligible for '+ (userSelModelRow.MonthlyChoice ? 'Monthly' : 'Annual') +' Subscription' });\n                                        \n         mainDFD.reject();\n         $.unblockUI();\n         return false;\n    }\n}\n/* END - #BTBS-5974  - #Sriteja - Throwing an error if Product doesnt have a List Price for current Selection */\n\n\nfunction goProcessOrder(){\n    //==============================\n    //Invoke the Helper function to continue further processing\n    //==============================\n        var orderProcessing = skuid.snippet.getSnippet('processOrder')();\n                            \n            orderProcessing.done(function(){\n                                                                                        \n                        $.unblockUI();\n                        mainDFD.resolve();\n                                                                                     \n            });\n}\n//================\n//CareProfile Validation on Bulk Offers\n//================\n//if (flag){\n    \n    var selRow = skuid.model.getModel('SelectedRow');\n    var currentSegment = selRow.getFieldValue(selRow.getFirstRow(), 'segment');\n    \n    var currentUser = skuid.$M('CountryFromLoggedInUser');\n    var currentUserProfile = currentUser.getFieldValue(currentUser.getFirstRow(),'Profile.Name');\n    \n    //var bulkSegment = skuid.$L('OnlineSales_SpecialPartner');\n    \n    var Profiles = skuid.$M('OnlineSales_CareProfiles');\n    var profileList = {};\n    var bulkFlag = false;\n    \n    $.each(Profiles.getRows(),function(){\n    \tvar p = Profiles.getFieldValue(this,'Name');\n        profileList[p] = p;\n    });\n    \n    var BulkSegments = skuid.$M('BulkSegments');   \n    var BulkSegmentCondition = BulkSegments.getConditionByName('BulkSegmentCondition');\n\n                        BulkSegments.abandonAllRows();\n                        BulkSegments.setCondition(BulkSegmentCondition, currentSegment);\n                        BulkSegments.activateCondition(BulkSegmentCondition);\n                        \n                        BulkSegments.updateData(function(){\n\n                                    if(BulkSegments.data.length){\n                                            var segmentFound = BulkSegments.getFieldValue(BulkSegments.getFirstRow(),'Segment__c');\n                                            if(segmentFound === currentSegment){\n                                                skuid.page.params.bulkSegment = 'YES';\n                                                \n                                                console.log('*** bulk OFFER **** currentUserProfile = ',currentUserProfile);\n                                        \t\tif(profileList[currentUserProfile] === currentUserProfile){\n                                                    console.log('*** Care Profile Matched ***',currentUserProfile);\n                                        \t\t\tbulkFlag = true;\n                                        \t\t\n                                        \t\t}\n                                            }\n                                            else{\n                                                skuid.page.params.bulkSegment = 'NO';\n                                            }\n                                    }\n                                    else{\n                                            skuid.page.params.bulkSegment = 'NO';\n                                        }\n                                    \n                                    if(bulkFlag){\n                                    \t//BlockUser if this is a Care Profile selecting Bulk Offer\n                                    \tuserSelModel.updateRow(userSelModelRow, { orderError__ui: 'Care agents are not authorized to use the bulk pricing offers' });\n                                    \t\n                                    \tmainDFD.reject();\n                                        $.unblockUI();\n                                        return false;\n                                    \t\n                                    }\n    \n                        });\n    \n   /* if(currentSegment === bulkSegment){\n    \n        console.log('*** bulk OFFER **** currentUserProfile = ',currentUserProfile);\n    \t\tif(profileList[currentUserProfile] === currentUserProfile){\n                console.log('*** Care Profile Matched ***',currentUserProfile);\n    \t\t\tbulkFlag = true;\n    \t\t\n    \t\t}\n    \t\n    }*/\n    \n   /* if(bulkFlag){\n    \t//BlockUser\n    \tuserSelModel.updateRow(userSelModelRow, { orderError__ui: 'Care agents are not authorized to use the bulk pricing offers' });\n    \t\n    \tmainDFD.reject();\n        $.unblockUI();\n        return false;\n    \t\n    }*/\n//}\n\n\n//==================================\n//  Helper Function Definition\n//==================================\nskuid.snippet.registerSnippet('processOrder', function(){\n    \n                        \nvar params = arguments[0],\n    $ = skuid.$,\n    mainDFD = $.Deferred(),\n    wizard = skuid.component.getById('mywizard');\n\n// ========================================================================\n// Description: This function is used when going from\n//              Step 1 to Step 2.  Functionality differs depending on \n//              input scenario.  Opportunity object is updated with selected\n//              product.\n//  From Lead -&gt; Converts Lead, creates a new account / opportunity / contact\n//  From Account (w/ CAN or COID) -&gt; Creates a new account / opportunity / contact\n//                                   based on new company name\n//  From Account (abandon scenario) -&gt; Uses existing account / opportunity / contact\n// ========================================================================\n\n// ==============================\n// Set up Models / Variables \n// ==============================\nvar subModel = skuid.model.getModel('MonthlyAnnualSelection'), \n\tsubModelRow = subModel.getFirstRow(),\n\tsel = subModel.getFieldValue(subModelRow, 'MonthlyChoice'),\n\tpanel = $('#mainGrid').find('#detailDiv');\nvar userSelModel = skuid.model.getModel('UserSelections'),\n    userSelModelRow = userSelModel.getFirstRow();\n    fromLead = userSelModel.getFieldValue(userSelModelRow, 'FromLead__ui'),\n    accountName = userSelModel.getFieldValue(userSelModelRow, 'AccountName__ui');\n    accountName = skuid.utils.decodeHTML(accountName.replace(/&amp;amp;/g, '&amp;'));\nvar masterAdminModel = skuid.model.getModel('MasterAdmin');\n\nvar errorDB = skuid.model.getModel('ErrorDB');\nvar errorDBRow = errorDB.getFirstRow();\n\nvar selectedRowModel = skuid.model.getModel('SelectedRow');\n\nvar leadRecordTemp = '';  \n\n// ======================================================\n// Start creation of new account / contact / opportunity\n// ======================================================\n\n// ==============================\n// Set up Models / Variables \n// ==============================\nvar leadModel = skuid.$M('Lead');\n\nvar accountModel = skuid.$M('Account');\nvar accountCondition = accountModel.getConditionByName('AccountIDCondition'),\n    accountPageCondition = accountModel.getConditionByName('AccountIDPageParameter');\nvar newAccountModel = skuid.$M('NewAccount');\nvar newAccountCondition = newAccountModel.getConditionByName('AccountIDCondition'),\n    newAccountPageCondition = newAccountModel.getConditionByName('AccountIDPageParameter');\n\nvar contactModel = skuid.$M('Contact');\nvar contactCondition = contactModel.getConditionByName('ContactIDCondition'),\n    contactPrimaryCondition = contactModel.getConditionByName('primaryFilter'),\n    contactAccountCondition = contactModel.getConditionByName('ContactAccountCondition');\n    \nvar newContactModel = skuid.$M('NewContact');\nvar newContactCondition = newContactModel.getConditionByName('ContactIDCondition');\n\nvar opptyModel = skuid.$M('Oppty');\nvar opptyCondition = opptyModel.getConditionByName('OpptyIDCondition'),\n    opptyAccountCondition = opptyModel.getConditionByName('OpptyAccountCondition'),\n    opptyStageCondition = opptyModel.getConditionByName('OpptyStageCondition'),\n    opptyProductCondition = opptyModel.getConditionByName('OpptyProductCondition');\nvar newOpptyModel = skuid.$M('NewOppty');\nvar newOpptyCondition = newOpptyModel.getConditionByName('OpptyIDCondition');\n\nvar addressModel = skuid.$M('Address');\nvar addressCondition = addressModel.getConditionByName('AccountAddress'),\n    addressPrimaryCondition = addressModel.getConditionByName('primaryFilter');\n\nvar billingModel = skuid.$M('BillingProfile'), \n    billingCondition = billingModel.getConditionByName('AccountID2BillingProfile');\n\nvar currentOfferSelected = selectedRowModel.getFirstRow();\nconsole.log('Current Selected Offer is Below ###');\nconsole.log(currentOfferSelected);\n\nvar userModel = skuid.$M('NewUser');\nvar userRow = userModel.getFirstRow();\n\nvar accountRow = accountModel.getFirstRow();\nvar contactRow = contactModel.getFirstRow();\n\nvar leadRecord = leadModel.getFirstRow(); \n\nvar accID = '';\nvar contactID = '';\nvar opptyID = '';\nvar addressID = '';\nvar leadConvertedDetails = {};\nvar accountCOID = accountModel.getFieldValue(accountRow, 'Company_ID__c');\nvar finalType ='';\n\n//============================================================\n//=======================================\n//  Function for CompanyAddress Utility \n// =======  BEGIN =======================\n//function companyAddressUtils(){\nskuid.snippet.registerSnippet('companyAddressUtils', function(leadAddressID){\n    \n        var $ = skuid.$,\n        mainDFD = $.Deferred();\n        \n        console.log('**** FROM CompAddressootilty --- leadAddressID ***** ',leadAddressID);\n        console.log('+++++ type of leadAddressID',typeof leadAddressID);\n        \n        //Setup Variables\n        var accModel = skuid.$M('Account');\n        var accRow = accModel.getFirstRow();\n        var accountID = accModel.getFieldValue(accRow,'Id');\n        var accCAN = accModel.getFieldValue(accRow,'CAN__c');\n        var accCompanyID = accModel.getFieldValue(accRow,'Company_ID__c');\n        \n        var ExtngCompAddress = skuid.$M('ExtngCompAddress');   \n        var addressCondition = ExtngCompAddress.getConditionByName('extngCompAddress2AccountID');\n        var addressPrimaryCondition = ExtngCompAddress.getConditionByName('extngCompAddressPrimary');\n        var leadAddressIDCondition = ExtngCompAddress.getConditionByName('leadAddressIDCondition');\n        \n        //var compAddressUpdate = ExtngCompAddress.updateData();\n                \n        var CompanyAddress = skuid.$M('CompanyAddress');\n        /*\n        * BTBS-5975, BTBS-6000 Start\n        */\n        skuid.page.params.isAbandonded = false;\n        /*\n        * BTBS-5975, BTBS-6000 End\n        */\n        var isAbandonded = false;\n            \n                if((accCompanyID === '' || accCompanyID === null) &amp;&amp; (accCAN === '' || accCAN === null)) \n                {\n                    isAbandonded = true;\n                    /*\n                    * BTBS-5975, BTBS-6000 Start\n                    */\n                    skuid.page.params.isAbandonded = true;\n                    /*\n                    * BTBS-5975, BTBS-6000 End\n                    */\n                    console.log('*** This is an ABANDONED Account  4m companyAddressUtils ***');\n                }\n       \n\n        //compAddressUpdate.done(function(){\n                    \n                    if(fromLead === false)\n                    {\n                        ExtngCompAddress.abandonAllRows();\n                        ExtngCompAddress.setCondition(addressCondition, accountID);\n                        ExtngCompAddress.activateCondition(addressCondition);\n                        ExtngCompAddress.activateCondition(addressPrimaryCondition);\n        \n                        console.log('------ fromAccount case ---- compAddress ');\n                        //console.log('ExtngCompAddress Data = ',ExtngCompAddress.data);\n                        \n                            ExtngCompAddress.updateData(function(){\n                                    if(ExtngCompAddress.data.length !== 0 &amp;&amp; isAbandonded){\n                                        \n                                                            var extngAddrRow = ExtngCompAddress.getFirstRow();\n                                                            // New CompanyAddress creation - COPY address from existing CompanyAddress\n                                                            var newAddress = ExtngCompAddress.getFieldValue(extngAddrRow, 'Name');\n                                                            var newCity = ExtngCompAddress.getFieldValue(extngAddrRow, 'City__c');\n                                                            //var newDept = ExtngCompAddress.getFieldValue(extngAddrRow, 'Department__c');\n                                                            var newZip = ExtngCompAddress.getFieldValue(extngAddrRow, 'Postal_Code__c');\n                                                            var newState = ExtngCompAddress.getFieldValue(extngAddrRow, 'State__c');\n                                                            var newCountry = ExtngCompAddress.getFieldValue(extngAddrRow, 'Country__c');\n                                        \n                                            if(CompanyAddress.data.length === 0) \n                                                    {\n                                                            var newRowCompAddress = CompanyAddress.createRow({ additionalConditions : [\n                                                                                                                    {field : 'AddressLine1_ui', value : newAddress},\n                                                                                                                    {field : 'City_ui', value : newCity},\n                                                                                                                    {field : 'PostalCode_ui', value : newZip},\n                                                                                                                    {field : 'State_ui', value : newState},\n                                                                                                                    {field : 'Country__c', value : newCountry},\n                                                                                                                    {field : 'Enter_Credit_Card__ui', value: false}]\n                                                            });\n                                                        mainDFD.resolve();    \n                                                    }\n                                                    else{\n                                                        \n                                                            CompanyAddress.updateRow(CompanyAddress.getFirstRow(), \n                                                                                        {\n                                                                                           AddressLine1_ui :newAddress,\n                                                                                           City_ui : newCity,\n                                                                                           PostalCode_ui : newZip,\n                                                                                           State_ui : newState,\n                                                                                           Country__c : newCountry,\n                                                                                           Enter_Credit_Card__ui : false\n                                                                                        });\n                                                           mainDFD.resolve();\n                                                    }\n                                    }\n                                \n                            });\n                        \n                                    \n                                     if(ExtngCompAddress.data.length === 0){\n                                                \n                                                if(CompanyAddress.data.length === 0)\n                                                {\n                                                        CompanyAddress.createRow();\n                                                        mainDFD.resolve();\n                                                }\n                                                else\n                                                {\n                                                        mainDFD.resolve();\n                                                }\n                                    }\n                                    else if(CompanyAddress.data.length === 0)\n                                                {\n                                                        CompanyAddress.createRow();\n                                                        mainDFD.resolve();\n                                                }\n                                        \n                         \n                                 \n                    }\n                    \n                    else if (fromLead === true){  //If From Lead\n                                \n\n\t\t\t\t\t\t\t\tif(leadAddressID !== undefined &amp;&amp; leadAddressID !== null &amp;&amp; leadAddressID !== ''){\n\n        \t\t\t\t\t\t\t\tif(CompanyAddress.data.length === 0){\n\n        \t\t\t\t\t\t\t\t\tExtngCompAddress.abandonAllRows();\n        \t\t\t\t\t\t\t\t\tExtngCompAddress.deactivateCondition(addressCondition);\n        \t\t\t\t\t\t\t\t\tExtngCompAddress.deactivateCondition(addressPrimaryCondition);\n        \t\t\t\t\t\t\t\t\tExtngCompAddress.setCondition(leadAddressIDCondition, leadAddressID);\n        \t\t\t\t\t\t\t\t\tExtngCompAddress.activateCondition(leadAddressIDCondition);\n\n        \t\t\t\t\t\t\t\t\tExtngCompAddress.updateData(function(){\n\n        \t\t\t\t\t\t\t\t\t\t\tvar extngAddrRow = ExtngCompAddress.getFirstRow();\n                                                            \n                                                            var newAddress = ExtngCompAddress.getFieldValue(extngAddrRow, 'Name');\n                                                            var newCity = ExtngCompAddress.getFieldValue(extngAddrRow, 'City__c');\n                                                            var newZip = ExtngCompAddress.getFieldValue(extngAddrRow, 'Postal_Code__c');\n                                                            var newState = ExtngCompAddress.getFieldValue(extngAddrRow, 'State__c');\n                                                            var newCountry = ExtngCompAddress.getFieldValue(extngAddrRow, 'Country__c');\n                                \n                                                            var newRowCompAddress = CompanyAddress.createRow({ additionalConditions : [\n                                                                                                                    {field : 'AddressLine1_ui', value : newAddress},\n                                                                                                                    {field : 'City_ui', value : newCity},\n                                                                                                                    {field : 'PostalCode_ui', value : newZip},\n                                                                                                                    {field : 'State_ui', value : newState},\n                                                                                                                    {field : 'Country__c', value : newCountry},\n                                                                                                                    {field : 'Enter_Credit_Card__ui', value: false}]\n                                                            });\n\n                                                        mainDFD.resolve();\n\n        \t\t\t\t\t\t\t\t\t});\n\n        \t\t\t\t\t\t\t\t}\n        \t\t\t\t\t\t\t\telse\n                                        { //Navigating FROM Lead Flow\n                                                        mainDFD.resolve();\n                                        }\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\tif(CompanyAddress.data.length === 0)\n                                                {\n                                                        CompanyAddress.createRow();\n                                                        mainDFD.resolve();\n                                                }\n                                                else\n                                                { //Navigating FROM Lead Flow\n                                                        mainDFD.resolve();\n                                                }\n\t\t\t\t\t\t\t\t}\n\n                                 \n                    }\n                    \n                    \n       // });\n        \n    return mainDFD.promise(); \n        \n});\n// ==========   Utility Ends =============\n\n\n\n// =========================================================\n// Call APEX controller to convert the lead and \n//      update the opportunity line item\n// =========================================================\n//function doConvertLead(leadID,accID,contactID,opptyID,addressID)\nskuid.snippet.registerSnippet('doConvertLead', function(leadID,accID,contactID,opptyID,addressID)\n{\n    var $ = skuid.$;\n    var mainDFD = $.Deferred();\n    var userSelModel = skuid.model.getModel('UserSelections'), offerCountry = selectedRowModel.getFieldValue(selectedRowModel.getFirstRow(),'region'),\n        userSelModelRow = userSelModel.getFirstRow();\n    \n    //console.log('@@@ leadID,accID,contactID,opptyID,addressID ===== ',leadID,accID,contactID,opptyID,addressID);\n    console.log('leadID @@@ ',leadID);\n    console.log('accID @@@ ',accID);\n    console.log('contactID @@@ ',contactID);\n    console.log('addressID @@@ ',addressID);\n    console.log('opptyID @@@ ',opptyID);\n    \n    if(opptyID === undefined || opptyID === null){\n        opptyID = '';\n    }\n    \n    console.log('AFTER VALIDATION opptyID @@@ ',opptyID);\n    \n    //var payrollPrice = currentOfferSelected.payrollDiscountedPrice === null ? '0.0':currentOfferSelected.payrollDiscountedPrice;\n    //var QBODiscPrice = currentOfferSelected.discountedPrice === null ? '0.0':currentOfferSelected.discountedPrice;\n    \n    var subscription = userSelModel.getFieldValue(userSelModelRow,'MonthlyChoice') ? \"Monthly\" : \"Annual\";\n    console.log('User subscription = ',subscription);\n    \n    console.log('discountAmount = ',currentOfferSelected.discountAmount);\n    \n                if(currentOfferSelected.discountAmount &gt; 0 ){\n                    \n                    console.log('payrollDiscountedPrice = ',currentOfferSelected.payrollDiscountedPrice);\n                    \n                    payrollPrice = currentOfferSelected.payrollDiscountedPrice;\n                    \n                            if(subscription === 'Monthly'){\n                                \n                                console.log('QBO Monthly , discountedPrice = ',currentOfferSelected.discountedPrice);\n                                    QBODiscPrice = currentOfferSelected.discountedPrice;\n                               }\n                            else if(subscription === 'Annual'){\n                                    console.log('QBO Annual , annualDiscountedPrice = ',currentOfferSelected.annualDiscountedPrice);\n                                    QBODiscPrice = currentOfferSelected.annualDiscountedPrice;\n                                }\n                    \n                    }\n                else{\n                        payrollPrice = '';\n                        QBODiscPrice = '';\n                }\n    \n    \n    OnlineSalesCatalogController.convertMyLead(leadID,accID,contactID,opptyID,addressID,currentOfferSelected.qboProductPriceBookEntryId,\n        currentOfferSelected.payrollProductPriceBookEntryId,QBODiscPrice,payrollPrice,offerCountry,\n        function(result,event)\n        {\n             console.log('Converted Lead Details RECEIVED FROM CALLBACK-Result is BELOW');\n             console.log('EVENT OBJ ###',event);\n             console.log('result OBJ ###',result);\n             var leadID = skuid.page.params.LeadId;\n             var accountID = skuid.page.params.AccountId;\n             \n             if($.isEmptyObject(result)){\n                 \n                 userSelModel.updateRow(userSelModelRow, {orderError__ui: 'Apex Error: Received Empty Response'});\n                 mainDFD.reject(); \n                 $.unblockUI();\n                 \n             }\n             \n                    \n             if (event.status === true) {\n                if (result.errorMsg !== undefined) {\n                    console.log(result.errorMsg);\n                    //userSelModel.updateRow(userSelModelRow, {orderError__ui: 'Error in Converting Lead -- See Console Log'});\n                    userSelModel.updateRow(userSelModelRow, {orderError__ui: result.errorMsg});\n                    userSelModel.save();\n                    //update Error Db and save\n                    \n                    errorDB.updateRow(errorDBRow,\n                    {\n                        Detail_Message__c: result.errorMsg,\n                        Error_Code__c: event.action+ ' -  method '+ event.method,\n                        Error_Description__c: result.errorMsg + ' leadId: '+ leadID,\n                        SFDCId__c : (fromLead)? leadID : accountID \n                        \n                        \n                    });\n                    errorDB.save();\n                    \n                    mainDFD.reject(); $.unblockUI();\n                    //return false;\n                }\n                else {\n                    leadConvertedDetails = result;\n                    userSelModel.updateRow(userSelModelRow, {orderError__ui: null});\n                    userSelModel.save();\n                    \n                    //Setup Variables\n        \t        var accModel = skuid.$M('Account');\n        \t        var accRow = accModel.getFirstRow();\n        \t        \n        \t        var accCAN = accModel.getFieldValue(accRow,'CAN__c');\n        \t        var accCompanyID = accModel.getFieldValue(accRow,'Company_ID__c');\n        \n        \t\t\tvar isAbandoned = false;\n                    \n                        if((accCompanyID === '' || accCompanyID === null) &amp;&amp; (accCAN === '' || accCAN === null)) \n                        {\n                            isAbandoned = true;\n                            console.log('*** This is an ABANDONED Account  4m doConvertLead callback ***');\n                        }\n        \n        \t\t\tif(isAbandoned){\n        \n        \t\t\t\t\t\tvar newOpptyModel = skuid.$M('NewOppty');\n        \t\t\t\t\t\tvar newOpptyCondition = newOpptyModel.getConditionByName('OpptyIDCondition');\n        \n        \t\t\t\t\t\t// Copy opportunity to New Opportunity\n        \t\t\t            newOpptyModel.abandonAllRows();\n        \t\t\t            newOpptyModel.setCondition(newOpptyCondition, result.opportunityId);\n        \t\t\t            newOpptyModel.activateCondition(newOpptyCondition);\n        \t\t\t            newOpptyModel.updateData();\n                \t}\n                    \n                    //Setup the companyAddress accordingly\n                    //companyAddressUtils(); \n                    \n                    var leadAddressID = result.addressId;\n                    var setUpCompanyAddress = skuid.snippet.getSnippet('companyAddressUtils')(leadAddressID);\n                        setUpCompanyAddress.done(function(){\n                                            \n                                            $.unblockUI();\n                                            mainDFD.resolve();\n                                            //dfd.resolve();\n                                            \n                                        });\n                    \n                    \n                }\n            } \n            else {\n                console.log(event.message);\n                //userSelModel.updateRow(userSelModelRow, {orderError__ui: 'Error in Converting Lead -- See Console Log'});\n                userSelModel.updateRow(userSelModelRow, {orderError__ui: event.message});\n                userSelModel.save();\n                //update Error Db and save\n              errorDB.updateRow(errorDBRow,\n                    {\n                        Detail_Message__c: event.message,\n                        Error_Code__c: event.action+' - method '+event.method + '; TYPE = '+event.type,\n                        Error_Description__c: event.message,\n                        SFDCId__c : (fromLead)? leadID : accountID \n                        \n                        \n                    });\n                    errorDB.save();\n                \n                mainDFD.reject(); $.unblockUI();\n                //return false;\n            }\n        });\n    return mainDFD.promise();   \n});\n\n//=============  Lead Convert Utility Ends ===========\n\n//=====================================\n//set New or Existing type to Customer, Based on Company ID (COID) of Account\n//=====================================\n        \n        if (typeof accountCOID !== 'undefined' &amp;&amp; accountCOID) {\n         \n            finalType = 'existing';\n            //console.log(' --------- from COID -------Existing');\n        }\n        else{\n            \n            finalType = 'new';\n            //console.log(' -------- from COID ----- new');\n        }\n        \n        userModel.updateRow(userRow, { NewOrExisting__ui : finalType });\n        \n// ==============\n// From Account\n// ==============\nif (fromLead === false) {\n    // =========================================================\n    // CAN or COID Account, create new account / contact / oppty\n    // =========================================================\n    if ((newAccountModel.getRows().length === 0) &amp;&amp; (accountName !== '')) {\n        // Block the UI\n        $.blockUI({\n           message: 'Processing...'\n        });\n    \n        leadModel.abandonAllRows();\n        var accountId = accountModel.getFieldValue(accountRow, 'Id');\n        var accountCAN = accountModel.getFieldValue(accountRow, 'CAN__c');\n        \n        //var region = accountModel.getFieldValue(accountRow, 'Region__c');\n        //var country = accountModel.getFieldValue(accountRow, 'Country__c');\n        \n        //Setup for region derivation \n        var region = '';\n        var selRow = selectedRowModel.getFirstRow();\n\t    var country = selectedRowModel.getFieldValue(selRow,'region');\n\t    var currCode = selectedRowModel.getFieldValue(selRow,'currencyCode');\n\t    var currSegment = selectedRowModel.getFieldValue(selRow,'segment');\n\t    \n\t    var regionModel = skuid.$M('CountryRegionMap');\n        var regionCondition = regionModel.getConditionByName('regionForSelectedOfferCountry');\n            regionModel.activateCondition(regionCondition);\n        \n        skuid.model.updateData([regionModel], function(){\n        \n                //update region \n\t            region = regionModel.getFieldValue(regionModel.getFirstRow(),'Region__c');\n\t            console.log('-------- finalRegion ----- ',region);\n        });\n        \n        //Account Hierarchy Changes GOES Here\n        var actParentId = accountModel.getFieldValue(accountRow,'ParentId');\n        var parentVal = '',\n            another = skuid.page.params.another,\n            bulkSegment = skuid.page.params.bulkSegment; \n        //var specialSegment = skuid.utils.mergeAsText(\"global\",\"{{$Label.OnlineSales_SpecialPartner}}\"); \n        \n        console.log('---- actParentId is  ----- bulkSegment -----  ',actParentId,bulkSegment);       \n                \n        if(typeof another !== 'undefined' &amp;&amp; another === 'yes' &amp;&amp; bulkSegment === 'YES'){     \n            \n                console.log('--- from ----- another ==== yes ----');\n                if(actParentId === '' || actParentId === null || actParentId === undefined){\n                //if(typeof actParentId !== 'undefined' &amp;&amp; actParentId) {\n                    \n                        parentVal = accountId;   \n                        //console.log('------ FROM ----- parentVal = accountId;  ------ ',parentVal);\n                }       \n                else{       \n                        parentVal = actParentId;    \n                        //console.log('------ FROM -----  parentVal = actParentId;  ------ ',parentVal);\n                }       \n        }\n        \n\n        // Find address on the current account\n        addressModel.abandonAllRows();\n        addressModel.setCondition(addressCondition, accountId);\n        addressModel.activateCondition(addressCondition);\n        addressModel.activateCondition(addressPrimaryCondition);\n        addressModel.updateData();\n        \n        // Clone account with new name\n        newAccountModel.abandonAllRows();\n        var newRowAccount = newAccountModel.createRow({ additionalConditions : [\n                {field : 'Name', value : accountName},\n                {field : 'Region__c',value :region },\n                {field : 'ParentId', value : parentVal},\n                {field : 'Country__c',value : country},\n                {field : 'CurrencyIsoCode',value : currCode}\n        ]});\n        \n        accID = newAccountModel.getFieldValue(newAccountModel.getFirstRow(), 'Id');\n        \n        // Workaround for the record type issue\n        $.each(newAccountModel.getRows(),function(i,row){\n        \tif (!newAccountModel.isRowChanged(row)) return;\n        \tvar changeRow = newAccountModel.getRowChanges(row),\n        \t\tchangesToRemove = [];\n        \n        \tif (changeRow.RecordTypeId) changesToRemove.push('RecordType'); \n        \n        \tif (changesToRemove.length) {\n        \t\tnewAccountModel.cancelRowChanges(row,changesToRemove);\n        \t\tdelete changeRow.RecordTypeId;\n        \t}\n        });\n        \n        // Clone opportunity with new name\n        newOpptyModel.abandonAllRows();\n        var newRowOppty = newOpptyModel.createRow({ additionalConditions:[    \n            {field : 'AccountId', value : accID},\n            {field : 'Name', value : accountName},\n            {field : 'StageName', value : 'Validate'},\n            {field : 'CloseDate', value :  skuid.time.formatDate('yy-mm-dd', new Date())},\n            {field : 'LeadSource', value : 'Phone'},\n            {field : 'Product_Family_of_Interest__c', value : 'QuickBooks Online (QBO)'},\n            {field : 'CurrencyIsoCode',value : currCode}\n        ]});\n        \n        // Update opportunity field with Account CAN if applicable\n        //if (accountCAN !== null) {\n        if (typeof accountCAN !== 'undefined' &amp;&amp; accountCAN) {    \n            \n                newOpptyModel.updateRow(newRowOppty, {Desktop_Migrated_Account_Id__c : accountCAN});\n        }\n        \n        // Get existing contact and create new contact\n        contactModel.deactivateCondition(contactCondition);\n        contactModel.setCondition(contactAccountCondition, accountId);\n        contactModel.activateCondition(contactAccountCondition);\n        contactModel.activateCondition(contactPrimaryCondition);\n        clonedValueConditions = [];\n        contactModel.updateData(function(){\n            contactRow = contactModel.getFirstRow();\n            $.each(contactModel.fields,function(i,field) {\n                var fieldId = field.id;\n                if ((fieldId !== 'Id') &amp;&amp; (fieldId !== 'Id15')) {\n                    clonedValueConditions.push({ field : fieldId, value : contactModel.getFieldValue(contactRow, fieldId) });\n                }\n            });\n    \n            newContactModel.createRow({ additionalConditions : clonedValueConditions });\n            newContactModel.updateRow(newContactModel.getFirstRow(), {AccountId : accID});\n            newContactModel.updateRow(newContactModel.getFirstRow(), {Contact_Role__c : 'Decision Maker'});\n            \n            // Save all the models and run Apex controller for doConvertLead\n            skuid.model.save([newAccountModel, newContactModel, newOpptyModel], {callback: function(result) {\n                if (result.totalsuccess) {\n                    console.log('Record Creation SUCCESS');\n                    \n                    // Grab ID's of newly created models\n                    accID = newAccountModel.getFieldValue(newAccountModel.getFirstRow(), 'Id');\n                    opptyID = newOpptyModel.getFieldValue(newOpptyModel.getFirstRow(), 'Id');\n                    contactID = newContactModel.getFieldValue(newContactModel.getFirstRow(), 'Id'); \n                    leadRecordTemp = ''; \n                    \n                    userSelModel.updateRow(userSelModelRow, {AccountID__ui: accID});\n                    \n                    var userID = newContactModel.getFieldValue(newContactModel.getFirstRow(), 'Email');\n                    var coName = newAccountModel.getFieldValue(newAccountModel.getFirstRow(), 'Name');\n                    \n                    newAccountModel.updateRow(newAccountModel.getFirstRow(), \n                    {\n                        Region__c : region,\n                        Country__c : country\n                    });\n                    newAccountModel.save();\n                    \n                    newOpptyModel.updateRow(newOpptyModel.getFirstRow(), \n                    {\n                        Primary_Contact__c : contactID,\n                        Primary_Contact_Id__c : contactID\n                    });\n                    newOpptyModel.save();\n      \n                    console.log('New Account ID = ' + accID);\n                    console.log('New Oppty ID = ' + opptyID);\n                    console.log('New Contact ID = ' + contactID);\n                    \n                    // Create a new row with BillingProfile with current account ID\n                    if (billingModel.data.length === 0) {\n                        billingModel.createRow();\n                    }\n                    \n                    // Update opportunity with selected item and set Step 2 user ID / Company Names\n                    var doConvertLeadCall = skuid.snippet.getSnippet('doConvertLead')(leadRecordTemp,accID,contactID,opptyID,addressID);\n                    //doConvertLead(leadRecordTemp,accID,contactID,opptyID,addressID).done(function() {\n                    doConvertLeadCall.done(function() {\n                        userModel.updateRow(userRow, \n                        {\n                              UserID_ui: userID,\n                              CompanyName_ui : skuid.utils.decodeHTML(coName),\n                              CurrentUserID_ui : userID\n                        });\n                        \n                        // Query for Master Admin\n                        masterAdminModel.updateData();\n                        \n                        $.unblockUI();\n                        mainDFD.resolve();\n                    });\n                }\n                else {\n                        console.log('------- ERROR SAVING ACCOUNT / CONTACT / OPPORTUNITY...SEE RESULT BELOW -------');\n                        console.log('RESULT ***** ',result);\n                        \n                    if(result.messages.length) {\n                        userSelModel.updateRow(userSelModelRow, {orderError__ui: 'ERROR: '+result.messages.join() });\n                        userSelModel.save();\n                        \n                        mainDFD.reject(); $.unblockUI();\n                        return false;\n                    }\n                    $.unblockUI();\n                }\n            }});\n        });\n    }\n    // =========================================================\n    // No CAN or COID Account (Abandon Scenario)\n    // Use existing account / contact / opportunity\n    // =========================================================\n    else if ((newOpptyModel.getRows().length === 0) &amp;&amp; (accountName === '')) {\n        $.blockUI({\n           message: 'Processing...'\n        });\n        \n        accID = accountModel.getFieldValue(accountModel.getFirstRow(), 'Id');\n        currentAcctName = accountModel.getFieldValue(accountModel.getFirstRow(), 'Name');\n        \n        userSelModel.updateRow(userSelModelRow, {AccountID__ui: accID});\n        \n        // Find Contact of the current account\n        contactModel.abandonAllRows();\n        contactModel.deactivateCondition(contactCondition);\n        contactModel.setCondition(contactAccountCondition, accID);\n        contactModel.activateCondition(contactAccountCondition);\n        contactModel.activateCondition(contactPrimaryCondition);\n        \n        // Find address of the current account\n        addressModel.abandonAllRows();\n        addressModel.setCondition(addressCondition, accID);\n        addressModel.activateCondition(addressCondition);\n        addressModel.activateCondition(addressPrimaryCondition);\n        \n        // Find Opportunity of the current account\n        opptyModel.abandonAllRows();\n        opptyModel.deactivateCondition(opptyCondition);\n        opptyModel.setCondition(opptyAccountCondition, accID);\n        opptyModel.activateCondition(opptyStageCondition);\n        opptyModel.activateCondition(opptyProductCondition);\n\n        skuid.model.updateData([contactModel, addressModel, opptyModel], function(){\n            \n            // Get ID's of the current contact / oppty\n            contactID = contactModel.getFieldValue(contactModel.getFirstRow(), 'Id');\n            opptyID = opptyModel.getFieldValue(opptyModel.getFirstRow(), 'Id');\n            \n             // Copy account to New Account model\n            newAccountModel.abandonAllRows();\n            newAccountModel.setCondition(newAccountCondition, accID);\n            newAccountModel.activateCondition(newAccountCondition);\n            \n            // Copy contact to New Contact model\n            newContactModel.abandonAllRows();\n            newContactModel.setCondition(newContactCondition, contactID);\n            newContactModel.activateCondition(newContactCondition);\n            \n            // Copy opportunity to New Opportunity Model\n            newOpptyModel.abandonAllRows();\n            newOpptyModel.setCondition(newOpptyCondition, opptyID);\n            newOpptyModel.activateCondition(newOpptyCondition);\n            \n            skuid.model.updateData([newAccountModel, newContactModel, newOpptyModel], function(){\n                // Create a new row with BillingProfile with current account ID\n                if (billingModel.data.length === 0) {\n                    billingModel.createRow();\n                }\n            });\n            \n            var userID = contactModel.getFieldValue(contactModel.getFirstRow(), 'Email');\n            var coName = accountModel.getFieldValue(accountModel.getFirstRow(), 'Name');\n            \n            leadRecordTemp = ''; \n            \n            // Update the opportunity with the selected product and populate userID / company name\n            var doConvertLeadCall = skuid.snippet.getSnippet('doConvertLead')(leadRecordTemp,accID,contactID,opptyID,addressID);\n\n            //doConvertLead(leadRecordTemp,accID,contactID,opptyID,addressID).done(function() {\n            doConvertLeadCall.done(function() {\n                userModel.updateRow(userRow, \n                {\n                  UserID_ui: userID,\n                  CompanyName_ui : skuid.utils.decodeHTML(coName),\n                  CurrentUserID_ui : userID\n                });\n                 // Query for Master Admin\n                masterAdminModel.updateData();\n                \n                $.unblockUI();\n                mainDFD.resolve();\n            });\n        });\n    }\n    // =========================================================\n    // Account / contact / opportunity has already been created\n    // Update the opportunity with the new selected item\n    // &lt;This is used when navigating btw steps&gt;\n    // =========================================================\n    else {\n        accID = newAccountModel.getFieldValue(newAccountModel.getFirstRow(), 'Id');\n        opptyID = newOpptyModel.getFieldValue(newOpptyModel.getFirstRow(), 'Id');\n        contactID = newContactModel.getFieldValue(newContactModel.getFirstRow(), 'Id'); \n        leadRecordTemp = ''; \n        \n        var doConvertLeadCall = skuid.snippet.getSnippet('doConvertLead')(leadRecordTemp,accID,contactID,opptyID,addressID);\n        //doConvertLead(leadRecordTemp,accID,contactID,opptyID,addressID).done(function() {\n        doConvertLeadCall.done(function() {    \n            mainDFD.resolve();\n            $.unblockUI();\n        });\n    }\n}\n// =========================================================\n// From lead -&gt; convert the lead and create a new account \n//  / opportunity / contact\n// =========================================================\nelse {\n    // Block the UI when converting a new lead\n    if (newAccountModel.data.length === 0) {\n            $.blockUI({\n            message: 'Processing...'\n        });\n    }\n    \n    // Update the lead model with current lead\n    $.when(leadModel.updateData()).done(function() {\n    \n        leadRecord = leadModel.getFirstRow(); \n    \n        console.log('Lead ID = '+leadRecord.Id);\n        console.log('Lead Status = '+leadRecord.Status);\n        \n        if (leadRecord.Status === 'Converted') {\n             \n             console.log('Lead Status = '+leadRecord.Status);   \n            //$.unblockUI();\n        }\n        \n        accID = '';\n        contactID = '';\n        opptyID = '';\n        addressID = '';\n        \n        //If User Comes BACK after Lead Conversion in 2nd Step and pick another new Item , take existing ones to send for doConvertLead  --By Venkat\n        if(!$.isEmptyObject(newAccountModel.getFirstRow()) &amp;&amp; !$.isEmptyObject(newOpptyModel.getFirstRow()) &amp;&amp; !$.isEmptyObject(newContactModel.getFirstRow())){\n            \n            console.log('Models NOT Empty!!!, USER Came Back to the Catalog!');\n            \n                accID = newAccountModel.getFieldValue(newAccountModel.getFirstRow(), 'Id');\n                opptyID = newOpptyModel.getFieldValue(newOpptyModel.getFirstRow(), 'Id');\n                contactID = newContactModel.getFieldValue(newContactModel.getFirstRow(), 'Id');\n                addressID = '';\n        }\n        \n        // Convert the lead, create a new account / contact / opportunity\n        var doConvertLeadCall = skuid.snippet.getSnippet('doConvertLead')(leadRecord.Id,accID,contactID,opptyID,addressID);\n        //doConvertLead(leadRecord.Id,accID,contactID,opptyID,addressID).done(function() {\n        doConvertLeadCall.done(function() {\n            var allModels = [];\n\n            // Activate Model [Account/Contact/Oppty] Conditions and load/update Models\n            if(!$.isEmptyObject(leadConvertedDetails)){\n                \n                // Set up new account model with newly created account from the lead conversion\n                newAccountModel.setCondition(newAccountCondition,leadConvertedDetails.accountId);\n                newAccountModel.activateCondition(newAccountCondition);\n                allModels.push(newAccountModel);\n                \n                // Set up new contact model with newly created contact from the lead conversion\n                newContactModel.setCondition(newContactCondition,leadConvertedDetails.contactId);\n                newContactModel.activateCondition(newContactCondition);\n                allModels.push(newContactModel);\n                \n                // Set up new opportunity model with newly created opportunity from the lead conversion\n                newOpptyModel.setCondition(newOpptyCondition,leadConvertedDetails.opportunityId);\n                newOpptyModel.activateCondition(newOpptyCondition);\n                allModels.push(newOpptyModel);\n                \n                userSelModel.updateRow(userSelModelRow, {AccountID__ui: leadConvertedDetails.accountId});\n                \n                // Load all models\n                $.when(skuid.model.load(allModels)).then(function() {\n                    console.log('models loaded and ready to go!');\n\n                    var userID = newContactModel.getFieldValue(newContactModel.getFirstRow(), 'Email');\n                    var coName = newAccountModel.getFieldValue(newAccountModel.getFirstRow(), 'Name');\n                    \n                    // Create a new row with BillingProfile with current account ID\n                    if (billingModel.data.length === 0) {\n                        billingModel.createRow();\n                    }\n            \n                    // Populate the UserID and Company Name\n                    userModel.updateRow(userRow, \n                    {\n                          UserID_ui: userID,\n                          CompanyName_ui : skuid.utils.decodeHTML(coName),\n                          CurrentUserID_ui :userID\n                    });\n                    \n                    $.unblockUI();\n                    mainDFD.resolve();\n                });\n            }\n        });\n    }); \n}    \n    \n//Once Order Processed, update Product Langg based on region\nvar offerRegion = selectedRowModel.getFieldValue(currentOfferSelected,'region');\n\n                if(offerRegion &amp;&amp; offerRegion === 'France'){\n                    userModel.updateRow(userModel.getFirstRow(), { Language_ui : 'fr' });\n                    //userModel.save();\n                }\n\nreturn mainDFD.promise();\n\n\n\n});\n\n//======== Helper Function Ends Here ===========================\n// \n//===============  Helper ENDS Here ===================================\n\n//===============================\n// Business Validation BEGINS\n//===============================\n\nif(flag === true){\n\t//row is selected\n\t\n\tvar selRow = selectedRowModel.getFirstRow();\n\tvar region = selectedRowModel.getFieldValue(selRow,'region');\n\tvar currSegment = selectedRowModel.getFieldValue(selRow,'segment');\n\tvar doBlockUser = false;\n\t\n\tvar noEmailFound = false; //BTBP-2744 \n\tvar contactModel = skuid.$M('Contact');\n    var contactCondition = contactModel.getConditionByName('ContactIDCondition'),\n    contactPrimaryCondition = contactModel.getConditionByName('primaryFilter'),\n    contactAccountCondition = contactModel.getConditionByName('ContactAccountCondition');\n    \n\t//Special Partner Billing Codes\n\tvar specialCodes = skuid.model.getModel('SpecialOfferBillingCodes');\n\tvar segmentCondition = specialCodes.getConditionByName('segmentCondition');\n\tspecialCodes.setCondition(segmentCondition, currSegment);\n\tspecialCodes.activateCondition(segmentCondition);\n\tvar specialCodesUpdate = specialCodes.updateData();\n\t\n\tvar userModel = skuid.model.getModel('CountryFromLoggedInUser');\n\tvar userRow = userModel.getFirstRow();\n\tvar currentUser = userModel.getFieldValue(userRow,'Id');\n\t\n\tconsole.log('currentUser -------- ',currentUser);\n\n\tvar userSelModel = skuid.model.getModel('UserSelections');\n\tvar userSelRow = userSelModel.getFirstRow();\n\t\n\tspecialCodesUpdate.done(function(){\n\t        \n\t            if(specialCodes.data.length){\n\t                        \n\t                         console.log('Special Billing Code found for segment ------',currSegment);\n\t                         \n        \t                 var specialRows = specialCodes.getRows(); \n        \t                 var codeFlag = false;\n        \t                  \n        \t                 console.log('specialRows ------',specialRows);\n        \t                \n        \t                 for (var i = 0; i &lt; specialRows.length; i++) \n        \t                 {      \n        \t                     console.log('specialRow['+i+']'+ '------',specialRows[i]);\n        \t                 \n        \t                        if(specialRows[i].User__c !== currentUser)\n        \t                        {\n        \t                            codeFlag = true;\n        \t                        }\n        \t                        else{\n        \t                                codeFlag = false; break;\n        \t                        }\n        \t                        \n        \t                 }\n        \t                 \n        \t                 if(codeFlag){\n        \t                        \n        \t                        //alert('Only approved agents are allowed to use this offer');\n        \t                        userSelModel.updateRow(userSelRow, \n                                                    {\n                                                        orderError__ui : 'Only approved agents are allowed to use this offer'\n                                                    });\n                            \t\tmainDFD.reject();   \n                            \t\t$.unblockUI();\n                            \t\treturn false;\n        \t                 }\n        \t                 else\n        \t                 {\n        \t                        //Rest of all logic should be in HERE\n        \t                        //Country Validation\n                                        \tif(fromLead === true){   //if from Lead\n                                        \t        var leadModel = skuid.model.getModel('Lead'), \n                                        \t            leadRow = leadModel.getFirstRow(), \n                                        \t            leadEmail = leadModel.getFieldValue(leadRow,'Email'),\n                                        \t            customerCountry = leadModel.getFieldValue(leadRow,'Country__c');\n                                        \t            \n                                        \t            var conModel = skuid.model.getModel('NewContact');\n                                                        var inputEmail = conModel.getFieldValue(conModel.getFirstRow(),'Email');\n\n                                        \t            /*if(region !== customerCountry){  \n                                        \t    \n                                        \t                doBlockUser = true;\n                                        \t            }*/\n                                        \t            \n                                        \t            //BTBP-2744\n                                        \t            if((leadEmail === '' || leadEmail === undefined || leadEmail === null) &amp;&amp; (inputEmail === null || inputEmail === '' || inputEmail === undefined)){\n                                        \t                 noEmailFound = true;\n                                        \t                 //alert('Email was not provided. An email address must be provided for new customers, in order to properly send them their password instruction information');\n                                            \t                 userSelModel.updateRow(userSelRow, \n                                                                    {\n                                                                        emailErrorStep2_ui : 'Email was not provided. An email address must be provided for new customers, in order to properly send them their password instruction information'\n                                                                    });\n                                                                /*mainDFD.reject();   \n                                                        \t\t$.unblockUI();\n                                                        \t\treturn false;*/ \n                                                        \t\tgoProcessOrder();\n                                        \t            }\n                                        \t            else{ //EmailAddress Exists on Current Lead\n                                                                    \t        //==============================\n                                                                    \t        //Invoke the Helper function to continue further processing\n                                                                    \t        //==============================\n                                                                    \t        var orderProcessing = skuid.snippet.getSnippet('processOrder')();\n                            \n                                                                                orderProcessing.done(function(){\n                                                                                        \n                                                                                        $.unblockUI();\n                                                                                        mainDFD.resolve();\n                                                                                     \n                                                                                });\n                                                \n                                                            }\n                                        \t    }\n                                        \telse if(fromLead === false){   //if from Account\n                                        \t    \n                                        \t            var accModel = skuid.model.getModel('Account'), \n                                        \t                accRow = accModel.getFirstRow(), \n                                        \t                thisAccID = accModel.getFieldValue(accRow,'Id'),\n                                        \t                customerCountry1 = accModel.getFieldValue(accRow,'Country__c');\n                                        \t                \n                                        \t                \n                                        \t                if(region !== customerCountry1){\n                                        \t                        //doBlockUser = true; \n                                        \t                        \n                                        \t                                //alert('The selected offer is not allowed to place an order');\n                                                                            userSelModel.updateRow(userSelRow, \n                                                                                                {\n                                                                                                    orderError__ui : 'The selected offer is not allowed to place an order'\n                                                                                                });\n                                                                    \t\tmainDFD.reject();   \n                                                                    \t\t$.unblockUI();\n                                                                    \t\treturn false;\n                                        \t                }\n                                        \t            \n                                        \t          \n                                                            \t                            \n                                        \t            //BTBP-2744    \n                                        \t            contactModel.deactivateCondition(contactCondition);\n                                                        contactModel.setCondition(contactAccountCondition, thisAccID);\n                                                        contactModel.activateCondition(contactAccountCondition);\n                                                        contactModel.activateCondition(contactPrimaryCondition);  \n                                                        \n                                        \t            contactModel.updateData(function(){\n                                        \t                    \n                                        \t                    var emailOnContact = contactModel.getFieldValue(contactModel.getFirstRow(),'Email');\n                                        \t                    \n                                        \t                    if(emailOnContact === '' || emailOnContact === undefined || emailOnContact === null){\n                                        \t                               \n                                        \t                           noEmailFound = true;\n                                        \t                         \n                                                                                //alert('Email was not provided. An email address must be provided for new customers, in order to properly send them their password instruction information');\n                                                                                userSelModel.updateRow(userSelRow, \n                                                                                                {\n                                                                                                    emailErrorStep2_ui : 'Email was not provided. An email address must be provided for new customers, in order to properly send them their password instruction information'\n                                                                                                });\n                                                                              /*  mainDFD.reject();   \n                                                                                $.unblockUI();\n                                                                                return false;*/\n                                                                                \n                                                                                goProcessOrder();\n                                                                     \t\n                                        \t                           \n                                        \t                        }\n                                        \t                        else{ //EmailAddress Exists on Account's Contact\n                                                                    \t        //==============================\n                                                                    \t        //Invoke the Helper function to continue further processing\n                                                                    \t        //==============================\n                                                                    \t        var orderProcessing = skuid.snippet.getSnippet('processOrder')();\n                            \n                                                                                orderProcessing.done(function(){\n                                                                                        \n                                                                                        $.unblockUI();\n                                                                                        mainDFD.resolve();\n                                                                                     \n                                                                                });\n                                                \n                                                                    \t}\n                                        \t            \n                                        \t        });\n                                        \t\n                                        \t\n        \t                    }\n\t                    }\n\t            } \n\t            else{  //If NO Records found means NOT a special Code , so move along . . .with Validations and Process further\n                                        \t        \n                                    //Country Validation\n                                        \tif(fromLead === true){   //if from Lead\n                                        \t        var leadModel = skuid.model.getModel('Lead'), \n                                        \t            leadRow = leadModel.getFirstRow(), \n                                        \t            leadEmail = leadModel.getFieldValue(leadRow,'Email'),\n                                        \t            customerCountry = leadModel.getFieldValue(leadRow,'Country__c');\n                                        \t            \n                                        \t            var conModel = skuid.model.getModel('NewContact');\n                                                        var inputEmail = conModel.getFieldValue(conModel.getFirstRow(),'Email');\n\n                                        \t            //If FROM LEAD -- No COUNTRY Validation required\n                                        \t            /*if(region !== customerCountry){  \n                                        \t    \n                                        \t                doBlockUser = true;\n                                        \t            }*/\n                                        \t            \n                                        \t            //BTBP-2744\n                                        \t           if((leadEmail === '' || leadEmail === undefined || leadEmail === null) &amp;&amp; (inputEmail === null || inputEmail === '' || inputEmail === undefined))\n                                        \t            {\n                                        \t                 noEmailFound = true;\n                                        \t                 \n                                        \t                            userSelModel.updateRow(userSelRow, \n                                                                                                {\n                                                                                                    emailErrorStep2_ui : 'Email was not provided. An email address must be provided for new customers, in order to properly send them their password instruction information'\n                                                                                                });\n                                                                                /*mainDFD.reject();   \n                                                                                $.unblockUI();\n                                                                                return false;*/\n                                                                                goProcessOrder();\n                                        \t            }\n                                        \t            else{ //EmailAddress Exists on Current Lead\n                                                                    \t        //==============================\n                                                                    \t        //Invoke the Helper function to continue further processing\n                                                                    \t        //==============================\n                                                                    \t        var orderProcessing = skuid.snippet.getSnippet('processOrder')();\n                            \n                                                                                orderProcessing.done(function(){\n                                                                                        \n                                                                                        $.unblockUI();\n                                                                                        mainDFD.resolve();\n                                                                                     \n                                                                                });\n                                                \n                                                            }\n                                        \t    }\n                                        \telse if(fromLead === false){   //if from Account\n                                        \t    \n                                        \t            var accModel = skuid.model.getModel('Account'), \n                                        \t                accRow = accModel.getFirstRow(), \n                                        \t                thisAccID = accModel.getFieldValue(accRow,'Id'),\n                                        \t                customerCountry1 = accModel.getFieldValue(accRow,'Country__c');\n                                        \t                \n                                        \t                \n                                        \t                if(region !== customerCountry1){\n                                        \t                        //doBlockUser = true; \n                                        \t                            userSelModel.updateRow(userSelRow, \n                                                                                                {\n                                                                                                    orderError__ui : 'The selected offer is not allowed to place an order'\n                                                                                                });\n                                                                    \t\tmainDFD.reject();   \n                                                                    \t\t$.unblockUI();\n                                                                    \t\treturn false;\n                                        \t                }\n                                        \t            \n                                        \t            //BTBP-2744    \n                                        \t            contactModel.deactivateCondition(contactCondition);\n                                                        contactModel.setCondition(contactAccountCondition, thisAccID);\n                                                        contactModel.activateCondition(contactAccountCondition);\n                                                        contactModel.activateCondition(contactPrimaryCondition);  \n                                                        \n                                        \t            contactModel.updateData(function(){\n                                        \t                    \n                                        \t                    var emailOnContact = contactModel.getFieldValue(contactModel.getFirstRow(),'Email');\n                                        \t                    \n                                        \t                    if(emailOnContact === '' || emailOnContact === undefined || emailOnContact === null){\n                                        \t                               \n                                        \t                           noEmailFound = true;\n                                        \t                                               \n                                                                                //alert('Email was not provided. An email address must be provided for new customers, in order to properly send them their password instruction information');\n                                                                                userSelModel.updateRow(userSelRow, \n                                                                                                {\n                                                                                                    emailErrorStep2_ui : 'Email was not provided. An email address must be provided for new customers, in order to properly send them their password instruction information'\n                                                                                                });\n                                                                                /*mainDFD.reject();   \n                                                                                $.unblockUI();\n                                                                                return false;*/\n                                                                                goProcessOrder();\n                                                                     \t\n                                        \t                           \n                                        \t                        }\n                                        \t                        else{ //EmailAddress Exists on Account's Contact\n                                                                    \t        //==============================\n                                                                    \t        //Invoke the Helper function to continue further processing\n                                                                    \t        //==============================\n                                                                    \t        var orderProcessing = skuid.snippet.getSnippet('processOrder')();\n                            \n                                                                                orderProcessing.done(function(){\n                                                                                        \n                                                                                        $.unblockUI();\n                                                                                        mainDFD.resolve();\n                                                                                     \n                                                                                });\n                                                \n                                                                    \t}\n                                        \t            \n                                        \t        });\n                                        \t}\n                                        \t\n                                        \t                \n                    \n                    }\n                    \n                            \n\t            \n\t            \n\t});\n\t\n\t\n} //Flag===true ENDS\n\n/***** https://jira.intuit.com/browse/BTBS-5600  BEGIN *****/\nvar selRowModel = skuid.$M('SelectedRow');\nvar offeredPayrollProductId = selRowModel.getFieldValue(selRowModel.getFirstRow(),'offeredPayrollProductId');\nif(offeredPayrollProductId !== undefined || offeredPayrollProductId !==null || offeredPayrollProductId !==''){\n    var payrollProduct = skuid.$M('OfferedPayrollProduct'); \n    var payrollIDCondition = payrollProduct.getConditionByName('PayrollProductID');\n        payrollProduct.setCondition(payrollIDCondition, offeredPayrollProductId);\n        payrollProduct.updateData(function(){\n                var perEmployeeValue = payrollProduct.getFieldValue(payrollProduct.getFirstRow(),'Per_Employee_Price__c');\n                selRowModel.updateRow(selRowModel.getFirstRow(),{perEmployeeFee__ui : perEmployeeValue});\n        });\n}\n/***** https://jira.intuit.com/browse/BTBS-5600  ENDs HERE *****/\n//Scroll To TOP Always on Landing Step\n$(\"html, body\").animate({ scrollTop: 0 }, 1);\nvar userModel = skuid.model.getModel('UserSelections'), \n    userModelRow = userModel.getFirstRow();\n\nvar conModel = skuid.model.getModel('NewContact');\nvar inputEmail = conModel.getFieldValue(conModel.getFirstRow(),'Email');\n\nif(inputEmail !== null || inputEmail !== '' || inputEmail !== undefined){\n    userModel.updateRow(userModelRow, { emailErrorStep2_ui : null });\n}\n\nvar selectedModel = skuid.model.getModel('SelectedRow');\nskuid.page.params.OfferRegion = selectedModel.getFieldValue(selectedModel.getFirstRow(), 'region');\n\n//Final Success Check when Lead Conversion failed for some reason\n//Make sure we have Account/Contact/Opportunity right in place to proceed\n//Check all three Ids are 15/18 of length and prefixes are correct\n\n\n\nreturn mainDFD.promise();\n\n</jsitem><jsitem location=\"inline\" name=\"wizardNav\" cachelocation=\"false\" url=\"\">// =============================================\n// Description: Function used to navigate between\n//              wizard steps as necessary\n// ==============================================\n(function(skuid){\n\tvar $ = skuid.$;\n\t\n\tskuid.snippet.registerSnippet('navStep1', function() {\n        navStep('step1');\n\t});\n\tskuid.snippet.registerSnippet('navStep2', function() {\n        navStep('step2');\n\t});\n\tskuid.snippet.registerSnippet('navStep3', function() {\n        navStep('step3');\n\t});\n    skuid.snippet.registerSnippet('navStep4', function() {\n        navStep('step4');\n\t});\n    // Only show right side panel if on step 2 or 3\n    function navStep(step) {\n        var wizard = skuid.component.getById('mywizard'),\n            userModel = skuid.model.getModel('UserSelections'), \n    \t    userModelRow = userModel.getFirstRow();\n\n    \tvar panel = $('#mainGrid').find('#detailDiv');\n    \t\n    \tif (step === 'step1') {\n            \n            // var conModel = skuid.model.getModel('NewContact');\n            // var inputEmail = conModel.getFieldValue(conModel.getFirstRow(),'Email');\n\n            // if(inputEmail === null || inputEmail === '' || inputEmail === undefined){\n                         \n            //             userModel.updateRow(userModel.getFirstRow(), {emailErrorStep2_ui : 'Contact email address is missing'});\n            //             mainDFD.reject();\n            //             $.unblockUI();\n            // } \n            // else{\n\n                userModel.updateRow(userModelRow, {currentStep: 'step1', emailErrorStep2_ui : null });\n                    \n                panel.hide();\n\n            //}  \n            \n        }\n    \telse if (step == 'step2') {\n    \t    userModel.updateRow(userModelRow, {currentStep: 'step2', emailErrorStep2_ui : null });\n    \t    panel.show();\n    \t}\n    \telse if (step == 'step3'){\n    \t    userModel.updateRow(userModelRow, {currentStep: 'step3'});\n    \t    panel.show();\n    \t}else if (step == 'step4'){\n    \t    userModel.updateRow(userModelRow, {currentStep: 'step4'});\n    \t    panel.show();\n    \t    $('#detailDiv').css('display','none');\n    \t}\n        wizard.navigate(step);\n        \n        //Scroll To TOP Always on Landing Step\n        $(\"html, body\").animate({ scrollTop: 0 }, 1);\n    }\n})(skuid);\n\n/*Peter (Note to Self): \n    Write out conditions for the Progress Indicator here, as the Wizard steps get flushed out.\n    Still deciding between having the logic based on the saved data (...is it accessible 'cause of REST?) \n    or based on UI-only fields. \n*/\n\t    </jsitem><jsitem location=\"inline\" name=\"pgiListener\" cachelocation=\"false\" url=\"\">// ==============================================\n// Description: Function that navigates the steps\n//              based on the progress bar clicks\n// ==============================================\n(function(skuid){\n\tvar $ = skuid.$;\n\tvar mainDFD = $.Deferred();\n\t\n\t$(document.body).one('pageload',function(){\n\t    \n\t    //==========\n\t    //PaymentBack Button Clicked\n\t    //==========\n\t    skuid.events.subscribe('backPaymentButtonClicked', function(){\n    \t    \n\t            skuid.page.params.step3_Visited = true; \n\t            console.log('------ backPaymentButtonClicked ---------');\n\t    });\n\t    // ======================================\n\t    // Progress Bar Step 1 is clicked\n\t    // ======================================\n\t\tskuid.events.subscribe('pgi-step1', function(){\n\t\t    // Set up models\n\t\t    var wizard = skuid.component.getById('mywizard');\n\t        var panel = $('#mainGrid').find('#detailDiv');\n\t\t    var subModel = skuid.model.getModel('UserSelections'),\n    \t        currentStep = subModel.getFieldValue(subModel.getFirstRow(), 'currentStep');\n\t        \n\t        // If coming from step 2, click the back button\n\t        // The back button action framework sets the currentStep\n\t\t    if (currentStep === 'step2') {\n\t\t        $('#backButton').click();\n\t\t    }\n\t\t    // If coming from step 3, go to step 1 and hide the panel\n\t\t    else {\n    \t\t    wizard.navigate(\"step1\");\n    \t\t    panel.hide();\n    \t\t    subModel.updateRow(subModel.getFirstRow(), {currentStep: 'step1'});\n    \t\t    //subModel.save();\n    \t\t    //subModel.updateData();\n\t\t    }\n\t\t});\n\t    // ======================================\n\t    // Progress Bar Step 2 is clicked\n\t    // ======================================\n\t\tskuid.events.subscribe('pgi-step2', function(){\n\t\t    // Set up models\n\t\t    var wizard = skuid.component.getById('mywizard');\n\t        var panel = $('#mainGrid').find('#detailDiv');\n\t\t    var subModel = skuid.model.getModel('UserSelections'),\n    \t        currentStep = subModel.getFieldValue(subModel.getFirstRow(), 'currentStep');\n    \t   \n    \t    // If coming from step 1, click the next button \n    \t    // Update ui only field so that error icon shows underneath the progress bar\n\t\t    if (currentStep === 'step1') {\n    \t\t    $('#nextOrderDetailButton').click();\n    \t\t    subModel.updateRow(subModel.getFirstRow(), {buttonPressed__ui : 'ProgressBar'});\n    \t\t    subModel.save();\n\t\t    }\n\t\t    // If coming from step 3, click the back button\n\t\t    else if (currentStep === 'step3') {\n\t\t        $('#backPaymentButton').click();\n\t\t    }\n\t\t});\n\t    // ======================================\n\t    // Progress Bar Step 3 is clicked\n\t    // ======================================\n\t\tskuid.events.subscribe('pgi-step3', function(){\n\t\t    // Set up models\n\t\t    var wizard = skuid.component.getById('mywizard');\n\t        var panel = $('#mainGrid').find('#detailDiv');\n\t        var selectedModel = skuid.model.getModel('SelectedRow');\n\t\t    var subModel = skuid.model.getModel('UserSelections'),\n    \t        currentStep = subModel.getFieldValue(subModel.getFirstRow(), 'currentStep');\n            \n            // If coming from step2, click the next button\n\t\t    if (currentStep === 'step2') {\n\t\t        $('#paymentButton').click();\n\t\t    }\n\t\t    // If coming from step1, update the current step\n\t\t    else {\n\t\t        wizard.navigate(\"step3\");\n    \t\t    panel.show();\n    \t\t    \n    \t\t    subModel.updateRow(subModel.getFirstRow(), {currentStep: 'step3'});\n\t\t    }\n\t\t});\n\t\t// ======================================\n\t    // Breadcrumb is clicked, show Popup\n\t    // ======================================\n\t\tskuid.events.subscribe('exitPopup', function(input){\n\t\t    // Set up models\n\t\t    var subModel = skuid.model.getModel('UserSelections');\n\t\t    var accountModel = skuid.model.getModel('Account'),\n\t\t        leadModel = skuid.model.getModel('Lead');\n\t\t    var exitURL = '';\n\t\t    \n\t\t    // Depending on the input, set up the exit URL on the popup\n\t\t    switch(input){\n\t                    case \"AccountID\": \n\t\t\t\t\t                    exitURL = '/' + accountModel.getFieldValue(accountModel.getFirstRow(), 'Id'); \n\t\t\t\t\t                    break;\n\t                    case \"AccountList\": \n\t\t\t\t\t                    exitURL = '/001/o'; \n\t\t\t\t\t                    break;\n\t                    case \"LeadID\": \n\t\t\t\t                    exitURL = '/' + leadModel.getFieldValue(leadModel.getFirstRow(), 'Id'); \n\t\t\t\t                    break;\n\t                    case \"LeadListOpen\": \n\t\t\t\t\t\t            exitURL = '/00Q?fcf=00Bi0000003d01S'; \n\t\t\t\t\t\t            break;\n\t                    case \"LeadList\": \n\t\t\t\t\t                exitURL = '/00Q/o'; \n\t\t\t\t\t                break;\n                    }\n\t\t    \n            subModel.updateRow(subModel.getFirstRow(), {exitLink__ui: exitURL});\n            $('#ExitBreadcrumb').click();\n\t\t});\n\t\t\n\t\t//===========================\n\t\t//Order Another Clicked , Validate Multi-CoName field\n\t\t//===========================\n\t\tskuid.events.subscribe('orderAnother', function(input){\n\t\t    // Set up models\n\t\t    var subModel = skuid.model.getModel('UserSelections'),\n\t\t    userSelRow = subModel.getFirstRow(),\n\t\t    MultiCoName = subModel.getFieldValue(userSelRow,'MultiCoName__ui');\n        \n        //console.log('FROM - orderAnother-subSCR');\n        console.log('MultiCoName ####',MultiCoName);\n        \n            if(input === 'editEmail'){\n                \n                skuid.$('#editEmailEditor').show();\n                skuid.$('#editEmail').hide();\n                skuid.$('#saveEmail').show();\n                \n                \n            }\n            else if(input === 'saveEmail'){\n                \n                var conModel = skuid.model.getModel('NewContact');\n                var nUserModel = skuid.model.getModel('NewUser');\n                \n                $.blockUI({ message: 'Saving Contact . . . Please Wait!'});\n                \n                var inputEmail = conModel.getFieldValue(conModel.getFirstRow(),'Email');\n                \n                     if(inputEmail === null || inputEmail === '' || inputEmail === undefined){\n                         \n                        subModel.updateRow(subModel.getFirstRow(), {emailErrorStep2_ui : 'Contact email address is missing'});\n                        mainDFD.reject();\n                        $.unblockUI();\n                     } \n                     else{\n                \n                skuid.model.save([conModel],{callback: function(result){\n                    \n                            console.log('result ===== ',result);\n                            \n                                if (result.totalsuccess){\n                \n                                \n                                skuid.$('#editEmailEditor').hide();\n                                skuid.$('#saveEmail').hide();\n                                skuid.$('#editEmail').show();\n                                \n                                var emailAddrs = conModel.getFieldValue(conModel.getFirstRow(),'Email');\n                                nUserModel.updateRow(nUserModel.getFirstRow(), {UserID_ui : emailAddrs});\n                                //emailErrorStep2_ui subModel\n                                subModel.updateRow(subModel.getFirstRow(), {emailErrorStep2_ui : null});\n                                \n                                    $.unblockUI();\n                                    mainDFD.resolve();\n                                \n                                } \n                                else {\n                                    \n                                    var finalMsg = '';\n                                    \n                                    console.log('result.messages ==== ',result.messages);\n                                    \n                                    for(var i=0;i&lt;result.messages.length;i++){\n\n                                        finalMsg += result.messages[i];\n\n                                    }\n\n                                    subModel.updateRow(userSelRow, {emailErrorStep2_ui : finalMsg});\n                                    \n                                    mainDFD.reject();\n                                    $.unblockUI();\n                            \n                                    }\n                                }\n                            });\n                     }    \n               \n                \n            }\n\t\t    else if(input === 'OrderAnother'){\n\n\t\t    \tif(MultiCoName === null || MultiCoName === '' || MultiCoName === undefined){\n\t\t    \t\t\n\t\t    \t\tsubModel.updateRow(subModel.getFirstRow(), {MultiCoName_Missing : true});\n\t\t    \t\talert('Multi-Company Name Missing');\n\t\t    \t}\n\t\t    \telse{\n\t\t    \t\t\n\t\t    \t\t$('#orderAnother').click();\n\t\t    \t\t\n\t\t    \t}\n\n\t\t    }\n\n\t\t});\n\t\t\n\t\t\n\t});\n})(skuid);</jsitem><jsitem location=\"inline\" name=\"detailListener\" cachelocation=\"false\" url=\"\">// ==============================================\n// Description: Function to show the exit\n//              popup if the account / oppty\n//              links in the right panel are\n//              clicked\n// ==============================================\n(function(skuid){\n\tvar $ = skuid.$;\n\t$(document.body).one('pageload',function(){\n\t\tskuid.events.subscribe('exitCatalogAccount', function(){\n\t\t    $('#ExitButtonAccount').click();\n\t\t});\n\t\tskuid.events.subscribe('exitCatalogOpp', function(){\n\t\t    $('#ExitButtonOpp').click();\n\t\t});\n\t});\n\t\n\t\n\t//Snippet for Required Field Validations\n\t\n\tregisterSnippet('genericValidateFields',function(models)\n\t{\n         var messages = [];\n         \n         $.each(models,function(i,model)\n         {\n            $.each(model.registeredLists,function(j,list)\n            {\n                var listMessages = list.validateRequiredFields();\n                if(listMessages &amp;&amp; listMessages.length) \n                {\n                    $.each(listMessages,function(){\n                  messages.push(this); \n               });\n           }\n            });\n        });\n    \n        // If we have warning messages, do NOT proceed\n        if (messages.length) \n        {\n            // Have our step's editor handle the messages\n            return false;\n        }\n        else {return true;}\n\t});\n\t\n})(skuid);</jsitem><jsitem location=\"inlinesnippet\" name=\"picklistState\" cachelocation=\"false\">var field = arguments[0],\n    value = arguments[1],\n\t$ = skuid.$;\n\n// =========================================================\n// Description:  Function to populate the state picklist\n// =========================================================\n\nvar country = '';\n\n/*  var accountModel = skuid.model.getModel('NewAccount'),\n    accountRow = accountModel.getFirstRow();\n    var country = accountModel.getFieldValue(accountRow, 'Country__c');\n*/\n\nvar billAddress = skuid.model.getModel('NewAddress'),\n    billAddrRow = billAddress.getFirstRow();\n\nvar compAddress = skuid.model.getModel('CompanyAddress'),\n    comapAddrRow = compAddress.getFirstRow();\nvar caCountry = compAddress.getFieldValue(comapAddrRow, 'Country__c');\n\nvar offer = skuid.model.getModel('SelectedRow'),\n    offerCountry = offer.getFieldValue(offer.getFirstRow(), 'region');\n\nvar userSelModel = skuid.model.getModel('UserSelections');    \nvar cRegion = userSelModel.getFieldValue(userSelModel.getFirstRow(), 'currentRegion__ui');\n\n//skuid.model.getModel('UserSelections')\n\nvar uSel = skuid.model.getModel('UserSelections');\nvar cStep = uSel.getFieldValue(uSel.getFirstRow(), 'currentStep');\n    \n//step1 = leaving step-1   \n//step2 = on step-2\n    if(caCountry !== undefined &amp;&amp; caCountry !== '' &amp;&amp; caCountry !== null &amp;&amp; (cStep === 'step1' || cStep === 'step2'))\n    {\n        country = compAddress.getFieldValue(comapAddrRow, 'Country__c');\n    }\n\n    //step2 = leaving step-2   \n    //step3 = on step-3 or Moving back to step-2  \n    if(billAddress.data.length !== 0 &amp;&amp; (cStep === 'step2' || cStep === 'step3')) \n    { \n        if(cRegion === 'Canada' || cRegion === 'USA'){\n                country = billAddress.getFieldValue(billAddrRow, 'Country_4CA_ui');\n            }\n            else{\n                country = billAddress.getFieldValue(billAddrRow, 'Country__c');\n            }\n    }    \n\nconsole.log('country from PLS snpt ------------ ',country);\n\nskuid.snippet.getSnippet('styleStatePicklist');\n\nif(country === 'USA'){\n    var picklistEntries = field.metadata.picklistEntries;\n    picklistEntries.length = 0; //This is to clear initial values and avoid undefined-Type runtime error\n    \n    if (picklistEntries.length === 0) {\n        picklistEntries.push(\n        {value: '', label: 'state', defaultValue: true, active: false},\n        {value: 'AL', label: 'Alabama', defaultValue: false, active: true},\n        {value: 'AK', label: 'Alaska', defaultValue: false, active: true},\n        {value: 'AZ', label: 'Arizona', defaultValue: false, active: true},\n        {value: 'AR', label: 'Arkansas', defaultValue: false, active: true},\n        {value: 'CA', label: 'California', defaultValue: false, active: true},\n        {value: 'CO', label: 'Colorado', defaultValue: false, active: true},\n        {value: 'CT', label: 'Connecticut', defaultValue: false, active: true},\n        {value: 'DE', label: 'Delaware', defaultValue: false, active: true},\n        {value: 'DC', label: 'District of Columbia ', defaultValue: false, active: true},\n        {value: 'FL', label: 'Florida', defaultValue: false, active: true},\n        {value: 'GA', label: 'Georgia', defaultValue: false, active: true},\n        {value: 'HI', label: 'Hawaii', defaultValue: false, active: true},\n        {value: 'ID', label: 'Idaho', defaultValue: false, active: true},\n        {value: 'IL', label: 'Illinois', defaultValue: false, active: true},\n        {value: 'IN', label: 'Indiana', defaultValue: false, active: true},\n        {value: 'IA', label: 'Iowa', defaultValue: false, active: true},\n        {value: 'KS', label: 'Kansas', defaultValue: false, active: true},\n        {value: 'KY', label: 'Kentucky', defaultValue: false, active: true},\n        {value: 'LA', label: 'Louisiana', defaultValue: false, active: true},\n        {value: 'ME', label: 'Maine', defaultValue: false, active: true},\n        {value: 'MD', label: 'Maryland', defaultValue: false, active: true},\n        {value: 'MA', label: 'Massachusetts', defaultValue: false, active: true},\n        {value: 'MI', label: 'Michigan', defaultValue: false, active: true},\n        {value: 'MN', label: 'Minnesota', defaultValue: false, active: true},\n        {value: 'MS', label: 'Mississippi', defaultValue: false, active: true},\n        {value: 'MO', label: 'Missouri', defaultValue: false, active: true},\n        {value: 'MT', label: 'Montana', defaultValue: false, active: true},\n        {value: 'NE', label: 'Nebraska', defaultValue: false, active: true},\n        {value: 'NV', label: 'Nevada', defaultValue: false, active: true},\n        {value: 'NH', label: 'New Hampshire', defaultValue: false, active: true},\n        {value: 'NJ', label: 'New Jersey', defaultValue: false, active: true},\n        {value: 'NM', label: 'New Mexico', defaultValue: false, active: true},\n        {value: 'NY', label: 'New York', defaultValue: false, active: true},\n        {value: 'NC', label: 'North Carolina', defaultValue: false, active: true},\n        {value: 'ND', label: 'North Dakota', defaultValue: false, active: true},\n        {value: 'OH', label: 'Ohio', defaultValue: false, active: true},\n        {value: 'OK', label: 'Oklahoma', defaultValue: false, active: true},\n        {value: 'OR', label: 'Oregon', defaultValue: false, active: true},\n        {value: 'PA', label: 'Pennsylvania', defaultValue: false, active: true},\n        {value: 'PR', label: 'Puerto Rico', defaultValue: false, active: true},\n        {value: 'RI', label: 'Rhode Island', defaultValue: false, active: true},\n        {value: 'SC', label: 'South Carolina', defaultValue: false, active: true},\n        {value: 'SD', label: 'South Dakota', defaultValue: false, active: true},\n        {value: 'TN', label: 'Tennessee', defaultValue: false, active: true},\n        {value: 'TX', label: 'Texas', defaultValue: false, active: true},\n        {value: 'UT', label: 'Utah', defaultValue: false, active: true},\n        {value: 'VT', label: 'Vermont', defaultValue: false, active: true},\n        {value: 'VA', label: 'Virginia', defaultValue: false, active: true},\n        {value: 'WA', label: 'Washington', defaultValue: false, active: true},\n        {value: 'WV', label: 'West Virginia', defaultValue: false, active: true},\n        {value: 'WI', label: 'Wisconsin', defaultValue: false, active: true},\n        {value: 'WY', label: 'Wyoming', defaultValue: false, active: true}\n        );\n    }\n    skuid.ui.fieldRenderers[field.metadata.displaytype][field.mode](field,value);\n}\nelse if(country === 'Canada'){\n    var picklistEntries = field.metadata.picklistEntries;\n    picklistEntries.length = 0; //This is to clear initial values and avoid undefined-Type runtime error\n\n    if (picklistEntries.length === 0) {\n        picklistEntries.push(\n        {value: '', label: 'province/territory', defaultValue: true, active: false},\n        {value: 'AB', label: 'Alberta', defaultValue: false, active: true},\n        {value: 'BC', label: 'British Columbia', defaultValue: false, active: true},\n        {value: 'MB', label: 'Manitoba', defaultValue: false, active: true},\n        {value: 'NB', label: 'New Brunswick', defaultValue: false, active: true},\n        {value: 'NL', label: 'Newfoundland and Labrador', defaultValue: false, active: true},\n        {value: 'NS', label: 'Nova Scotia', defaultValue: false, active: true},\n        {value: 'NT', label: 'Northwest Territories', defaultValue: false, active: true},\n        {value: 'NU', label: 'Nunavut', defaultValue: false, active: true},\n        {value: 'ON', label: 'Ontario', defaultValue: false, active: true},\n        {value: 'PE', label: 'Prince Edward Island', defaultValue: false, active: true},\n        {value: 'QC', label: 'Quebec', defaultValue: false, active: true},\n        {value: 'SK', label: 'Saskatchewan', defaultValue: false, active: true},\n        {value: 'YT', label: 'Yukon', defaultValue: false, active: true}\n        );\n    }\n    skuid.ui.fieldRenderers[field.metadata.displaytype][field.mode](field,value);\n}\n\nelse if (country === 'United Kingdom') {\n    \n    var picklistEntries = field.metadata.picklistEntries;\n    picklistEntries.length = 0; //This is to clear initial values and avoid undefined-Type runtime error\n    \n    if (picklistEntries.length === 0) {\n        \n        picklistEntries.push( \n            \n            {value: '',  label:'county', defaultValue: true, active: false},\n            {value:'AB', label:'Aberdeenshire',defaultValue: false, active: true},\n            {value:'AG', label:'Angus',defaultValue: false, active: true},\n            {value:'AN', label:'Antrim',defaultValue: false, active: true},\n            {value:'AL', label:'Argyll',defaultValue: false, active: true},\n            {value:'AR', label:'Armagh',defaultValue: false, active: true},\n            {value:'BA', label:'Banffshire',defaultValue: false, active: true},\n            {value:'BF', label:'Bedfordshire',defaultValue: false, active: true},\n            {value:'BS', label:'Berkshire',defaultValue: false, active: true},\n            {value:'BE', label:'Berwickshire',defaultValue: false, active: true},\n            {value:'BG', label:'Blaenau Gwent',defaultValue: false, active: true},\n            {value:'BD', label:'Bridgend',defaultValue: false, active: true},\n            {value:'BK', label:'Buckinghamshire',defaultValue: false, active: true},\n            {value:'CP', label:'Caerphilly',defaultValue: false, active: true},\n            {value:'CA', label:'Caithness',defaultValue: false, active: true},\n            {value:'CB', label:'Cambridgeshire',defaultValue: false, active: true},\n            {value:'CF', label:'Cardiff',defaultValue: false, active: true},\n            {value:'CR', label:'Carmarthenshire',defaultValue: false, active: true},\n            {value:'CN', label:'Ceredigion',defaultValue: false, active: true},\n            {value:'CS', label:'Cheshire',defaultValue: false, active: true},\n            {value:'CM', label:'Clackmannanshire',defaultValue: false, active: true},\n            {value:'CL', label:'Cleveland',defaultValue: false, active: true},\n            {value:'CO', label:'Conwy',defaultValue: false, active: true},\n            {value:'CW', label:'Cornwall',defaultValue: false, active: true},\n            {value:'CU', label:'Cumbria',defaultValue: false, active: true},\n            {value:'DG', label:'Denbighshire',defaultValue: false, active: true},\n            {value:'DS', label:'Derbyshire',defaultValue: false, active: true},\n            {value:'DE', label:'Devon',defaultValue: false, active: true},\n            {value:'DO', label:'Dorset',defaultValue: false, active: true},\n            {value:'DW', label:'Down',defaultValue: false, active: true},\n            {value:'DB', label:'Dunbartonshire',defaultValue: false, active: true},\n            {value:'DU', label:'County Durham',defaultValue: false, active: true},\n            {value:'AY', label:'East Ayrshire',defaultValue: false, active: true},\n            {value:'DB', label:'East Dunbartonshire',defaultValue: false, active: true},\n            {value:'EL', label:'East Lothian',defaultValue: false, active: true},\n            {value:'RE', label:'East Renfrewshire',defaultValue: false, active: true},\n            {value:'ER', label:'East Riding of Yorkshire',defaultValue: false, active: true},\n            {value:'ES', label:'East Sussex',defaultValue: false, active: true},\n            {value:'EX', label:'Essex',defaultValue: false, active: true},\n            {value:'FE', label:'Fermanagh',defaultValue: false, active: true},\n            {value:'FF', label:'Fife',defaultValue: false, active: true},\n            {value:'FL', label:'Flintshire',defaultValue: false, active: true},\n            {value:'GS', label:'Gloucestershire',defaultValue: false, active: true},\n            {value:'GM', label:'Greater Manchester',defaultValue: false, active: true},\n            {value:'GD', label:'Gwynedd',defaultValue: false, active: true},\n            {value:'HA', label:'Hampshire',defaultValue: false, active: true},\n            {value:'HE', label:'Herefordshire',defaultValue: false, active: true},\n            {value:'HT', label:'Hertfordshire',defaultValue: false, active: true},\n            {value:'IA', label:'Isle of Anglesey',defaultValue: false, active: true},\n            {value:'IW', label:'Isle of Wight',defaultValue: false, active: true},\n            {value:'IS', label:'Isles of Scilly',defaultValue: false, active: true},\n            {value:'KT', label:'Kent',defaultValue: false, active: true},\n            {value:'KC', label:'Kincardineshire',defaultValue: false, active: true},\n            {value:'KI', label:'Kinross-shire',defaultValue: false, active: true},\n            {value:'LA', label:'Lancashire',defaultValue: false, active: true},\n            {value:'LE', label:'Leicestershire',defaultValue: false, active: true},\n            {value:'LI', label:'Lincolnshire',defaultValue: false, active: true},\n            {value:'LO', label:'London',defaultValue: false, active: true},\n            {value:'LD', label:'Londonderry',defaultValue: false, active: true},\n            {value:'MS', label:'Merseyside',defaultValue: false, active: true},\n            {value:'MT', label:'Merthyr Tydfil',defaultValue: false, active: true},\n            {value:'MD', label:'Midlothian',defaultValue: false, active: true},\n            {value:'MM', label:'Monmouthshire',defaultValue: false, active: true},\n            {value:'MO', label:'Moray',defaultValue: false, active: true},\n            {value:'NP', label:'Neath Port Talbot',defaultValue: false, active: true},\n            {value:'NW', label:'Newport',defaultValue: false, active: true},\n            {value:'NF', label:'Norfolk',defaultValue: false, active: true},\n            {value:'AY', label:'North Ayrshire',defaultValue: false, active: true},\n            {value:'LK', label:'North Lanarkshire',defaultValue: false, active: true},\n            {value:'NY', label:'North Yorkshire',defaultValue: false, active: true},\n            {value:'NA', label:'Northamptonshire',defaultValue: false, active: true},\n            {value:'NL', label:'Northumberland',defaultValue: false, active: true},\n            {value:'NT', label:'Nottinghamshire',defaultValue: false, active: true},\n            {value:'OR', label:'Orkney',defaultValue: false, active: true},\n            {value:'OX', label:'Oxfordshire',defaultValue: false, active: true},\n            {value:'PM', label:'Pembrokeshire',defaultValue: false, active: true},\n            {value:'PT', label:'Perthshire',defaultValue: false, active: true},\n            {value:'PO', label:'Powys',defaultValue: false, active: true},\n            {value:'RE', label:'Renfrewshire',defaultValue: false, active: true},\n            {value:'RT', label:'Rhondda Cynon Taff',defaultValue: false, active: true},\n            {value:'RL', label:'Rutland',defaultValue: false, active: true},\n            {value:'SL', label:'Shetland',defaultValue: false, active: true},\n            {value:'SH', label:'Shropshire',defaultValue: false, active: true},\n            {value:'SO', label:'Somerset',defaultValue: false, active: true},\n            {value:'AY', label:'South Ayrshire',defaultValue: false, active: true},\n            {value:'LK', label:'South Lanarkshire',defaultValue: false, active: true},\n            {value:'SY', label:'South Yorkshire',defaultValue: false, active: true},\n            {value:'ST', label:'Staffordshire',defaultValue: false, active: true},\n            {value:'SI', label:'Stirlingshire',defaultValue: false, active: true},\n            {value:'SU', label:'Suffolk',defaultValue: false, active: true},\n            {value:'SR', label:'Surrey',defaultValue: false, active: true},\n            {value:'SS', label:'Swansea',defaultValue: false, active: true},\n            {value:'TF', label:'Torfaen',defaultValue: false, active: true},\n            {value:'TW', label:'Tyne and Wear',defaultValue: false, active: true},\n            {value:'TY', label:'Tyrone',defaultValue: false, active: true},\n            {value:'VG', label:'Vale of Glamorgan',defaultValue: false, active: true},\n            {value:'WW', label:'Warwickshire',defaultValue: false, active: true},\n            {value:'AY', label:'West Ayrshire',defaultValue: false, active: true},\n            {value:'WL', label:'West Lothian',defaultValue: false, active: true},\n            {value:'WM', label:'West Midlands',defaultValue: false, active: true},\n            {value:'WS', label:'West Sussex',defaultValue: false, active: true},\n            {value:'WY', label:'West Yorkshire',defaultValue: false, active: true},\n            {value:'WT', label:'Wiltshire',defaultValue: false, active: true},\n            {value:'WO', label:'Worcestershire',defaultValue: false, active: true},\n            {value:'WH', label:'Wrexham',defaultValue: false, active: true}\n            );\n    }\n\n    skuid.ui.fieldRenderers[field.metadata.displaytype][field.mode](field,value);\n}\n\n\n\nelse if (country === 'Australia') {\n    var picklistEntries = field.metadata.picklistEntries;\n    picklistEntries.length = 0; //This is to clear initial values and avoid undefined-Type runtime error\n    \n    if (picklistEntries.length === 0) {\n        picklistEntries.push(\n        {value: '', label: 'province/territory', defaultValue: true, active: false},\n        {value: 'ACT', label: 'Australian Capital Territory', defaultValue: true, active: false},\n        {value: 'NSW', label: 'New South Wales', defaultValue: true, active: false},\n        {value: 'NT', label: 'Northern Territory', defaultValue: true, active: false},\n        {value: 'QLD', label: 'Queensland', defaultValue: true, active: false},\n        {value: 'SA', label: 'South Australia', defaultValue: true, active: false},\n        {value: 'TAS', label: 'Tasmania', defaultValue: true, active: false},\n        {value: 'VIC', label: 'Victoria', defaultValue: true, active: false},\n        {value: 'WA', label: 'Western Australia', defaultValue: true, active: false}\n        );\n    }\n    skuid.ui.fieldRenderers[field.metadata.displaytype][field.mode](field,value);\n}\nelse {\n    skuid.ui.fieldRenderers.TEXT[field.mode](field,value);\n}</jsitem><jsitem location=\"inlinesnippet\" name=\"picklistYear\" cachelocation=\"false\">var field = arguments[0],\n    value = arguments[1],\n\t$ = skuid.$;\n\n// =========================================================\n// Description:  Function to populate the year picklist\n// =========================================================\n\nvar picklistEntries = field.metadata.picklistEntries;\nvar currentYear = (new Date()).getFullYear();\nvar optionYear = 0;\n\npicklistEntries.length = 0; //This is to clear the default Year value (to avoid undefined runtime issue)\n\nif (picklistEntries.length === 0) {\n    //Make Default as Blank Value Since this is going as \"None Selecetd\" for UK Case\n    picklistEntries.push({value: '', label: 'year', defaultValue: true, active: true}); \n    \n    for (i=0; i&lt;10; i++) {\n        optionYear = currentYear + i;\n        picklistEntries.push({value: optionYear, label: optionYear, defaultValue: false, active: true});\n    }\n}\n\nskuid.ui.fieldRenderers[field.metadata.displaytype][field.mode](field,value);</jsitem><jsitem location=\"inlinesnippet\" name=\"updateBillingAddress\" cachelocation=\"false\">// =========================================================\n// Description:  Function to update/Save Billing address\n//               after Validation Checks\n// =========================================================\n\nvar params = arguments[0],\n    $ = skuid.$;\nvar mainDFD = $.Deferred();\n\nvar companyAddress = {}, \n    extngBillingAddress = {},\n    billingAddress = {},\n    isAbandonded = false,\n    country = '';\n\nvar newCompAddrModel = skuid.model.getModel(\"CompanyAddress\"),\n    newCompAddrRow = newCompAddrModel.getFirstRow();\nvar compAddressZIP = newCompAddrModel.getFieldValue(newCompAddrRow, 'PostalCode_ui');    \n\nvar newBillAddrModel = skuid.model.getModel(\"NewAddress\"),\n    newBillAddrRow = newBillAddrModel.getFirstRow(),\n    billingZIP = newBillAddrModel.getFieldValue(newBillAddrRow, 'Postal_Code__c');\n\nvar extngBillAddrModel = skuid.model.getModel(\"Address\"),\n    extngBillAddrRow = extngBillAddrModel.getFirstRow(),\n    extngBillingZIP = extngBillAddrModel.getFieldValue(extngBillAddrRow, 'Postal_Code__c');    \n\nvar newAccountModel = skuid.model.getModel(\"NewAccount\");\nvar newAccCountry = newAccountModel.getFieldValue(newAccountModel.getFirstRow(),'Country__c');\nvar accID = newAccountModel.getFieldValue(newAccountModel.getFirstRow(),'Id');\n\nvar addressONDBMatch = skuid.model.getModel(\"AddressDBMatch\");\n//Pass Current accID,AddressLine1, City and ZIP to this Model and see if we get any Address from DB\n\nvar addrLine1Condition = addressONDBMatch.getConditionByName('AddressDBMatchName'),\n    cityCondition = addressONDBMatch.getConditionByName('AddressDBMatchCity'),\n    stateCondition = addressONDBMatch.getConditionByName('AddressDBMatchState'),\n    zipCondition = addressONDBMatch.getConditionByName('AddressDBMatchZIP'),\n    BillTOCondition = addressONDBMatch.getConditionByName('AddressDBMatchBillTOAddress'),\n    accIDCondition = addressONDBMatch.getConditionByName('AddressDBMatchAccID');\n\n    addressONDBMatch.abandonAllRows();\n    addressONDBMatch.setCondition(accIDCondition,accID);\n    addressONDBMatch.activateCondition(accIDCondition); \n    addressONDBMatch.activateCondition(BillTOCondition); \n        \nif(skuid.page.params.AccountId){\n    var AccountModel = skuid.model.getModel(\"Account\");\n    var companyID = AccountModel.getFieldValue(AccountModel.getFirstRow(),'Company_ID__c');\n    var accountCAN = AccountModel.getFieldValue(AccountModel.getFirstRow(),'CAN__c');\n\n    if((companyID === '' || companyID === null) &amp;&amp; (accountCAN === '' || accountCAN === null)) \n    {\n\n        isAbandonded = true;\n        console.log('*** This is an ABANDONED Account  ***');\n    }\n}\n\n\n        if(newAccCountry === 'USA' || newAccCountry === 'Canada'){\n                country = newBillAddrModel.getFieldValue(newBillAddrRow,'Country_4CA_ui');\n                    \n        }\n        else{\n                country = newBillAddrModel.getFieldValue(newBillAddrRow,'Country__c');\n           \n        }\n//========= Helper Functions BEGIN ==========\n\nfunction hasNull(target){\n    \n            for (var member in target)\n            {\n                if (target[member] === null || target[member] === \"\" || target[member] === undefined || target[member] === 'changeme')\n                {\n                    return true;\n                }\n            }\n            return false;\n    }\n    \nfunction compareAddresses(compAddress,billAddress){\n\n    var sameFlag = false;\n    \n    if(!hasNull(compAddress) &amp;&amp; !hasNull(billAddress)){\n            \n            for (var member in compAddress){\n\n                if (compAddress[member] === billAddress[member] ){\n                    sameFlag = true;\n                }\n                else{\n                        sameFlag = false; \n                        break;\n                }\n            }\n    }\n    \n    \n    return sameFlag;\n\n}\n\n//========= Helper Functions END =========\n\n    //TRIM ZIP for USA\n        if(country === 'USA'){\n                                if(compAddressZIP) compAddressZIP = compAddressZIP.substring(0,5);\n                                billingZIP = billingZIP.substring(0,5);\n                                if(extngBillingZIP) extngBillingZIP = extngBillingZIP.substring(0,5);\n                            }\n\n    // Format the Address based on COUNTRY\n    if(country === 'France'){\n\n        \n            companyAddress = {\n\n                                \"adresse\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'AddressLine1_ui'),\n                                \"ville\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'City_ui'),\n                                \"codepostal\" : compAddressZIP\n                            };\n        \n            billingAddress = {\n\n                                \"adresse\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'Name'),\n                                \"ville\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'City__c'),\n                                \"codepostal\" : billingZIP\n                            };\n\n        if(extngBillAddrModel.data.length){\n            extngBillingAddress = {\n\n                                        \"adresse\" : extngBillAddrModel.getFieldValue(extngBillAddrRow, 'Name'),\n                                        \"ville\" : extngBillAddrModel.getFieldValue(extngBillAddrRow, 'City__c'),\n                                        \"codepostal\" : extngBillingZIP\n                                  };\n        }                      \n            \n            //Activate Corresponding Conditions based on Billing Address Format\n            addressONDBMatch.setCondition(addrLine1Condition, billingAddress[\"adresse\"]);\n            addressONDBMatch.activateCondition(addrLine1Condition); \n            \n            addressONDBMatch.setCondition(cityCondition, billingAddress[\"ville\"]);\n            addressONDBMatch.activateCondition(cityCondition);\n            \n            addressONDBMatch.setCondition(zipCondition, billingAddress[\"codepostal\"]);\n            addressONDBMatch.activateCondition(zipCondition);\n            \n            \n    }\n    else{\n\n            companyAddress = {\n                                \"street\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'AddressLine1_ui'),\n                                \"city\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'City_ui'),\n                                \"state\" : newCompAddrModel.getFieldValue(newCompAddrRow, 'State_ui'),\n                                \"postalcode\" : compAddressZIP\n                            };\n\n            billingAddress = {\n                                \"street\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'Name'),\n                                \"city\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'City__c'),\n                                \"state\" : newBillAddrModel.getFieldValue(newBillAddrRow, 'State__c'),\n                                \"postalcode\" : billingZIP\n                            };\n        if(extngBillAddrModel.data.length){\n            \n            extngBillingAddress = {\n                                    \"street\" : extngBillAddrModel.getField","skuid__Layout4__c":"Value(extngBillAddrRow, 'Name'),\n                                    \"city\" : extngBillAddrModel.getFieldValue(extngBillAddrRow, 'City__c'),\n                                    \"state\" : extngBillAddrModel.getFieldValue(extngBillAddrRow, 'State__c'),\n                                    \"postalcode\" : extngBillingZIP\n                                }; \n        }\n            //Activate Corresponding Conditions based on Billing Address Format\n            addressONDBMatch.setCondition(addrLine1Condition, billingAddress[\"street\"]);\n            addressONDBMatch.activateCondition(addrLine1Condition); \n            \n            addressONDBMatch.setCondition(cityCondition, billingAddress[\"city\"]);\n            addressONDBMatch.activateCondition(cityCondition);\n            \n            addressONDBMatch.setCondition(stateCondition, billingAddress[\"state\"]);\n            addressONDBMatch.activateCondition(stateCondition);\n            \n            addressONDBMatch.setCondition(zipCondition, billingAddress[\"postalcode\"]);\n            addressONDBMatch.activateCondition(zipCondition);                    \n                            \n    }\n\n\nvar sameAsCompanyAddress = newBillAddrModel.getFieldValue(newBillAddrRow,'SameAsCompAddr_ui');\nvar alreadySaved = newBillAddrModel.getFieldValue(newBillAddrRow, 'alreadySaved_ui');\n\nconsole.log('*** alreadySaved BEFORE DBMatch *** sameAsCompanyAddress = ',sameAsCompanyAddress);\nconsole.log('*** companyAddress ===== ',companyAddress);\nconsole.log('*** billingAddress ===== ',billingAddress);\n\nvar saveBillAddress = true;\n\nvar addressONDBMatchUpdate = addressONDBMatch.updateData();\n\n    addressONDBMatchUpdate.done(function(){\n        \n                                        if(addressONDBMatch.data.length){\n                                \n                                              saveBillAddress = false;  \n                                        }\n                            \n                                        if(sameAsCompanyAddress){\n                            \n                                            saveBillAddress = false;\n                                            // Flag It as BILL TO ADDRESS on COMPANY ADDRESS\n                                            newCompAddrModel.updateRow(newCompAddrModel.getFirstRow(), { Bill_To_Address__c : true });\n                                            newCompAddrModel.save();\n                                            console.log('*** COMPANY ADDRESS Stamped as BILL_TO_ADDRESS ***');\n                                        }\n                                        if(compareAddresses(companyAddress,billingAddress)){\n                            \n                                           saveBillAddress = false;\n                                           // Flag It as BILL TO ADDRESS on COMPANY ADDRESS\n                                           newCompAddrModel.updateRow(newCompAddrModel.getFirstRow(), { Bill_To_Address__c: true });\n                                           newCompAddrModel.save();\n                                           console.log('*** COMPANY ADDRESS Stamped as BILL_TO_ADDRESS ***');\n                                        }\n                                        if(alreadySaved &amp;&amp; compareAddresses(extngBillingAddress,billingAddress)){ \n                            \n                                          saveBillAddress = false;\n                                          console.log('alreadySaved @@@', alreadySaved);\n                                        }\n                                        if(compareAddresses(extngBillingAddress,billingAddress) &amp;&amp; isAbandonded){\n                            \n                                            saveBillAddress = false;\n                                        }    \n                                \n                           \n                            \n                        \n                        console.log('Final saveBillAddress DECISION *** ',saveBillAddress);\n                            \n                        if(saveBillAddress){\n            \n                                                var userSelModel = skuid.model.getModel(\"UserSelections\");\n                                        \n                                                // Update address\n                                                newBillAddrModel.updateRow(newBillAddrModel.getFirstRow(), \n                                                                                                        {\n                                                                                                            Account__c: accID,\n                                                                                                            Postal_Code__c: billingZIP,\n                                                                                                            Country__c : country,\n                                                                                                            Bill_To_Address__c : true\n                                                                                                        }); \n                                                                                    \n                                                //Save Billing Address\n                                                skuid.model.save([newBillAddrModel],{callback: function(result){\n                                                                \n                                                                if (result.totalsuccess){\n                                                                    console.log('Address Saved Successfully! ',newBillAddrRow.Id);\n                            \n                                                                    newBillAddrModel.updateRow(newBillAddrModel.getFirstRow(), { alreadySaved_ui : true});\n                                                                    //newBillAddrModel.save();\n                            \n                                                                     $.unblockUI();\n                                                                     mainDFD.resolve();\n                                                                }\n                                                                else{\n                                                                     console.log('There is a problem in Saving Address - ',result.insertResults[0]);\n                                                                     //Update Erron on UI to User\n                                                                     userSelModel.updateRow(userSelModel.getFirstRow(), { addressError : result.insertResults[0]});\n                                                                     mainDFD.reject();\n                                                                     $.unblockUI();\n                                                                    \n                                                                }\n                                                    }\n                                                    \n                                                });\n                        }\n                        else\n                        {       \n                            //If NOT Saving . . .  Move On ...\n                                $.unblockUI();\n                                mainDFD.resolve();\n                        }\n        \n    });\n    \n        \n        \nreturn mainDFD.promise();\n\n\n</jsitem><jsitem location=\"inline\" name=\"stylePicklist\" cachelocation=\"false\" url=\"\">// =========================================================\n// Description:  This function is used to style the picklist\n//               fields so they are the same size / shape\n//               as the other fields in the Field Editor. \n// \n// If the default value ('None Selected') is selected, show\n// the value with in grey italics, otherwise, show the value\n// in black normal font.\n// =========================================================\n\n(function(skuid){\n\tvar $ = skuid.$;\n    registerSnippet = skuid.snippet.register;\n    \n    function compareAddresses(compAddress,extngCompAddress){\n\n    var sameFlag = false;\n    \n    if(!hasNull(compAddress) &amp;&amp; !hasNull(extngCompAddress)){\n            \n            for (var member in compAddress){\n\n                if (compAddress[member] === extngCompAddress[member] ){\n                    sameFlag = true;\n                }\n                else{\n                        sameFlag = false; \n                        break;\n                }\n            }\n    }\n    \n    \n    return sameFlag;\n\n}\n    \n    // Style the state picklist\n    skuid.snippet.registerSnippet('styleStatePicklist', function() {\n        var picklist = $('.picklistState').find('.nx-field select');\n        var accountModel = skuid.model.getModel('NewAccount'),\n            accountRow = accountModel.getFirstRow(),\n            country = accountModel.getFieldValue(accountRow, 'Country__c');\n        var addressModel = skuid.model.getModel('NewAddress'),\n            addressRow = addressModel.getFirstRow(),\n            addressState = addressModel.getFieldValue(addressRow, 'State__c');\n        \n        if (addressState === 'None Selected') {\n            picklist.addClass('nullValue');\n        }\n        else {\n            picklist.removeClass('nullValue');\n        }\n        \n        // For UK states, add in group labels\n        if (country === 'United Kingdom') {\n            $('#billAddressFieldEditor').find('.picklistState .nullValue').find('option[value=\"None Selected\"]').after('&lt;optgroup label=\"Counties of England\" /&gt;');\n            $('#billAddressFieldEditor').find('.picklistState .nullValue').find('option[value=\"WO\"]').after('&lt;optgroup label=\"Counties of Northern Ireland\" /&gt;');\n            $('#billAddressFieldEditor').find('.picklistState .nullValue').find('option[value=\"TY\"]').after('&lt;optgroup label=\"Counties of Scotland\" /&gt;');\n            $('#billAddressFieldEditor').find('.picklistState .nullValue').find('option[value=\"WI\"]').after('&lt;optgroup label=\"Counties of Wales\" /&gt;');\n        }\n    });\n    \n    // Style the month picklist\n    skuid.snippet.registerSnippet('styleMonthPicklist', function() {\n        var picklist = $('.picklistMonth').find('.nx-field select');\n        var billingModel = skuid.model.getModel('BillingProfile'),\n            billingRow = billingModel.getFirstRow(),\n            billingMonth = billingModel.getFieldValue(billingRow, 'Expiry_Month__c');\n        if ((billingMonth === 'None Selected') || (billingMonth === '') || (billingMonth === null)) {\n            picklist.addClass('nullValue');\n        }\n        else {\n            picklist.removeClass('nullValue');\n        }\n    });\n    \n    // Style the year picklist\n    skuid.snippet.registerSnippet('styleYearPicklist', function() {\n        var picklist = $('.picklistYear').find('.nx-field select');\n        var billingModel = skuid.model.getModel('BillingProfile'),\n            billingRow = billingModel.getFirstRow(),\n            billingYear = billingModel.getFieldValue(billingRow, 'Expiry_Year__c');\n        if ((billingYear === 'None Selected') || (billingYear === '') || (billingYear === null)) {\n            picklist.addClass('nullValue');\n        }\n        else {\n            picklist.removeClass('nullValue');\n        }\n    });\n    \n    \n    //========================================================================================\n    //  Handle Button toggle Based on User Selection: Enter credit card / PAID /TRIAL S1611\n    //========================================================================================\n    skuid.snippet.registerSnippet('toggleButtonSet', function(){\n       \n        //Set up models\n            var $ = skuid.$;\n            var mainDFD = $.Deferred();\n            \n\t\t    var Offer = skuid.model.getModel('SelectedRow'),\n\t\t        offerType = Offer.getFieldValue(Offer.getFirstRow(),'offerType'); \n\t\t    var compAddress = skuid.model.getModel('CompanyAddress'),\n\t\t        enterCC = compAddress.getFieldValue(compAddress.getFirstRow(),'Enter_Credit_Card__ui');\n\t\t        \n\t\t        if(offerType === 'PAID' || enterCC){\n\t\t            $(\"#next_order\").hide();\n\t\t            $(\"#next_payment\").show();\n\t\t            mainDFD.resolve();\n\t\t        }\n\t\t        else if(offerType === 'TRIAL' || !enterCC){\n\t\t                $(\"#next_payment\").hide();\n\t\t                $(\"#next_order\").show();\n\t\t                mainDFD.resolve();\n\t\t        }\n\t\t        \n\t\treturn mainDFD.promise();        \n        \n    });\n    \n    //=======================================================================\n    //  S1610 - Validate Multi-Company Name when \"Place Next Order\" button is clicked\n    //=======================================================================\n    \n    skuid.snippet.registerSnippet('validateMultiCompName', function()\n    {\n            // Set up models\n\t\t    var subModel = skuid.model.getModel('UserSelections'),\n\t\t    userSelRow = subModel.getFirstRow(),\n\t\t    MultiCoName = subModel.getFieldValue(userSelRow,'MultiCoName__ui');\n        \n\t        console.log('MultiCoName ####',MultiCoName);\n\t        \n\t\t    \tif(MultiCoName === null || MultiCoName === '' || MultiCoName === undefined){\n\t\t    \t\t\n\t\t    \t\tsubModel.updateRow(subModel.getFirstRow(), {MultiCoName_Missing : true});\n\t\t    \t\talert('Multi-Company Name Missing');\n\t\t    \t}\n\t\t    \telse{\n\t\t    \t\t    $('#orderAnother').click();\n\t\t    \t\t}\n    });\n    \n    //==========================================================================\n    //  S1610 updateStateListWhenCountryChanged\n    //  This is to update State Picklist when Country changed on Billing Address\n    //==========================================================================\n    \n    skuid.snippet.registerSnippet('updateStateListWhenCountryChanged', function() {\n        \n                    var FIELD_TO_RERENDER = 'State__c';\n                    var billAddrs = skuid.$M('NewAddress');\n                    var billAddrRow = billAddrs.getFirstRow();\n                    \n                    \n                    var params = arguments[0],\n                       row = params.row,\n                       model = params.model,\n                       $ = skuid.$,\n                       fieldsByRow = model.registeredFieldsByRowThenField,\n                       uiFields,\n                       country = skuid.page.params.country,\n                       s3_Visited = skuid.page.params.step3_Visited;\n                    \n                    //Clear the State When COUNTRY is changes from USA/Canada Vice versa\n                    //if((country === 'USA' || country === 'Canada') &amp;&amp; s3_Visited)\n                    if(country === 'USA' || country === 'Canada')\n                    {\n                            /*var billCountry = billAddrs.getFieldValue(billAddrs.getFirstRow(),'Country_4CA_ui');\n                            console.log('FROM updateStateListWhenCountryChanged : param.country =',country,'billCountry = '+billCountry);\n                            if(billCountry !== country){*/\n                            \n                                if(s3_Visited === true){\n                                        billAddrs.updateRow(billAddrRow,{\n                                                                    Name : '',\n                                                                    City__c: '',\n                                                                    State__c: '',\n                                                                    Postal_Code__c: '',\n                                                                    Country__c : billAddrs.getFieldValue(billAddrs.getFirstRow(),'Country_4CA_ui')\n                                                                });\n                                }\n                                else{\n                                        skuid.page.params.step3_Visited = true;\n                                        console.log('Initial VISIT to Step-3 ======= ');\n                                        console.log(params);\n                                        //On Initial Visit to Step-3, update UI-Only Region Field to show relevant address fields \n                                        var selectedModel = skuid.$M('SelectedRow');\n                                        var currRegion = selectedModel.getFieldValue(selectedModel.getFirstRow(), 'region');\n                                        var selModel = skuid.$M('UserSelections');\n                                            selModel.updateRow(selModel.getFirstRow(), {currentRegion__ui: currRegion});\n                                            billAddrs.updateRow(billAddrRow, 'Country_4CA_ui', currRegion, {initiatorId: params.initiatorId});\n\t\t\t\t\t\t\t\t\t\t\tskuid.$C('CountryPicklistFE').render();\n\t\t\t\t\t\t\t\t\t\t\tif(skuid.$C('.finalCountry') !== undefined)\n\t\t\t\t\t\t\t\t\t\t\t    skuid.$C('.finalCountry').render();\n                                }\n                            //}\n                    } \n                        \n                    if (fieldsByRow &amp;&amp; fieldsByRow[row.Id]) {\n                        uiFields = fieldsByRow[row.Id][FIELD_TO_RERENDER];\n                        if (uiFields &amp;&amp; skuid.utils.size(uiFields)) {\n                            $.each(uiFields,function(){\n                                if(this !== undefined)\n                                     this.render(); \n                                console.log('State ----- updated');\n                                    \n                            });\n                        }\n                    }\n\n    });\n    \n    \n    //===============================================================\n    // S1610 This sameAsCompanyAddress function is to copy Company Address to Billing Address and disable fields,\n    // when the checkbox \"Same as company address\" is selected;\n    // Clear fields when unchecked;\n    //===============================================================\n    \n    skuid.snippet.registerSnippet('sameAsCompanyAddress', function(){\n       \n       //Setup Models and variables\n        var compAddress = skuid.model.getModel('CompanyAddress'),\n            compAddrRow = compAddress.getFirstRow();\n        var compAddrID = compAddress.getFieldValue(compAddrRow, 'Id');\n        var caCountry = compAddress.getFieldValue(compAddrRow, 'Country__c');\n        \n        var offerModel = skuid.model.getModel('SelectedRow'),\n            offerRow = offerModel.getFirstRow(),\n            country = offerModel.getFieldValue(offerRow,'region');  \n            \n        var billAddress =  skuid.model.getModel('NewAddress'),\n            billAddrRow = billAddress.getFirstRow();\n        \n        var userSel = skuid.model.getModel('UserSelections');\n        var userRow = userSel.getFirstRow();\n        \n        var sameAs = billAddress.getFieldValue(billAddrRow, 'SameAsCompAddr_ui');\n        \n                    if(sameAs === true){\n                        \n                        // if(billAddress.data.length){\n                        //     billAddress.abandonAllRows();\n                            \n                        // }\n                        //         //billAddress.adoptRow(compAddrRow);\n                        //         billAddress.createRow({ additionalConditions : [{ field : 'SameAsCompAddr_ui', value : true }] });\n                        //         //billAddress.createRow();\n                        \n                        userSel.updateRow(userSel.getFirstRow(), {currentRegion__ui : caCountry});\n                        \n                        //Copy Country\n                        if(country === 'Canada' || country === 'USA'){\n                                billAddress.updateRow(billAddress.getFirstRow(), {Country_4CA_ui : caCountry});\n                        }\n                        else{\n                                billAddress.updateRow(billAddress.getFirstRow(), {Country__c : caCountry});\n                        }\n                        \n                        billAddress.updateRow(billAddress.getFirstRow(), \n                                                                        {\n                                                                            Name : compAddress.getFieldValue(compAddrRow, 'AddressLine1_ui'),\n                                                                            City__c : compAddress.getFieldValue(compAddrRow, 'City_ui'),\n                                                                            State__c : compAddress.getFieldValue(compAddrRow, 'State_ui'),\n                                                                            Postal_Code__c : compAddress.getFieldValue(compAddrRow, 'PostalCode_ui')\n                                                                            \n                                                                        });\n                        \n                        skuid.$(\".ca\").find(\"input,select\").each(function(){\n                             this.disabled = true;\n                             \n                        });\n                       \n                        \n                    }\n                    else{\n                            \n                            \n                            if(billAddress.data.length === 0){\n                                    billAddress.createRow();\n                            }\n                            \n                            billAddress.updateRow(billAddress.getFirstRow(), \n                                                                        {\n                                                                            Name : '',\n                                                                            City__c : '',\n                                                                            State__c : '',\n                                                                            Postal_Code__c : ''\n                                                                            \n                                                                        });\n                            \n                            skuid.$(\".ca\").find(\"input,select\").each(function(){\n                                this.disabled = false;\n                            \n                            });\n                            \n                            /*skuid.$(\".caCountry\").find(\"select\").each(function(){\n                                 this.disabled = true;\n                            });*/\n                       \n                    }\n        \n        \n            \n        \n    });\n    \n    \n    \n    \n    //==========================================================\n    //  This function is to Validate and Standardize the Company Address\n    //  Only for country - USA, the standardization should happen\n    //  Created On : Sep-22-2016 by Venkat Kollimarla\n    //==========================================================\n    \n    skuid.snippet.registerSnippet('companyAddressCheck', function() \n    {\n        \n            //==================================================\n            //  Validate address and standardize\n            //  If any errors BLOCK user, if NOT process further\n            //==================================================\n                var mainDFD = $.Deferred();\n                var addressModel = skuid.model.getModel('CompanyAddress'),\n                    addressRow = addressModel.getFirstRow(),\n                    addressZip = addressModel.getFieldValue(addressRow, 'PostalCode_ui');\n\n                var uSelModel = skuid.model.getModel('UserSelections');\n                var uSelRow = uSelModel.getFirstRow();\n                \n                var postalCode = addressZip;\n                var country = addressModel.getFieldValue(addressRow, 'Country__c');\n        \n                // To prevent error of having 10 or more digits in Zip\n                    if (postalCode !== null &amp;&amp; country === 'USA'){\n                            postalCode = addressZip.substring(0,5);\n                    }\n\n                var addressMap = {\n                                    \"Name\" : addressModel.getFieldValue(addressRow, 'AddressLine1_ui'),\n                                    \"City\" : addressModel.getFieldValue(addressRow, 'City_ui'),\n                                    \"State\" : addressModel.getFieldValue(addressRow, 'State_ui'),\n                                    \"Country\" : addressModel.getFieldValue(addressRow, 'Country__c'),\n                                    \"Postalcode\" : postalCode,\n                                    \"Addr2\" : ''\n                                 };\n                \n                console.log('--------FROM companyAddressCheck country --- '+ country);\n                var tempAddrMap = {\n                                    \"Name\" : addressModel.getFieldValue(addressRow, 'AddressLine1_ui'),\n                                    \"City\" : addressModel.getFieldValue(addressRow, 'City_ui'),\n                                    \"State\" : addressModel.getFieldValue(addressRow, 'State_ui'),\n                                    \"Postalcode\" : postalCode,\n                                 };\n                \n                var models = [addressModel];\n                var fieldsNOTEmpty;\n                    \n                    if(country === 'Canada' || country === 'United Kingdom'){\n                            fieldsNOTEmpty = skuid.snippet.get('genericValidateFields')(models);\n                    }\n                    else{\n                            fieldsNOTEmpty = true;\n                    }\n                \n                var allFilled = allAreFilled(tempAddrMap);\n                \n                if(fieldsNOTEmpty === true)\n                    {\n                            //Standardize address only for country 'USA'\n                            //For other countries just accept whatever user provides\n                            if(country !== undefined &amp;&amp; country === 'USA' &amp;&amp; allFilled)\n                            {\n                                    console.log('FROM CompanyAddress Check if Block USA Country ----');\n            \n                                    OnlineSalesCatalogController.standardizeAddress(addressMap, function(result,event)\n                                    { \n                                                    console.log('from Company Address result ==== ',result);\n                                                    console.log('Company Address STDZN EEEE ==== ',event);\n                                            if(result!==null &amp;&amp; result!==undefined){ //BTBS-5973\n                                                // If no errors, update the Company Address model\n                                                if(event.status === true &amp;&amp; result.hasOwnProperty('Error') &amp;&amp; result.Error === ''){\n                                                                    addressModel.updateRow(addressRow,\n                                                                    { \n                                                                        AddressLine1_ui: result.Addr1,\n                                                                        City_ui: result.City,\n                                                                        State_ui: result.State,\n                                                                        Country__c: result.Country,\n                                                                        PostalCode_ui: result.Zipcode\n            \n                                                                    }); \n                                                                    // Add Green Checkmarks - FUTURE Enhancement\n                                                                    //var checkmarkFields = $('#billAddressFieldEditor').find('.nx-field input');\n                                                                    uSelModel.updateRow(uSelModel.getFirstRow(), {CompAddressErrorStatus_ui : null});\n                                                                    uSelModel.save();\n                                                                    //$.unblockUI();\n                                                                    mainDFD.resolve();        \n                                                }\n                                                else{\n                                                        // If errors are found, update the error message in the UI only fields\n                                                        //addressModel.updateRow(addressRow, {hasError: true});\n                                                        var secondaryError = (result.hasOwnProperty(\"nativeVendorStatus\"))?  result.nativeVendorStatus : '';\n                                                        uSelModel.updateRow(uSelModel.getFirstRow(), {CompAddressErrorMsg_ui : result.Error+' '+secondaryError});\n                                                        uSelModel.save();\n                                                        \n                                                        //flag = false;  //Block User\n                                                        mainDFD.reject();\n                                                        $.unblockUI();\n                                                    }\n                                            }else{ //BTBS-5973\n                                                uSelModel.updateRow(uSelModel.getFirstRow(), {CompAddressErrorMsg_ui : 'Address Standardization Service Exception'});\n                                                uSelModel.save();\n                                                \n                                                mainDFD.reject();\n                                                $.unblockUI();\n                                            }\n                                    });\n                            }\n                            else{ \n                                        //For countries other than 'USA' just go ahead without address stdzn\n                                        //Clear Error Status to allow directly save it\n                                        uSelModel.updateRow(uSelModel.getFirstRow(), {CompAddressErrorStatus_ui : null});\n                                        uSelModel.save();\n                                                                    \n                                            $.unblockUI();   \n                                            mainDFD.resolve(); \n                                }\n                    }\n                    else{\n                                uSelModel.updateRow(uSelModel.getFirstRow(), {CompAddressErrorStatus_ui: 'AddressValuesMissing'});\n                                uSelModel.save();\n                                //flag = false; //Block User\n                                mainDFD.reject();\n                                $.unblockUI();\n                        }\n                \n        return mainDFD.promise();        \n                \n        \n    }); //END of companyAddressCheck\n  \n  \n    //==========================================================\n    //  This function is to save the company address and stamp the accountID on it\n    //  Should be invoked only when CompAddressErrorStatus_ui is null upon address stdzn\n    //  Created On : Sep-22-2016 by Venkat Kollimarla\n    //==========================================================\n    skuid.snippet.registerSnippet('saveCompanyAddress', function()\n    {\n        \n            var mainDFD = $.Deferred();\n            \n            var addressModel = skuid.model.getModel(\"CompanyAddress\"),\n                addressRow = addressModel.getFirstRow(),\n                postalCode = addressModel.getFieldValue(addressRow, 'PostalCode_ui'),\n                country = addressModel.getFieldValue(addressRow, 'Country__c');\n                \n            var newAccountModel = skuid.model.getModel(\"NewAccount\");                   \n            var accID = newAccountModel.getFieldValue(newAccountModel.getFirstRow(), 'Id');\n            \n            var addressONDBMatch = skuid.model.getModel(\"AddressDBMatch\");\n            //Pass Current accID,AddressLine1, City and ZIP to this Model and see if we get any Address from DB\n\n            var addrLine1Condition = addressONDBMatch.getConditionByName('AddressDBMatchName'),\n                cityCondition = addressONDBMatch.getConditionByName('AddressDBMatchCity'),\n                stateCondition = addressONDBMatch.getConditionByName('AddressDBMatchState'),\n                zipCondition = addressONDBMatch.getConditionByName('AddressDBMatchZIP'),\n                primaryCondition = addressONDBMatch.getConditionByName('AddressDBMatchPrimary'),\n                accIDCondition = addressONDBMatch.getConditionByName('AddressDBMatchAccID');\n            \n                addressONDBMatch.abandonAllRows();\n                addressONDBMatch.setCondition(accIDCondition,accID);\n                addressONDBMatch.activateCondition(accIDCondition); \n                addressONDBMatch.activateCondition(primaryCondition);  \n    \n            var uModel = skuid.model.getModel(\"UserSelections\");\n            \n            var extngAddressModel = skuid.model.getModel(\"ExtngCompAddress\"),\n                extngAddrRow = extngAddressModel.getFirstRow(),\n                extngZIP = extngAddressModel.getFieldValue(extngAddrRow, 'Postal_Code__c');\n            \n            var addrSaveFlag = true, mComp = skuid.page.params.another;\n            var tempAddrObj = {},\n                extngAddress = {};\n            \n            // compareAddresses ExtngCompAddress\n            \n                    //Format ZIP for USA\n                    if(postalCode!==null &amp;&amp; country === 'USA')\n                    {\n                            postalCode = postalCode.substring(0,5);\n                            if(extngZIP) extngZIP = extngZIP.substring(0,5);\n                    }\n                    \n                    //Format the Address based on COUNTRY\n                    if(country === 'France'){\n                        \n                                    if(extngAddressModel.data.length){\n                                            extngAddress = {\n                                                \"adresse\" : extngAddressModel.getFieldValue(extngAddrRow, 'Name'),\n                                                \"ville\" :   extngAddressModel.getFieldValue(extngAddrRow, 'City__c'),\n                                                \"codepostal\" : extngZIP\n                                            };\n                                    }\n                        \n                                    tempAddrObj = {\n                                            \"adresse\" : addressModel.getFieldValue(addressRow, 'AddressLine1_ui'),\n                                            \"ville\" : addressModel.getFieldValue(addressRow, 'City_ui'),\n                                            \"codepostal\" : postalCode\n                                    };\n                                    \n                                    //Activate Corresponding Conditions based on Billing Address Format\n                                    addressONDBMatch.setCondition(addrLine1Condition, tempAddrObj[\"adresse\"]);\n                                    addressONDBMatch.activateCondition(addrLine1Condition); \n                                    \n                                    addressONDBMatch.setCondition(cityCondition, tempAddrObj[\"ville\"]);\n                                    addressONDBMatch.activateCondition(cityCondition);\n                                    \n                                    addressONDBMatch.setCondition(zipCondition, tempAddrObj[\"codepostal\"]);\n                                    addressONDBMatch.activateCondition(zipCondition);\n                    }\n                    else\n                    {   \n                             if(extngAddressModel.data.length){\n                                    \n                                    extngAddress = {\n                                                            \"street\" : extngAddressModel.getFieldValue(extngAddrRow, 'Name'),\n                                                            \"city\" : extngAddressModel.getFieldValue(extngAddrRow, 'City__c'),\n                                                            \"state\" : extngAddressModel.getFieldValue(extngAddrRow, 'State__c'),\n                                                            \"postalcode\" : extngZIP\n                                                    };\n                                }\n                                 \n                            tempAddrObj = {\n                                \"street\" : addressModel.getFieldValue(addressRow, 'AddressLine1_ui'),\n                                \"city\" : addressModel.getFieldValue(addressRow, 'City_ui'),\n                                \"state\" : addressModel.getFieldValue(addressRow, 'State_ui'),\n                                \"postalcode\" : postalCode\n                            };\n                            \n                            //Activate Corresponding Conditions based on Billing Address Format\n                            addressONDBMatch.setCondition(addrLine1Condition, tempAddrObj[\"street\"]);\n                            addressONDBMatch.activateCondition(addrLine1Condition); \n                            \n                            addressONDBMatch.setCondition(cityCondition, tempAddrObj[\"city\"]);\n                            addressONDBMatch.activateCondition(cityCondition);\n                            \n                            addressONDBMatch.setCondition(stateCondition, tempAddrObj[\"state\"]);\n                            addressONDBMatch.activateCondition(stateCondition);\n                            \n                            addressONDBMatch.setCondition(zipCondition, tempAddrObj[\"postalcode\"]);\n                            addressONDBMatch.activateCondition(zipCondition);\n                            \n                    }\n            \n            var addressONDBMatchUpdate = addressONDBMatch.updateData();\n            var alreadySaved = addressModel.getFieldValue(addressModel.getFirstRow(), 'alreadySaved_ui');\n            \n            console.log('Final Address Formats : ',tempAddrObj,extngAddress);\n            \n            var isAbandonded = false;\n            \n            if(skuid.page.params.AccountId){\n                var AccountModel = skuid.model.getModel(\"Account\");\n                var companyID = AccountModel.getFieldValue(AccountModel.getFirstRow(),'Company_ID__c');\n                var accountCAN = AccountModel.getFieldValue(AccountModel.getFirstRow(),'CAN__c');\n            \n                if((companyID === '' || companyID === null) &amp;&amp; (accountCAN === '' || accountCAN === null)) \n                {\n            \n                    isAbandonded = true;\n                    console.log('*** This is an ABANDONED Account  ***');\n                }\n            }\n            \n            addressONDBMatchUpdate.done(function()\n            {\n                        var isAddressSame = compareAddresses(tempAddrObj,extngAddress); //#Sri - Using variable instead of calling function everytime\n                        console.log('--isAddressSame---'+isAddressSame);\n                        if(isAbandonded &amp;&amp; isAddressSame){\n                            addrSaveFlag = false;\n                        }\n                        console.log('--addrSaveFlag1--'+addrSaveFlag);\n                        if(alreadySaved &amp;&amp; isAddressSame){//BTBS-6010. If address is same, only then the flag will be set as false. \n                            addrSaveFlag = false;\n                        }\n                        console.log('--addrSaveFlag2--'+addrSaveFlag);\n                        if(addressONDBMatch.data.length){                            \n                            addrSaveFlag = false;\n                            /* START - BTBS-6039 - #Sri */\n                            var savedAddressId  = addressONDBMatch.getFieldValue(addressONDBMatch.getFirstRow(),'Id');\n                            console.log('-savedAddressId--'+savedAddressId);\n                            addressModel.updateRow(addressModel.getFirstRow(), { alreadySaved_ui : true, Id15 : savedAddressId});\n                            /* END - BTBS-6039 - #Sri */\n                        }\n                        console.log('--addrSaveFlag3--'+addrSaveFlag);\n                        if(allAreNull(tempAddrObj,country)){\n                            addrSaveFlag = false;\n                        }\n                        console.log('--addrSaveFlag4--'+addrSaveFlag);\n\n                        if(hasNull(tempAddrObj)){\n                                                    \n                                                    if(!allAreNull(tempAddrObj,country)){\n                                                                \n                                                                addrSaveFlag = false;\n                                                               \n                                                                uModel.updateRow(uModel.getFirstRow(),{ CompAddressErrorMsg_ui : 'Please enter complete address' });\n                                                                uModel.save();\n                \n                                                                mainDFD.reject();\n                                                                $.unblockUI();\n                                                        }\n                                                    \n                                                }\n                            /*if(mComp === 'yes' &amp;&amp; !alreadySaved &amp;&amp; (!compareAddresses(tempAddrObj,extngAddress) || compareAddresses(tempAddrObj,extngAddress)) ){\n                                addrSaveFlag = true;\n                                console.log('*** mComp CompAddress Saving *** ');\n                            }*/\n                            \n                           console.log('*** FINAL addrSaveFlag DECISION COMPANY ADDRESS *** ',addrSaveFlag);\n                            \n                            if(addrSaveFlag)\n                            {\n                                \n                                // Update Company Address with final sObject fields initialized\n                                addressModel.updateRow(addressModel.getFirstRow(),{\n                                                                                        Account__c: accID,\n                                                                                        Name : addressModel.getFieldValue(addressRow, 'AddressLine1_ui'),\n                                                                                        City__c : addressModel.getFieldValue(addressRow, 'City_ui'),\n                                                                                        State__c : addressModel.getFieldValue(addressRow, 'State_ui'),\n                                                                                        Postal_Code__c: postalCode,\n                                                                                        Primary__c : true\n                                                                                });\n                                \n                                \n                                //Save Company Address\n                                    skuid.model.save([addressModel],{ callback: function(result)\n                                            {\n                                                        if(result.totalsuccess){\n                                                                 console.log('------ Company Address Saved Successfully! ',addressRow.Id);\n                                                                 //On Sucess of Address Save\n                                                                 //Clear the error message \n                                                                 uModel.updateRow(uModel.getFirstRow(), {CompAddressErrorMsg_ui : null});\n                                                                 \n                                                                 addressModel.updateRow(addressModel.getFirstRow(), { alreadySaved_ui : true});\n                                                                 //addressModel.save();\n                                                                 \n                                                                 uModel.save();\n                                                                 $.unblockUI();\n                                                                 mainDFD.resolve();\n                                                        }\n                                                        else{\n                                                                 console.log('----- There is a problem in Saving Company Address - ',result.insertResults[0]);\n                                                                 uModel.updateRow(uModel.getFirstRow(),{ CompAddressErrorMsg_ui : result.insertResults[0] });\n                                                                 uModel.save();\n                                                                 mainDFD.reject();\n                                                                 $.unblockUI();\n                                                            \n                                                        }\n                                             }});\n                                \n                                \n                            }\n                            else{\n                                    //IF CompAddress is not REQUIRED to SAVE , Move on and Enable Same As Checkbox\n                                    /*skuid.$(\".sameAs\").find(\"input\").each(function()\n                                                        {\n                                                                this.disabled = false;\n                                                                console.log('*** FROM CompAddress Save *** Enabled SAMEAS Checkbox');\n                                                        });*/\n                                    $.unblockUI();\n                                    mainDFD.resolve();\n                            }\n                             \n            });\n            \n            \n            \n        \n        return mainDFD.promise();\n        \n    }); //END of saveCompanyAddress\n    \n    //==================================\n    // Helper Functions S1610\n    //==================================\n    \n    function hasNull(target){\n            for (var member in target){\n                if (target[member] === null || target[member] === \"\" || target[member] === 'changeme')\n                {\n                    return true;\n                }\n            }\n            return false;\n    }\n\n\n    function allAreNull(target,country) {\n        var c = 0,flag = false;\n        for (var member in target){\n            console.log(member+' value from allAreNull = ',target[member]);\n            if (target[member] === null || target[member] === \"\" || target[member] === 'changeme'){\n                c++;\n            }\n        }\n        \n        //if(c === 4){ flag= true; }\n        if(country === 'France'){\n            if(c === 3)\n            {\n                 flag = true; \n            }\n        }\n        else\n        {\n            if(c === 4 &amp;&amp; country !== 'France') { flag = true; }\n        }\n        \n        return flag;\n    }\n\n\n    function allAreFilled(target,country){\n        var c = 0,flag = false;\n        for (var member in target){\n            console.log(member+' value from allAreFilled = ',target[member]);\n            if (target[member] !== null &amp;&amp; target[member] !== \"\" &amp;&amp; target[member] !== 'changeme'){\n                c++;\n                \n            }\n        }\n       \n        if(country === 'France'){\n            if(c === 3){\n                 flag = true; \n            }\n        }\n        else{\n                if(c === 4 &amp;&amp; country !== 'France') { flag = true; }\n        }\n        \n        return flag;\n    }\n    \n    \n    \n})(skuid);</jsitem><jsitem location=\"inlinesnippet\" name=\"checkAddress\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\nmainDFD = $.Deferred();\n\n// ===========================================================\n// Description: This function calls the apex controller to\n//              verify the address in the standard database\n// ===========================================================\n\n// ================================\n// Set up models / mapping\n// ================================\nvar userModel = skuid.model.getModel('UserSelections'),\n    userRow = userModel.getFirstRow();\n    \nvar selectedModel = skuid.$M('SelectedRow');\nvar selRow = selectedModel.getFirstRow();\nvar offerCountry = selectedModel.getFieldValue(selRow,'region');\n\nvar addressModel = skuid.model.getModel('NewAddress'),\n    addressRow = addressModel.getFirstRow(),\n    addressZip = addressModel.getFieldValue(addressRow, 'Postal_Code__c');\n\nvar country = '';\nvar postalCode = '';\n    \n        if(offerCountry === 'USA' || offerCountry === 'Canada'){\n            country = addressModel.getFieldValue(addressRow,'Country_4CA_ui');\n            \n        }\n        else{\n            country = addressModel.getFieldValue(addressRow,'Country__c');\n           \n        }\n\n\n    // To prevent error of having 10 or more digits in Zip for USA\n    if (addressZip !== null &amp;&amp; country === 'USA') {\n        postalCode = addressZip.substring(0,5);\n    }\n\n    console.log('FROM checkAddress BILLADDRESS  ------ ',country);\n    //update Billing Address country with User's final Input \n    //addressModel.updateRow(addressRow,{ Country__c: country }); \n   \n\nvar addressMap = {\n\t\"Name\" : addressModel.getFieldValue(addressModel.getFirstRow(), 'Name'),\n\t\"City\" : addressModel.getFieldValue(addressModel.getFirstRow(), 'City__c'),\n\t\"State\" : addressModel.getFieldValue(addressModel.getFirstRow(), 'State__c'),\n\t\"Country\" : country,\n\t\"Postalcode\" : postalCode,\n\t\"Addr2\" : ''\n};\n\n// =======================================\n// Call controller to standardize address\n// =======================================\n\nvar models = [addressModel];\nvar fieldsNOTEmpty = skuid.snippet.get('genericValidateFields')(models);\n\n\n    if(fieldsNOTEmpty === true)\n    {\n        \n                if(country !== undefined &amp;&amp; country === 'USA')\n                {\n                            console.log('FROM addressCheck if Block');\n                \n                            OnlineSalesCatalogController.standardizeAddress(addressMap, function(result,event)\n                            { \n                                            console.log('result ==== ',result);\n                                            console.log('Address STDZN  ==== ',event);\n                                    // Updated by Prerna 26 May 17: Added null check for result\n                                    if(result!==null &amp;&amp; result!==undefined){\n                                    // If no errors, update the address model\n                                \t\n                                \t if(event.status === true &amp;&amp; result.hasOwnProperty('Error') &amp;&amp; result.Error === '')\n                                \t {\n                                            \taddressModel.updateRow(addressRow,\n                                                        { \n                                                        \tName: result.Addr1,\n                                                        \tCity__c: result.City,\n                                                        \tState__c: result.State,\n                                                        \tCountry__c: result.Country,\n                                                        \tCountry_4CA_ui : result.Country,\n                                                        \tPostal_Code__c: result.Zipcode\n                                            \n                                                        }); \n                                                    // Add Green Checkmarks\n                                                    var checkmarkFields = $('#billAddressFieldEditor').find('.nx-field input');\n                                                    userModel.updateRow(userRow, {addressError: null});\n                                            \t    userModel.save();\n                                            \t    $.unblockUI();\n                                                    mainDFD.resolve();        \n                                     }\n                                    \n                                    \n                                    else{\n                                    \t    // If errors are found, update the error message in the UI only fields\n                                    \t    addressModel.updateRow(addressRow, {hasError: true});\n                                    \t    userModel.updateRow(userRow, {addressError: result.Error});\n                                    \t    userModel.save();\n                                    \t    \n                                    \t    // Clear out the CC info on error and add the all cc icons back in\n                                    \t    //var bpModel = skuid.model.getModel('BillingProfile');\n                                            //bpModel.updateRow(bpModel.getFirstRow(), {CreditCardNumber_ui: ''});\n                                            //bpModel.updateRow(bpModel.getFirstRow(), {Credit_Card_Verification_Number__c: ''});\n                                            \n                                            //$('#paymentInfoFieldEditor').render();\n                                            var ccField = $('.addCCImages').find('.nx-field input');\n                                            if (!ccField.hasClass('addAllCC')) {\n                                                ccField.addClass('addAllCC');\n                                            }\n                                            \n                                            mainDFD.reject();\n                                            $.unblockUI();\n                                            \n                                    \t}\n                                    }\n                                    else{\n                                    \t    // If errors are found, update the error message in the UI only fields\n                                    \t    addressModel.updateRow(addressRow, {hasError: true});\n                                    \t    userModel.updateRow(userRow, {addressError: 'Address standardization failed due to unknown issue'});\n                                    \t    userModel.save();\n                                    \t    \n                                    \t    //$('#paymentInfoFieldEditor').render();\n                                            var ccField = $('.addCCImages').find('.nx-field input');\n                                            if (!ccField.hasClass('addAllCC')) {\n                                                ccField.addClass('addAllCC');\n                                            }\n                                            \n                                            mainDFD.reject();\n                                            $.unblockUI();\n                                            \n                                    \t}\n                                    \n                        });\n                \n                }\n                else{ \n                        $.unblockUI();   \n                        mainDFD.resolve(); \n                    }\n    }\n    else{\n                userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'AddressValuesMissing'});\n                userModel.save();\n                mainDFD.reject();\n                $.unblockUI();\n        }\n\n\nreturn mainDFD.promise();\n\n//End of Address STDZN\n</jsitem><jsitem location=\"inlinesnippet\" name=\"ccTokenInit\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\n// =============================================================\n// Description: Function to call the CC tokenization function\n//              on either tabbing or a click outside of the field\n// =============================================================\n\n// Run CC tokenization when tabbing over\n$('.addCCImages').keydown(function(e) {\n    var code = e.keyCode || e.which;\n\n    if (code === 9) {  \n        skuid.snippet.getSnippet('tokenizeCC')();\n    }\n});\n\n// Run CC tokenization if clicked outside of field\n$(document).click(function(e){\n    if (!$(e.target).parent().parent().hasClass('addCCImages')) {\n        if(($('.addCCImages input').val() !== '') &amp;&amp; ($('.addCCImages input').val() !== undefined) &amp;&amp; ($('.addCCImages input').val().substring(0,1) !== '*')){\n            skuid.snippet.getSnippet('tokenizeCC')();\n        }\n    }\n});\n</jsitem><jsitem location=\"inlinesnippet\" name=\"tokenizeCC\" cachelocation=\"false\" url=\"\">var params = arguments[0],\n    $ = skuid.$,\n    mainDFD = $.Deferred();\n\n// =============================================================\n// Description: Function to tokenize the CC\n// =============================================================\n\n// =============================\n// Set up models &amp; variables\n// =============================\nvar bpModel = skuid.model.getModel(\"BillingProfile\");\nvar addressModel = skuid.model.getModel(\"Address\");\nvar ccModel =  skuid.model.getModel(\"CCTokenInfo\");\nvar userModel = skuid.model.getModel(\"UserSelections\");\nvar tokenRow = ccModel.getFirstRow();\n\nvar ccRow = bpModel.getFirstRow();\nvar ccNumber = bpModel.getFieldValue(ccRow,\"CreditCardNumber_ui\");  \nvar cvvCode = bpModel.getFieldValue(ccRow,\"Credit_Card_Verification_Number__c\");\nvar expiryMonth = bpModel.getFieldValue(ccRow,\"Expiry_Month__c\");\nvar expiryYear = bpModel.getFieldValue(ccRow,\"Expiry_Year__c\");\n\nvar paymentType = bpModel.getFieldValue(ccRow,\"Payment_Method__c\");\nvar leadID = skuid.page.params.LeadId;      \nvar accountID = skuid.page.params.AccountId;\n\nconsole.log('paymentMethod ===',paymentType);\n\nvar sessionID = sforce.connection.sessionId;\n\nvar models = [ addressModel,bpModel ];\n\nvar errorDB = skuid.model.getModel('ErrorDB');      \nvar userSelModel = skuid.model.getModel('UserSelections'),      \n    userSelModelRow = userSelModel.getFirstRow();       \n    fromLead = userSelModel.getFieldValue(userSelModelRow, 'FromLead__ui');\n\nvar finalURL = '';\nvar finalAuthHeader = '';\n/*var orgnModel = skuid.model.getModel('Orgn');\nvar orgnRow = orgnModel.getFirstRow();\nvar isSandbox = orgnModel.getFieldValue(orgnRow,'IsSandbox');\n*/\n\n\nvar prodKey = skuid.model.getModel('OnlineSales_ProductionKey');\nvar isProduction = prodKey.getFieldValue(prodKey.getFirstRow(),'Value__c'); \n\nvar isSandbox = '';\n//var isProduction = skuid.page.params.isProduction;\n\nif(isProduction === 'YES'){\n    isSandbox = false;\n}\nelse if(isProduction === 'NO'){\n    isSandbox = true;\n}\n\n  \nif(isSandbox === true){\n  //IF Sandbox\n  console.log('This is a Sandbox',isSandbox);\n  finalURL = tokenRow.URL_EndPoint__c;\n  finalAuthHeader = tokenRow.URL_Header__c;\n\n}\nelse if (isSandbox === false){\n  //IF Production Env\n  console.log('This is a PRD Env',isSandbox);\n\n  finalURL = \"https://tokenization.platform.intuit.com/v2/creditCard\";\n  finalAuthHeader = \"Intuit_APIKey intuit_apikey=akyresfeRGaTNrZqkpmQbglm9DmlUxGlCAGXnMYX\";\n\n}\n\n//==================\n// Tokenization URL Handling Changes END Here\n//==================\n\nif(paymentType === 'Credit Card'){\n    \n// Strip out spaces from input value\nif(ccNumber !== null){\nccNumber = ccNumber.replace( /\\s+/g, \"\" );\n}\n\nvar patt = /^[0-9]*$/gm;\nvar flag = true;\n// =============================================\n// Check the CC number is valid a valid number\n//      between 13 - 16 digits long and has not\n//      already been tokenized\n// =============================================\nif ( ccNumber === '' || ccNumber === undefined || ccNumber.length &lt; 13 || ccNumber.length &gt; 16 || (!patt.test(ccNumber)) || ccNumber.substring(0,1) === '*') \n{\n    flag = false;\n    mainDFD.reject();$.unblockUI();\n}\n\n// =============================================\n// If CC number is valid -&gt; determine the card type\n// =============================================\nif(flag === true)\n{\n    if (ccNumber.substring(0,1) === '4') {\n        bpModel.updateRow(ccRow, {ccType__ui: 'Visa'})\n    }\n    else if (ccNumber.substring(0,1) === '3') {\n        bpModel.updateRow(ccRow, {ccType__ui: 'American Express'})\n    }\n    else if (ccNumber.substring(0,1) === '6') {\n        bpModel.updateRow(ccRow, {ccType__ui: 'Discover'})\n    }\n    else {\n        bpModel.updateRow(ccRow, {ccType__ui: 'Master Card'})\n    }\n    \n    // Call tokenization function\n    tokenizeCreditCard(ccNumber);   \n}\n\n$.unblockUI();        \nmainDFD.resolve();\n\n}\n//End of Method\n\n// ==========================\n// Function to tokenize CC\n// ==========================\nfunction tokenizeCreditCard(ccNumber)\n{\n        console.log('tokenizing...')\n        \n        var token = \"\";\n        var isDebug = false;\n        var parsedJSON = \"\";\n        \n        // Call remote function to verify CC number\n        try \n        {\n            var soapMsg = '{ \"cc\":\"' + ccNumber + '\"}'; //json request message\n            sforce.connection.sessionId = sessionID;\n            \n            //console.log('End Point ===',tokenRow.URL_EndPoint__c);\n            //console.log('URL Header ===',tokenRow.URL_Header__c);\n            \n            sforce.connection.remoteFunction({\n                \n                // For Non Production following line of code should be used and the Production URL line of code should be commented\n                \n                //url : tokenRow.URL_EndPoint__c,\n                \n                url : finalURL,\n                \n                // For Production following line of code should be used and above one line should be commented out\n                //url : \"https://tokenization.platform.intuit.com/v2/creditCard\",\n                \n                //In the following request header For Non Production the Authorization value should be 'tokenRow.URL_Header__c' Where as for Production\n                // it should be \n                //   \"Authorization\": \"Intuit_APIKey intuit_apikey=akyresfeRGaTNrZqkpmQbglm9DmlUxGlCAGXnMYX\"\n                //   \"Authorization\": tokenRow.URL_Header__c\n                \n                requestHeaders: \n                { \n                    \"Content-Type\": \"Application/json\",\n                    \"Authorization\": finalAuthHeader\n                },\n                    mimeType: \"text/plain\",\n                    requestData: soapMsg,\n                    method: \"POST\",\n                    async: false,\n                onSuccess: function(response)\n                {   \n                    console.log('I am in Success @response === ',response);\n                    \n                    parsedJSON = $.parseJSON(response);\n                    var cc = parsedJSON.cc;\n                    var CCToken = parsedJSON.ccToken;\n                    \n                    console.log('from ONSUCCESS callback after parse RECEIVED CCToken = ',CCToken);\n                    \n                    // If card is valid, tokenize the number\n                    if ( CCToken !== undefined &amp;&amp; CCToken!== ''){\n                        \n                        var lastDigits = CCToken.substring(CCToken.length - 4,CCToken.length);\n                        var ccFormat = \"**** **** **** \"+lastDigits;\n                        \n                        bpModel.updateRow(ccRow,\n                            {\n                                Credit_Card_Number__c:CCToken,\n                                CreditCardNumber_ui : ccFormat\n                                \n                            });\n                        errorMsg = '';\n                        userModel.updateRow(userModel.getFirstRow(), {errorStatus: null});\n                        \n                        // Update format\n                        $('.addPadding').css('padding-top', '10px');\n                        skuid.snippet.getSnippet('updateCCIcon')();\n                        \n                    } \n                    else { /* Do Nothing! */ }\n                   \n                    $.unblockUI();  mainDFD.resolve();\n                },\n                onFailure: function(response)\n                { \n                   console.log('error message on failure');\n                   console.log('Failure Response:',response);\n                    \n                    var errorMsg = GetErrMsg(response);\n                    console.log(errorMsg);\n\n                    //Log the errorMsg into ErrorDB     \n                    errorDB.createRow({     \n                    additionalConditions:[          \n                        {field : 'Detail_Message__c',value :errorMsg },     \n                        {field: 'Error_Code__c', value : ''},       \n                        {field: 'Error_Description__c', value: 'TOKENIZATION CALL FAILED'},     \n                        {field: 'SFDCId__c',value : (fromLead)? leadID : accountID}         \n                    ]});        \n            \n                    errorDB.save();\n                    \n                    mainDFD.reject();   $.unblockUI();\n                }\n            });\n        } \n        catch(exception) {  \n            console.log(exception);         \n            errorDB.createRow({     \n                    additionalConditions:[          \n                        {field : 'Detail_Message__c',value :exception.message },        \n                        {field: 'Error_Code__c', value : 'Tokenization Exception'},     \n                        {field: 'Error_Description__c', value: exception.stack},        \n                        {field: 'SFDCId__c',value : (fromLead)? leadID : accountID}         \n                    ]});        \n            \n            errorDB.save();     \n        }//End-of-Catch\n            \n    }\n    // If there's an error in the CC tokenization, parse out the message\n    function GetErrMsg(msg)\n    { \n           var errMessage = \"There was an error tokenizing the credit card. \";\n           \n           try {\n                if (msg === null || msg === ''){\n                    return \"There was an error tokenizing the credit card. \";\n                    \n                    }\n                    else \n                    {\n                         var parsedJSON = JSON.parse(msg);\n                         var errCode = parsedJSON.code;\n                         errMessage = parsedJSON.message;\n                    \n                        if (errCode !== null &amp;&amp; errCode !== '') \n                        {\n                            if (errCode &gt; 399 &amp;&amp; errCode &lt; 500) \n                            {\n                                console.log('Error Code = ',errCode , 'Error Message = ',errMessage);\n                                errorMsg = \" * An unexpected error occurred. Please contact your administrator for assistance\";\n                            } \n                            else \n                            {\n                                errorMsg = ' * Credit Card number is not valid';\n                                userModel.updateRow(userModel.getFirstRow(), {errorStatus: 'invalidCC'});\n                                bpModel.updateRow(ccRow, {CreditCardNumber_ui: ''});\n                                userModel.save();\n                                \n                                // Format field editor\n                                $('.addPadding').css('padding-top', '0px');\n                                skuid.snippet.getSnippet('updateCCIcon')();\n                            }\n                        } \n                        else \n                        { //if errCode is blank\n                            errorMsg = \"There was an error tokenizing the credit card. \";\n                            console.log('Failure Response:',msg);\n                        }\n                        \n                        return errorMsg;\n                    }\n            } \n            catch ( ex ) \n            {\n                console.log( \"getErrMsg caught exception: '\" , ex );\n                errMessage += \"Error parsing response from server. \"+ex;\n                return errMessage;\n            }\n        }\n    \nreturn mainDFD.promise();\n</jsitem><jsitem location=\"inlinesnippet\" name=\"updateCCIcon\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\n// ===================================================\n// Description: This function adds the Credit Card\n//              type (Visa, Mastercard, Discover or AMEX)\n//              to the credit card field and the green check\n//              (valid) or the red error icon (if the card\n//              is invalid)\n// ===================================================\n\n// Set up models\nvar userModel = skuid.model.getModel('UserSelections'),\n    userRow = userModel.getFirstRow(),\n    errorStatus = userModel.getFieldValue(userRow, 'errorStatus');\n\nvar billingModel = skuid.model.getModel('BillingProfile'),\n    billingRow = billingModel.getFirstRow(),\n    ccType = billingModel.getFieldValue(billingRow, 'ccType__ui');\n\n    billingModel.updateRow(billingRow, {Credit_Card_Type__c: ccType}); \n    //billingModel.save();\n\nvar ccField = $('.addCCImages').find('.nx-field input');\n\n// Update icon based on CC number\nccField.removeClass();\n\nif (ccType === 'Visa') { \n    if (errorStatus === null) {\n        ccField.addClass('addVisaCheck');\n    }\n    else {\n        ccField.addClass('addVisaError');\n    }\n}\nelse if (ccType === 'American Express') {\n    if (errorStatus === null) {\n        ccField.addClass('addAmexCheck');\n    }\n    else {\n        ccField.addClass('addAmexError');\n    }\n}\nelse if (ccType === 'Discover') {\n    if (errorStatus === null) {\n        ccField.addClass('addDiscoverCheck');\n    }\n    else {\n        ccField.addClass('addDiscoverError');\n    }\n}\nelse {\n    if (errorStatus === null) {\n        ccField.addClass('addMastercardCheck');\n    }\n    else {\n        ccField.addClass('addMastercardError');\n    }\n}</jsitem><jsitem location=\"inlinesnippet\" name=\"closeOpportunity\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\n \nvar opptyModel = skuid.model.getModel('NewOppty'),\n    opptyModelRow = opptyModel.getFirstRow();\n    \n    //console.log('opptyModel.data.length = ',opptyModel.data.length);\n    if(opptyModel.data.length) { \n        \n        opptyModel.updateRow(opptyModelRow, {StageName: 'Closed Won'});\n\t\topptyModel.save();\n    }\t\t    </jsitem><jsitem location=\"inlinesnippet\" name=\"PreventExitDialog\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$;\n\nwindow.onbeforeunload = null;</jsitem><jsitem location=\"inlinesnippet\" name=\"CreateCompany\" cachelocation=\"false\">\n// ========================================================================\n// Description: This function is used to call CreateCompany Service and update the Company ID for Pop-Up\n// ========================================================================\n\n\n// =========================================\n// Set up Models and Variables\n// =========================================\n\nvar $ = skuid.$, mainDFD = $.Deferred();\n\nvar userModel = skuid.$M('NewUser');\nvar userRow = userModel.getFirstRow();\n\nvar currUserModel = skuid.$M('CountryFromLoggedInUser');\nvar currUserRow = currUserModel.getFirstRow();\nvar currUserID = currUserModel.getFieldValue(currUserRow,'Id');\n\nvar accountModel = skuid.$M('NewAccount');\nvar accountRow = accountModel.getFirstRow();\n\nvar existingAccountModel = skuid.$M('Account');\nvar existingAccountModelRow = existingAccountModel.getFirstRow();\n\nvar contactModel = skuid.$M('NewContact');\nvar contactRow = contactModel.getFirstRow();\n\nvar opptyModel = skuid.$M('NewOppty');\nvar opptyRow = opptyModel.getFirstRow();\n\nvar selOfferModel = skuid.model.getModel('SelectedRow');\nvar selectedRow = selOfferModel.getFirstRow();\n\nvar billProfileModel = skuid.model.getModel('BillingProfile');\nvar billingRow = billProfileModel.getFirstRow();\n\nvar billAddressModel = skuid.model.getModel('NewAddress');\nvar addressRow = billAddressModel.getFirstRow();\n\nvar compAddressModel = skuid.model.getModel('CompanyAddress');\nvar compAddressRow = compAddressModel.getFirstRow();\nvar compAddressID = '';\n\nvar extngCompAddr = skuid.model.getModel('ExtngCompAddress');\n\nvar caID = compAddressModel.getFieldValue(compAddressRow,'Id15');\n\nvar subModel = skuid.model.getModel('UserSelections'),\nsubModelRow = subModel.getFirstRow(),\n    isOrderFromLead=false; // Changes for BTBS 5644 Enhance Order Object &gt;&gt; BTBS-5725;\n\nvar createUserResponse=false;\nvar updateExistingAuthID=false;\n\nif(!$.isEmptyObject(subModelRow)){\n    isOrderFromLead = subModel.getFieldValue(subModelRow, 'FromLead__ui');\n}\n\n//BTBS-5946 Fix\n    if(compAddressRow!==null &amp;&amp; compAddressRow!==undefined &amp;&amp; (/*BTBS-5975,BTBS-6000*/!skuid.page.params.isAbandonded || \n    (caID !== null &amp;&amp; caID !== undefined) || isOrderFromLead/*BTBS-5975,BTBS-6000*/)){ //BTBS-6000 : Added caID Check\n        console.log('---in1---');\n        if(compAddressRow.hasOwnProperty('Id15') &amp;&amp; caID !== undefined){\n            console.log('CompAddresgreterthan15: '+caID);\n            compAddressID = caID;            \n        }\n    }\n    else if(extngCompAddr!==null &amp;&amp; extngCompAddr!==undefined){\n        console.log('---in2---');\n        if(extngCompAddr.data.length &gt; 0){\n            extngAddrsID = extngCompAddr.getFieldValue(extngCompAddr.getFirstRow(),'Id');\n            console.log('--extngAddrsID--'+extngAddrsID);\n            if(extngAddrsID.length &gt;=15){\n                compAddressID = extngAddrsID;\n            }\n        }\n    }\n    \nconsole.log('---compAddressID---'+compAddressID);\n\nvar opted_For_CC = compAddressModel.getFieldValue(compAddressRow, 'Enter_Credit_Card__ui');\n\n\nvar subscriptionFrequency = '',\nsourceCode = '',\nclusterId = '',\npayrollFeatureSet = '';\n\nvar selectedRowModel = skuid.model.getModel('SelectedRow'),\nselectedRow = selectedRowModel.getFirstRow();\n\n\nArray.prototype.contains = function(elem)\n{\n    for (var i in this)\n        {\n            if (this[i] == elem) return true;\n        }\n    return false;\n}\n\nvar qboProducts = [\"QuickBooks Online Essentials\",\"QuickBooks Online Plus\",\"QuickBooks Online Simple Start\"];\nvar payrollProducts = [\"QuickBooks Online Payroll FullServiceBasic\",\"QuickBooks Online Payroll Full Service\"];\n\nvar createCompanyType='',\n    contactId = '',                     \n    accountId = '',\n    opportunityId = '',\n    userName = '',\n    billingCode = '',\n    billingProfileId = '',\n    currencyCode = '',\n    pwd = '',\n    billAddressID = '',\n    addrLine1='',\n    City = '',\n    State = '',\n    postalCode = '',  //Assigned empty strings by Default (For PAID case - will assign values accordingly)\n    langg = 'en',\n    qboProductName = '',\n    billingCountry = '',\n    SameAsCompAddr = '',\n    authID = '',\n    OfferId = '', // Changes for BTBS 5644 Enhance Order Object &gt;&gt; BTBS-5725\n    OfferType=''; // // Changes for BTBS 5644 Enhance Order Object &gt;&gt; BTBS-5725\n\n \n $.blockUI({\n   message: 'Creating Company . . . Please Wait!',\n   onBlock:function(){\n\nif(!$.isEmptyObject(userRow)){\n    \n    var createCompanyType1 = userModel.getFieldValue(userRow, 'NewOrExisting__ui');\n    var userName1 = userModel.getFieldValue(userRow,\"UserID_ui\");\n    var pwd1 = userModel.getFieldValue(userRow, 'Temp_Pwd');\n    \n    \n    if(createCompanyType1!==null &amp;&amp; createCompanyType1 !== undefined){\n        createCompanyType = createCompanyType1;\n    }\n    \n    if(userName1!==null &amp;&amp; userName1 !== undefined){\n        userName = userName1;\n    }\n    \n    /*if(pwd1!==null &amp;&amp; pwd1 !== undefined){\n        pwd = pwd1;\n    }*/\n    console.log('createCompanyType = '+createCompanyType);\n    console.log('userName = '+userName);\n    //console.log('pwd = '+pwd);\n    \n    var langg1 = userModel.getFieldValue(userRow, 'Language_ui');\n    if(langg1 !== undefined &amp;&amp; langg1 !== null) {\n        langg = langg1;\n    }\n        \n    console.log('Product Language ======  ',langg);\n    \n}\n\nif(!$.isEmptyObject(selectedRow)){\n    \n    var billingCode1 = selOfferModel.getFieldValue(selectedRow, 'productCode');\n    var currencyCode1 = selOfferModel.getFieldValue(selectedRow, 'currencyCode');\n    qboProductName = selOfferModel.getFieldValue(selectedRow, 'offeredQBOProduct');\n    \n    // Start:: Changes for BTBS 5644 Enhance Order Object &gt;&gt; BTBS-5725\n    OfferId =  selectedRowModel.getFieldValue(selectedRow, 'offerId');\n    OfferType = selectedRowModel.getFieldValue(selectedRow, 'offerType');\n    console.log('OfferId_OfferId' + OfferId);\n    console.log('OfferType_OfferType' + OfferType);\n    // End :: Changes for BTBS 5644 Enhance Order Object &gt;&gt; BTBS-5725\n    \n    console.log('qboProductName -------- ',qboProductName);\n    \n    if(billingCode1!==null &amp;&amp; billingCode1 !== undefined){\n        billingCode = billingCode1;\n    }\n    \n    if(currencyCode1!==null &amp;&amp; currencyCode1 !== undefined){\n        currencyCode = currencyCode1;\n    }\n    console.log('billingCode = '+billingCode);\n    console.log('currencyCode = '+currencyCode);\n}\n\nif(!$.isEmptyObject(accountRow)){\n    \n    var accountId1 = accountModel.getFieldValue(accountRow,'Id');\n    if(accountId1!==null &amp;&amp; accountId1 !== undefined){\n        accountId = accountId1;\n    }\n    \n    console.log('accountId = '+accountId);\n}\n\nif(!$.isEmptyObject(contactRow)){\n    \n    var contactId1 = contactModel.getFieldValue(contactRow,'Id');\n    if(contactId1!==null &amp;&amp; contactId1 !== undefined){\n        contactId = contactId1;\n        console.log('contactId = '+contactId);\n    }\n    \n    // BTBS-5724: Get AuthID\n     var authID1=contactModel.getFieldValue(contactRow,'authID__ui');\n       if(authID1!==null &amp;&amp; authID1 !== undefined){\n        authID = authID1;\n        console.log('authID = '+authID);\n    }\n    //End BTBS-5724\n}\n\nif(!$.isEmptyObject(opptyRow)){\n    \n    var opportunityId1 = opptyModel.getFieldValue(opptyRow,'Id');\n    \n    if(opportunityId1!==null &amp;&amp; opportunityId1 !== undefined){\n        opportunityId = opportunityId1;\n    }\n    console.log('opportunityId = '+opportunityId);\n    \n    //Since multiple-agents might involve until Placing the Order\n    //Let's Stamp the Logged-In User as Owner before creating Company\n\n    opptyModel.updateRow(opptyRow, { OwnerId : currUserID }); \n    opptyModel.save();\n    \n}\n\nif(!$.isEmptyObject(billingRow)){\n    \n    var billingProfileId1 = billProfileModel.getFieldValue(billingRow,'Id');\n    \n    if(billingProfileId1!==null &amp;&amp; billingProfileId1 !== undefined &amp;&amp; (selectedRow.offerType ==='PAID' || opted_For_CC )){\n        billingProfileId = billingProfileId1;\n    }\n    console.log('billingProfileId = '+billingProfileId);\n}\n\nif(!$.isEmptyObject(addressRow)){\n    //Take Address Id and send it to Apex below\n    var addrID = billAddressModel.getFieldValue(addressRow,'Id');\n    \n    if(addrID !==undefined &amp;&amp; addrID !==null &amp;&amp; (selectedRow.offerType ==='PAID' || opted_For_CC )){\n        \n        billAddressID = addrID;    \n        addrLine1 = billAddressModel.getFieldValue(addressRow,'Name');\n        City = billAddressModel.getFieldValue(addressRow,'City__c');\n        State = billAddressModel.getFieldValue(addressRow,'State__c');\n        postalCode = billAddressModel.getFieldValue(addressRow,'Postal_Code__c');\n        billingCountry = billAddressModel.getFieldValue(addressRow,'Country__c');\n        SameAsCompAddr = billAddressModel.getFieldValue(addressRow,'SameAsCompAddr_ui');\n        \n    }\n    \n    var companyIdExistingAccount = existingAccountModel.getFieldValue(existingAccountModelRow,'Company_ID__c');\n    var canIdExistingAccount = existingAccountModel.getFieldValue(existingAccountModelRow,'CAN__c');\n    var bID ='';   \n      var isAbandonded = false;\n        \n        if((companyIdExistingAccount === '' || companyIdExistingAccount === null) &amp;&amp; (canIdExistingAccount === '' || canIdExistingAccount === null)) \n        {\n            isAbandonded = true;\n            console.log('*** This is an ABANDONED Account  4m createCompany ***');\n        }\n    \n  \n     //If order is placing from Lead\n    if(isOrderFromLead) \n    {\n        if(SameAsCompAddr) // If Billing address is same as company address get Billing address from \"Company Address\" model\n        {\n            bID = compAddressModel.getFieldValue(compAddressRow,'Id');\n            billAddressID = bID;\n        }\n    }\n    else\n    {\n       \n        //bID = billAddressModel.getFieldValue(addressRow,'Id');\n        bID = billAddressModel.getFieldValue(addressRow,'Id15');\n        console.log('First_IId15' + bID);\n        //if(bID.length&gt;=15 &amp;&amp; !isAbandonded)\n        if(addressRow!==null &amp;&amp; addressRow!==undefined){\n            if((addressRow.hasOwnProperty('Id15') &amp;&amp; bID !== undefined) &amp;&amp; !isAbandonded)\n                {\n                    console.log('Second_IId15' + bID);\n                    console.log('isAbandonded_if' + isAbandonded);\n                    billAddressID = bID;\n                }\n        \telse\n        \t{\n        \t     //Added additional if condition if New address model is having address this condition needed while placing order from Lead\n        \t     if(addressRow.hasOwnProperty('Id15') &amp;&amp; bID !== undefined)\n        \t         billAddressID = bID;\n                 else\n                 {\n            \t    console.log('isAbandonded_else' + isAbandonded);\n            \t     console.log('Third_IId15' + bID);\n            \t    var addressModel = skuid.model.getModel('Address');\n            \t\tvar addressModelRow = addressModel.getFirstRow();\n            \t\tbID = addressModel.getFieldValue(addressModelRow,'Id');\n            \t\tbillAddressID = bID;\n                 }\n        \t}\n        }\n    \tconsole.log('SameAsCompAddr :' + SameAsCompAddr);\n    \tif(isAbandonded &amp;&amp; SameAsCompAddr )\n    \t{\n            if(extngCompAddr.data.length &gt; 0){\t\t\n            var extngCmpAddrsID = extngCompAddr.getFieldValue(extngCompAddr.getFirstRow(),'Id');\n            console.log('extngCmpAddrsID: '+ extngCmpAddrsID);\n            if(extngCmpAddrsID.length &gt;=15){\n             billAddressID = extngCmpAddrsID;\n             }\n            }\n    \t}\n    }\n    \n}\n\nif(!$.isEmptyObject(subModelRow)){\n    \n        subscriptionFrequency = (subModelRow.MonthlyChoice === true) ? \"Monthly\" : \"Yearly\";\n        console.log('subscriptionFrequency = ',subscriptionFrequency);\n        \n        var sourceCode1 = subModel.getFieldValue(subModelRow, 'SourceCode__ui');\n        \n        if(sourceCode1 !== null &amp;&amp; sourceCode1 !== undefined &amp;&amp; sourceCode1 !== ''){\n                sourceCode = sourceCode1;  //From User Input\n        }\n        else{\n               sourceCode = skuid.page.params.defSourceCode; //or From Default Value\n        }\n        \n          var clusterIdui = subModel.getFieldValue(subModelRow, 'ClusterId_ui');\n          \n         if(clusterIdui !== null &amp;&amp; clusterIdui !== undefined &amp;&amp; clusterIdui !== ''){\n                clusterId = '&amp;setCluster=' + clusterIdui;  //From User Input\n        }\n        else{\n                clusterId = '';\n        }\n       \n    }\n    \n    console.log('clusterId:' + clusterId)\n\nif(!$.isEmptyObject(selectedRow)){\n\nconsole.log('offeredPayrollProduct = ',selectedRow.offeredPayrollProduct);\nconsole.log('offeredQBOProduct = ',selectedRow.offeredQBOProduct);\n\n  if((payrollProducts.contains(selectedRow.offeredPayrollProduct)) &amp;&amp; (qboProducts.contains(selectedRow.offeredQBOProduct))){ \n        payrollFeatureSet = \"true\";\n    }\n    else    {   payrollFeatureSet = \"false\"; }\n    \n    console.log('payrollFeatureSet = ',payrollFeatureSet);\n}\n\n\nconsole.log('----- create New USER and COMPANY Params ------',createCompanyType,\n                                                    contactId,                     \n                                                    accountId,\n                                                    opportunityId,\n                                                    userName,\n                                                    billingCode,\n                                                    qboProductName,\n                                                    billingProfileId,\n                                                    addrLine1,\n                                                    City,\n                                                    State,\n                                                    postalCode,\n                                                    billingCountry,\n                                                    compAddressID,\n                                                    currencyCode,\n                                                    pwd,\n                                                    subscriptionFrequency,\n                                                    payrollFeatureSet,\n                                                    langg,\n                                                    sourceCode,\n                                                    clusterId,\n                                                    authID);\n\n\nif(createCompanyType==='new')\n{\n    console.log('New User call');\n    OnlineSalesCatalogController.createUserCallout(createCompanyType,\n                                                    contactId,                     \n                                                    accountId,\n                                                    opportunityId,\n                                                    userName,\n                                                    billingCode,\n                                                    billingProfileId,\n                                                    compAddressID,\n                                                    currencyCode,\n                                                    pwd,\n                                                    \n        function(res,e){\n            createUserResponse=res.success;\n            console.log('Create User Call Result from APEX: ',res);\n    \n            var isException = (e.type === 'exception')? true : false;\n            \n            if (e.status === true){\n    \n        \t\tif(!$.isEmptyObject(res)){\n            \n        \t\t//On SUCCESS\n        \t\t\tif(res.success === true){\n        \t\t\t    console.log('New user authID:'+res.userId);\n        \t\t\t   if(res.userId!==undefined &amp;&amp; res.userId!==null){\n        \t\t\t       console.log('Updating auth Id on contact');\n        \t\t\t        contactModel.updateRow(contactRow, {Auth_Id__c: res.userId});\n                            //contactModel.save();\n                            skuid.model.save([contactModel],{callback: function(result){\n                                if (result.totalsuccess){\n                                    console.log('Updated authid of Contact'+new Date());\n                                   // $.unblockUI();\n                                    callToCreateCompany();\n                    \n                                } \n                                else {\n                                    \n                                    console.log(result);\n                                    mainDFD.reject();\n                                    $.unblockUI();\n                            \n                                    }\n                            }\n                    \n                            });\n                           \n        \t\t\t   } \n        \t\t    }\n            }\n            else if(res === null||res===''){\n    \t\t\t\talert('System Exception From APEX- result received as Null/Empty');\n    \t\t\t\tmainDFD.reject(); \n\t\t    \t\t$.unblockUI();\n    \t\t }\n    \t\n    \t    else if (isException){\n    \t\t    alert('Exception:'+e.message +'\\n'+e.where);\n    \t\t    mainDFD.reject(); \n\t\t        $.unblockUI();\n    \t    }\n    \t    else{\n    \t\t\talert(e.message);\n    \t\t\tmainDFD.reject(); \n\t\t        $.unblockUI();\n    \t    }\n    \n            }\n        });\n}\n \n    var contactAuthId=contactModel.getFieldValue(contactRow,'Auth_Id__c');\n    if(authID!==null &amp;&amp; authID!==undefined &amp;&amp; createCompanyType!=='new' &amp;&amp; (contactAuthId!==undefined || contactAuthId!==null) ){\n        console.log('update auth on Contact:'+authID);\n        contactModel.updateRow(contactRow, {Auth_Id__c: authID});\n        contactModel.save();\n        skuid.model.save([contactModel],{callback: function(result){\n            if (result.totalsuccess){\n                updateExistingAuthID=true;\n                console.log('Updated authid of Contact');\n\t\t\t\tcallToCreateCompany();\n                //$.unblockUI();\n                //mainDFD.resolve();\n            } \n            else {\n                console.log(result);\n                mainDFD.reject();\n                $.unblockUI();\n                }\n            } \n\n        });\n    }\n    \n\nfunction callToCreateCompany(){\n\tOnlineSalesCatalogController.createCompanyCallout(createCompanyType,\n                                                        contactId,                     \n                                                        accountId,\n                                                        opportunityId,\n                                                        userName,\n                                                        billingCode,\n                                                        qboProductName,\n                                                        billingProfileId,\n                                                        addrLine1,\n                                                        City,\n                                                        State,\n                                                        postalCode,\n                                                        billingCountry,\n                                                        compAddressID,\n                                                        currencyCode,\n                                                        pwd,\n                                                        subscriptionFrequency,\n                                                        payrollFeatureSet,\n                                                        langg,\n                                                        sourceCode,\n                                                        clusterId,\n                                                        \n        function(result,e){\n    \n            console.log('Create Company Call Result from APEX: ',result);\n            console.log('Currnet date and time:'+ new Date());\n    \n            var isException = (e.type === 'exception')? true : false;\n        \n        if (e.status === true){\n    \n        \t\tif(!$.isEmptyObject(result)){\n            \n        \t\t//On SUCCESS\n        \t\t\tif(result.success === true){\n            \n            \t\t\t\tuserModel.updateRow(userRow, {\n                            \t\t\t\t                success_ui: result.success,\n                                            \t\t\t\tcreateCompanyID_ui: result.companyId\n                \n                                         \t\t\t\t});\n    \t\t\n    \t\t\t\tif(opportunityId !== null &amp;&amp; opportunityId !== undefined){\n                               console.log('opportunityId for flow = '+opportunityId);\n                                \n                             $.blockUI({\n                               message: 'Creating Order . . . Please Wait!'})\n                                console.log('Status_____Activated');\n                                console.log('compAddressID_______' + compAddressID);\n                                console.log('billingProfileId_______' + billingProfileId);\n                                console.log('billAddressID_______' + billAddressID);\n                                console.log('result.companyId________' + result.companyId);\n                                console.log('OfferId________' + OfferId);\n                                console.log('OfferType________' + OfferType);\n                                console.log('userName________' + userName);\n                                console.log('createCompanyType________' + createCompanyType);\n                                    \n                               OnlineSalesCatalogController.executeOportunityFlow(opportunityId,\n                                                                                   billingProfileId,\n                                                                                   compAddressID,\n                                                                                   billAddressID,\n                                                                                   result.companyId,\n                                                                                   OfferId,\n                                                                                   OfferType,\n                                                                                   userName,\n                                                                                   createCompanyType.toUpperCase(),\n                                                                                   'Signup',\n                                                                                   'Activated',\n                                        function(result,e){\n                                    \tif(e.status === true){\n                                        \t$.unblockUI();\n        \t\t\t\t\t                mainDFD.resolve(); \n                                    \t}\n                                    \telse{\n                                    \t       mainDFD.reject(); \n    \t\t                                   $.unblockUI();\n                                    \t}\n                               }); \n                            }\n        \t\t\t}\n        \t\t\telse{  \t\n        \t\t\t\t\tresult.errorMessage  = (result.errorMessage!==undefined &amp;&amp;result.errorMessage!=='' )?result.errorMessage : result.message;\n                            userModel.updateRow(userRow, \n                                                        {   \n                                                            success_ui: result.success,\n                                                            errorMessage_ui:result.errorMessage \n                                                            \n                                                        });\n    \t\t                if(opportunityId !== null &amp;&amp; opportunityId !== undefined){\n                               console.log('opportunityId for flow = '+opportunityId);\n                                \n                             $.blockUI({\n                               message: 'Creating Order . . . Please Wait!'})\n                                console.log('Status_____Draft');\n                                console.log('compAddressID_______' + compAddressID);\n                                console.log('billingProfileId_______' + billingProfileId);\n                                console.log('billAddressID_______' + billAddressID);\n                                console.log('result.companyId________' + result.companyId);\n                                console.log('OfferId________' + OfferId);\n                                console.log('OfferType________' + OfferType);\n                                console.log('userName________' + userName);\n                                console.log('createCompanyType________' + createCompanyType);\n                               OnlineSalesCatalogController.executeOportunityFlow(opportunityId,\n                                                                                   billingProfileId,\n                                                                                   compAddressID,\n                                                                                   billAddressID,\n                                                                                   '', \n                                                                                   OfferId,\n                                                                                   OfferType,\n                                                                                   userName,\n                                                                                   createCompanyType.toUpperCase(),\n                                                                                   'Signup',\n                                                                                   'Draft',\n                                        function(result,e){\n                                    \tif(e.status === true){\n                                        \t$.unblockUI();\n        \t\t\t\t\t                mainDFD.resolve(); \n                                    \t}\n                                    \telse{\n                                    \t       mainDFD.reject(); \n    \t\t                                   $.unblockUI();\n                                    \t}\n                               }); \n                            }\n    \t\t                \n    \t\t               alert('\\n'+result.errorMessage);\n    \t\t               \n    \t\t               mainDFD.reject(); \n    \t\t               $.unblockUI();\n                    \n            \t\t   }\n    \n        \t\t} //Close for if-EmptyObject()\n    \n        \t\telse if(result === null||result===''){\n        \t\t\t\talert('System Exception From APEX - result received as Null/Empty');\n        \t\t\t\tmainDFD.reject(); \n    \t\t    \t\t$.unblockUI();\n        \t\t}\n        \t}\n        \telse if (isException){\n    \n        \t\talert(e.message +'\\n'+e.where);\n        \t\tmainDFD.reject(); \n    \t\t    $.unblockUI();\n    \n        \t}\n        \telse{\n        \t\t\talert(e.message);\n        \t\t\tmainDFD.reject(); \n    \t\t        $.unblockUI();\n        \t    \n        \t}\n            \n        \n        });\n\t\t\n\t\n}\n//BTBS-5724 : authID parameter added\n/*console.log('Create Company call');\nOnlineSalesCatalogController.createCompanyCallout(createCompanyType,\n                                                        contactId,                     \n                                                        accountId,\n                                                        opportunityId,\n                                                        userName,\n                                                        billingCode,\n                                                        qboProductName,\n                                                        billingProfileId,\n                                                        addrLine1,\n                                                        City,\n                                                        State,\n                                                        postalCode,\n                                                        billingCountry,\n                                                        compAddressID,\n                                                        currencyCode,\n                                                        pwd,\n                                                        subscriptionFrequency,\n                                                        payrollFeatureSet,\n                                                        langg,\n                                                        sourceCode,\n                                                        clusterId,\n                                                        \n        function(result,e){\n    \n            console.log('Create Company Call Result from APEX: ',result);\n            console.log('Currnet date and time:'+ new Date());\n    \n            var isException = (e.type === 'exception')? true : false;\n        \n        if (e.status === true){\n    \n        \t\tif(!$.isEmptyObject(result)){\n            \n        \t\t//On SUCCESS\n        \t\t\tif(result.success === true){\n            \n            \t\t\t\tuserModel.updateRow(userRow, {\n                            \t\t\t\t                success_ui: result.success,\n                                            \t\t\t\tcreateCompanyID_ui: result.companyId\n                \n                                         \t\t\t\t});\n    \t\t\n    \t\t\t\tif(opportunityId !== null &amp;&amp; opportunityId !== undefined){\n                               console.log('opportunityId for flow = '+opportunityId);\n                                \n                             $.blockUI({\n                               message: 'Creating Order . . . Please Wait!'})\n                                console.log('Status_____Activated');\n                                console.log('compAddressID_______' + compAddressID);\n                                console.log('billingProfileId_______' + billingProfileId);\n                                console.log('billAddressID_______' + billAddressID);\n                                console.log('result.companyId________' + result.companyId);\n                                console.log('OfferId________' + OfferId);\n                                console.log('OfferType________' + OfferType);\n                                console.log('userName________' + userName);\n                                console.log('createCompanyType________' + createCompanyType);\n                                    \n                               OnlineSalesCatalogController.executeOportunityFlow(opportunityId,\n                                                                                   billingProfileId,\n                                                                                   compAddressID,\n                                                                                   billAddressID,\n                                                                                   result.companyId,\n                                                                                   OfferId,\n                                                                                   OfferType,\n                                                                                   userName,\n                                                                                   createCompanyType.toUpperCase(),\n                                                                                   'Signup',\n                                                                                   'Activated',\n                                        function(result,e){\n                                    \tif(e.status === true){\n                                        \t$.unblockUI();\n        \t\t\t\t\t                mainDFD.resolve(); \n                                    \t}\n                                    \telse{\n                                    \t       mainDFD.reject(); \n    \t\t                                   $.unblockUI();\n                                    \t}\n                               }); \n                            }\n        \t\t\t}\n        \t\t\telse{  \t\n        \t\t\t\t\tresult.errorMessage  = (result.errorMessage!==undefined &amp;&amp;result.errorMessage!=='' )?result.errorMessage : result.message;\n                            userModel.updateRow(userRow, \n                                                        {   \n                                                            success_ui: result.success,\n                                                            errorMessage_ui:result.errorMessage \n                                                            \n                                                        });\n    \t\t                if(opportunityId !== null &amp;&amp; opportunityId !== undefined){\n                               console.log('opportunityId for flow = '+opportunityId);\n                                \n                             $.blockUI({\n                               message: 'Creating Order . . . Please Wait!'})\n                                console.log('Status_____Draft');\n                                console.log('compAddressID_______' + compAddressID);\n                                console.log('billingProfileId_______' + billingProfileId);\n                                console.log('billAddressID_______' + billAddressID);\n                                console.log('result.companyId________' + result.companyId);\n                                console.log('OfferId________' + OfferId);\n                                console.log('OfferType________' + OfferType);\n                                console.log('userName________' + userName);\n                                console.log('createCompanyType________' + createCompanyType);\n                               OnlineSalesCatalogController.executeOportunityFlow(opportunityId,\n                                                                                   billingProfileId,\n                                                                                   compAddressID,\n                                                                                   billAddressID,\n                                                                                   '', \n                                                                                   OfferId,\n                                                                                   OfferType,\n                                                                                   userName,\n                                                                                   createCompanyType.toUpperCase(),\n                                                                                   'Signup',\n                                                                                   'Draft',\n                                        function(result,e){\n                                    \tif(e.status === true){\n                                        \t$.unblockUI();\n        \t\t\t\t\t                mainDFD.resolve(); \n                                    \t}\n                                    \telse{\n                                    \t       mainDFD.reject(); \n    \t\t                                   $.unblockUI();\n                                    \t}\n                               }); \n                            }\n    \t\t                \n    \t\t               alert('\\n'+result.errorMessage);\n    \t\t               \n    \t\t               mainDFD.reject(); \n    \t\t               $.unblockUI();\n                    \n            \t\t   }\n    \n        \t\t} //Close for if-EmptyObject()\n    \n        \t\telse if(result === null||result===''){\n        \t\t\t\talert('System Exception From APEX - result received as Null/Empty');\n        \t\t\t\tmainDFD.reject(); \n    \t\t    \t\t$.unblockUI();\n        \t\t}\n        \t}\n        \telse if (isException){\n    \n        \t\talert(e.message +'\\n'+e.where);\n        \t\tmainDFD.reject(); \n    \t\t    $.unblockUI();\n    \n        \t}\n        \telse{\n        \t\t\talert(e.message);\n        \t\t\tmainDFD.reject(); \n    \t\t        $.unblockUI();\n        \t    \n        \t}\n            \n        \n        });*/\n   \n\n   }\n});\n\nreturn mainDFD.promise(); \n\n</jsitem><jsitem location=\"inlinesnippet\" name=\"NavigateToStep2\" cachelocation=\"false\">var params = arguments[0],\n\t$ = skuid.$,\n    wizard = skuid.component.getById('mywizard');\nvar mainDFD = $.Deferred();\n\n// ==============================\n// Set up Models / Variables \n// ==============================\nvar panel = $('#mainGrid').find('#detailDiv');\nvar userSelModel = skuid.model.getModel('UserSelections'),\n    userSelModelRow = userSelModel.getFirstRow(),\n    sel = userSelModel.getFieldValue(userSelModelRow, 'MonthlyChoice'),\n    error = userSelModel.getFieldValue(userSelModelRow, 'orderError__ui');\nvar selectedRowModel = skuid.model.getModel('SelectedRow');\n\n   \n                                    // ============================================================\n                                    // Navigate to step 2 if a row is selected and no other errors\n                                    // ============================================================\n                                    if (error === null) {\n                                        \n                                        wizard.navigate('step2');\n                                        \n                                        var selectedRowFirst = selectedRowModel.getFirstRow();\n                                        selectedRowModel.updateRow(selectedRowFirst, {monthlyannual__ui: sel});\n                                        \n                                        // Update UI only step fields to wizard step 2, show panel\n                                        userSelModel.updateRow(userSelModelRow, {selectedStep: \"step2\"});\n                                        userSelModel.updateRow(userSelModelRow, {currentStep: \"step2\"});\n                                        userSelModel.save();\n                                        panel.show();\n                                        \n                                        //toggleButtonSet\n                                        /*var handleButtons = skuid.snippet.getSnippet('toggleButtonSet')();\n                                        handleButtons.done(function()\n                                        {\n                                            wizard.navigate('step2');\n                                            /*wizard.navigate('step2');\n                                        \n                                            var selectedRowFirst = selectedRowModel.getFirstRow();\n                                            selectedRowModel.updateRow(selectedRowFirst, {monthlyannual__ui: sel});\n                                            \n                                            // Update UI only step fields to wizard step 2, show panel\n                                            userSelModel.updateRow(userSelModelRow, {selectedStep: \"step2\"});\n                                            userSelModel.updateRow(userSelModelRow, {currentStep: \"step2\"});\n                                            userSelModel.save();\n                                            panel.show();*/\n                                            \n                                            \n                                            $.unblockUI();\n                                            mainDFD.resolve();\n                                            \n                                        //});*/\n                                        \n                                        \n                                    }\n    \n\n\n//return mainDFD.promise();\n</jsitem><jsitem location=\"inlinesnippet\" name=\"saveBillingProfile\" cachelocation=\"false\">//===========================\n// Setup Models and variables\n//===========================\n\nvar $ = skuid.$;\nvar models = skuid.model.map();\nvar bpModel = models.BillingProfile;\nvar bpRow = bpModel.getFirstRow();\n\nvar cvvNo = bpModel.getFieldValue(bpRow, 'CVV_ui');\n\nvar addressModel = skuid.model.getModel('NewAddress');\nvar addressRow = addressModel.getFirstRow();\n\nvar extngCompAddrs = skuid.model.getModel('ExtngCompAddress');\nvar extngCompAddrssRow = extngCompAddrs.getFirstRow();\nvar extngCompAddrsID = extngCompAddrs.getFieldValue(extngCompAddrssRow,'Id');\n\nvar accountModel = skuid.model.getModel('NewAccount');\nvar accRow = accountModel.getFirstRow();\n\nvar mainDFD = $.Deferred();\n\nvar existingAccountModel = skuid.$M('Account');\nvar existingAccountModelRow = existingAccountModel.getFirstRow();\n\nvar companyIdExistingAccount = existingAccountModel.getFieldValue(existingAccountModelRow,'Company_ID__c');\nvar canIdExistingAccount = existingAccountModel.getFieldValue(existingAccountModelRow,'CAN__c');\n\nvar isAbandonded = false;\n            \n        if((companyIdExistingAccount === '' || companyIdExistingAccount === null) &amp;&amp; (canIdExistingAccount === '' || canIdExistingAccount === null)) \n        {\n            isAbandonded = true;\n            console.log('*** This is an ABANDONED Account  4m SAVE BILLING PROFILE ***');\n        }\n\nvar SameAsCompAddr = addressModel.getFieldValue(addressModel.getFirstRow(),'SameAsCompAddr_ui');\n\n//Save Billing Profile\n\n$.blockUI({\n   message: 'Processing . . .',\n   onBlock:function(){\n       var isUpdated = false;\n       if(!$.isEmptyObject(bpRow)){\n           \n        console.log('from saveBPle - addID ==== ',addressRow.Id);\n        var bpAddId = addressModel.getFieldValue(addressRow,'Id15');\n        if(addressRow!==null &amp;&amp; addressRow!==undefined){\n            if(addressRow.hasOwnProperty('Id15') &amp;&amp; bpAddId !== undefined){\n                isUpdated = true;\n                bpModel.updateRow(bpRow, {  Account_ID__c : accRow.Id, \n                                            Address_ID__c: bpAddId,\n                                            Credit_Card_Verification_Number__c : cvvNo\n                                         });\n            }\n        }\n        if(!isUpdated){\n            bpModel.updateRow(bpRow,{ Account_ID__c : accRow.Id, Credit_Card_Verification_Number__c : cvvNo });\n            if(extngCompAddrs.data.length){\n                if(isAbandonded &amp;&amp; SameAsCompAddr &amp;&amp; extngCompAddrsID.length &gt;= 15){\n                    console.log('============ FROM Save Billing Profile ===================');\n                    console.log('isAbandonded @@@@@ ',isAbandonded);\n                    console.log('SameAsCompAddr @@@@@ ',SameAsCompAddr);\n                    console.log('extngCompAddrsID @@@@ ',extngCompAddrsID);\n                    console.log('============ FROM Save Billing Profile ENDs ===================');\n                    bpModel.updateRow(bpRow,{ Address_ID__c: extngCompAddrsID });\n                    extngCompAddrs.updateRow(extngCompAddrssRow,{ Bill_To_Address__c : true });\n                    extngCompAddrs.save();\n                }\n            }\n        }\n        \n        \n        \n        skuid.model.save([bpModel],{callback: function(result){\n                if (result.totalsuccess){\n        \n        //alert('Billing Profile Id: ' + bpModel.getFirstRow().Id); // should be a real SF Id now\n        console.log('Billing Profile - ID ',bpModel.getFirstRow().Id);\n        $.unblockUI();\n        mainDFD.resolve();\n    \n    } \n    else {\n        // There was a problem. Let's see what went wrong.\n        \n        //alert('Billing Profile Save Error: \\n' + result.insertResults[0]);\n        console.log('Billing Profile - Save Error',result.insertResults[0]);\n        \n        mainDFD.reject();\n        $.unblockUI();\n\n        }\n    } \n    \n    });\n    \n  \n    \n}\n\n   }\n});\n\n\n\nreturn mainDFD.promise();\n\n\n</jsitem><jsitem location=\"inlinesnippet\" name=\"sendQuote\" cachelocation=\"false\">\nvar params = arguments[0],\n\t$ = skuid.$;\n\t\nwindow.open(\"/_ui/core/email/author/EmailAuthor?p2_lkid=0031900000FzpgP&amp;p3_lkid={{offerId}}&amp;template_id=00X19000000I4bREAS\");\n\n\n</jsitem><jsitem location=\"inlinesnippet\" name=\"redirectToAccount\" cachelocation=\"false\" url=\"\">\n    $ = skuid.$;\n    var newAccountModel = skuid.$M('NewAccount');\n    var accID = newAccountModel.getFieldValue(newAccountModel.getFirstRow(), 'Id');\n    redirectTo(null, '/'+accID,null, false, true); //BTBS-6011. Added first parameter null\n    /*var elements = document.getElementsByClassName(\"navigatePrimary\");\n    var i;\n    for (i = 0; i &lt; elements.length; i++) {\n        //Check if element is an Anchor Tag or not\n        if(elements[i].tagName.toLowerCase() == 'a'){\n            //Register Click Handler to redirect properly\n             elements[i].onclick = function(e){\n                e.preventDefault();\n                var url = this.attributes.href.value;\n                console.log('---url--'+url);\n                if(sforce !== undefined &amp;&amp; sforce.console !== undefined &amp;&amp; sforce.console.isInConsole()){\n                    sforce.console.getEnclosingPrimaryTabId(function(result){\n                        var tabId = result.id;\n                        sforce.console.openPrimaryTab(tabId, url, true);\n                    })\n                }else{\n                    window.location.href = this.attributes.href.value;\n                }\n            };    \n        }\n    }*/</jsitem><jsitem location=\"inlinesnippet\" name=\"displayBreadcrumbs\" cachelocation=\"false\">var $ = skuid.$;\nreturn !(sforce !== undefined &amp;&amp; sforce.console != undefined &amp;&amp; sforce.console.isInConsole());</jsitem></javascript></resources><styles><styleitem type=\"background\" bgtype=\"none\"/></styles></skuidpage>","skuid__Layout5__c":null}]