<?xml version="1.0" encoding="UTF-8"?>
<CustomObject xmlns="http://soap.sforce.com/2006/04/metadata">
    <validationRules>
        <fullName>AccountNameChangeRestriction</fullName>
        <active>true</active>
        <description>This rule will make sure that the account name can only by changed by system admins (or an alternate set of admin users)</description>
        <errorConditionFormula>AND(
ISCHANGED(Name),
NOT(ISBLANK(CAN__c)),
($Profile.Name &lt;&gt; &quot;System Administrator&quot;),
($Profile.Name &lt;&gt; &quot;API Only&quot;),
AND(
OR(
($Profile.Name &lt;&gt; &quot;Payroll Support&quot;),
($User.Role__c &lt;&gt; &quot;KA Onboarding&quot;)
),
OR(
($Profile.Name &lt;&gt; &quot;Onboarding Support&quot;),
($User.Role__c &lt;&gt; &quot;KA Onboarding&quot;)
),
OR(
($Profile.Name &lt;&gt; &quot;Tier2SBCareAgent&quot;),
($User.Role__c &lt;&gt; &quot;Tier2SupportDesktop&quot;)
),
OR(
($Profile.Name &lt;&gt; &quot;Tier2SBCareAgent&quot;),
($User.Role__c &lt;&gt; &quot;Tier2ServiceDesktop&quot;)
),
OR(
($Profile.Name &lt;&gt; &quot;Tier3SBCareAgent&quot;),
($User.Role__c &lt;&gt; &quot;Tier3Desktop&quot;)
),
OR(
($Profile.Name &lt;&gt; &quot;Tier2SBCDTandOL&quot;),
($User.Role__c &lt;&gt; &quot;DTOL Tier 2&quot;)
),
OR(
($Profile.Name &lt;&gt; &quot;SB Care DT and OL&quot;),
($User.Role__c &lt;&gt; &quot;DTOL Mgr&quot;)
)
)
)</errorConditionFormula>
        <errorMessage>You are not authorized to change the name of this Customer. Please contact  your system administrator</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>AccountNameSplChars</fullName>
        <active>true</active>
        <description>This is a constraint on the characters that can be entered in the Account name field.
This validation is applicable where company id is null and for users with all profiles except &apos;API Only&apos; and &apos;System Administrator&apos;</description>
        <errorConditionFormula>AND(NOT(REGEX(Name,&quot;[a-zA-ZÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿœŒ₣€«»0-9#-_/&amp;$!@*(){}?&apos;:;\&quot;\\[\\]. ]+&quot;)),( $Profile.Name &lt;&gt; &quot;API Only&quot; ),( $Profile.Name &lt;&gt;  &quot;System Administrator&quot;),(ISBLANK(Company_ID__c)))</errorConditionFormula>
        <errorDisplayField>of_Accounts__c</errorDisplayField>
        <errorMessage>Account Name can contain only alpha numeric values and these special characters-#,-,_,/, &amp;, $, !, @, *, (, ), {,},[,],?,&apos;,&quot;,:,;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>PartnerIdIsRequired</fullName>
        <active>false</active>
        <description>When Customer Type is Partner, Partner Id is required</description>
        <errorConditionFormula>AND(ISPICKVAL(Customer_Type__c, &quot;Partner&quot;), ISBLANK(Partner_Id__c))</errorConditionFormula>
        <errorDisplayField>Partner_Id__c</errorDisplayField>
        <errorMessage>Partner Id is a required field when customer type is partner</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>PartnerNameIsRequired</fullName>
        <active>false</active>
        <description>When the customer type is Partner, the partner name is required</description>
        <errorConditionFormula>AND(ISPICKVAL(Customer_Type__c, &quot;Partner&quot;),  ISBLANK(Partner_Name__c))</errorConditionFormula>
        <errorDisplayField>Partner_Name__c</errorDisplayField>
        <errorMessage>Partner Name is required when Customer is of type Partner</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>PartnerTypeRequired</fullName>
        <active>true</active>
        <description>Customer Sub-Type is a required field when the customer type is Partner</description>
        <errorConditionFormula>AND (ISPICKVAL(Customer_Type__c, &quot;Partner&quot;), ISBLANK(TEXT(Customer_Sub_Type__c)), NOT(CONTAINS( UPPER($User.Username), &quot;DMIGR&quot;)))</errorConditionFormula>
        <errorDisplayField>Customer_Sub_Type__c</errorDisplayField>
        <errorMessage>Customer Sub-Type is a required field when Customer is a Partner</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>coowner_and_owner_should_be_different</fullName>
        <active>true</active>
        <description>SA-520 (Account Owner and Co Owner cannot be same person)</description>
        <errorConditionFormula>AND( 
($Profile.Name &lt;&gt; &quot;System Administrator&quot;), 
($Profile.Name &lt;&gt; &quot;API Only&quot;), 
OwnerId=Co_Owner__r.Id 
)</errorConditionFormula>
        <errorDisplayField>Co_Owner__c</errorDisplayField>
        <errorMessage>The Account Owner and Co-Owner must be different. Change one or leave the Co-Owner field blank.</errorMessage>
    </validationRules>
    <webLinks>
        <fullName>Account_360</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Account 360</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&apos;/soap/ajax/30.0/connection.js&apos;)} 
{!REQUIRESCRIPT(&quot;/xdomain/xdomain.js&quot;)} 
{!REQUIRESCRIPT(&quot;/support/console/28.0/integration.js&quot;)} 
{!REQUIRESCRIPT(&apos;/js/functions.js&apos;)} 
try{ 

var accountID = &quot;{!Account.Id}&quot;; 

if(accountID ){ 
var url = &apos;/apex/Account360?id=&apos;+accountID ; 

if(typeof(srcUp) == &apos;function&apos;) //Checks that it is in console 
{ 
var openSubtab = function(result){ 
sforce.console.openSubtab(result.id,url + &apos;&amp;inConsole=true&apos;, true, &apos;Account 360&apos;, null); 
}; 
sforce.console.getEnclosingPrimaryTabId(openSubtab); 
} 
else{ 
window.open(url + &apos;&amp;inConsole=false&apos;, &quot;_self&quot;); 
} 
} 
} 
catch(e){ 
alert (&apos;Your request could not be completed, Please try again later.&apos;); 
}</url>
    </webLinks>
    <webLinks>
        <fullName>AltavistaNews</fullName>
        <availability>online</availability>
        <displayType>link</displayType>
        <encodingKey>UTF-8</encodingKey>
        <hasMenubar>true</hasMenubar>
        <hasScrollbars>true</hasScrollbars>
        <hasToolbar>true</hasToolbar>
        <height>600</height>
        <isResizable>true</isResizable>
        <linkType>url</linkType>
        <masterLabel>Altavista News</masterLabel>
        <openType>newWindow</openType>
        <position>none</position>
        <protected>false</protected>
        <showsLocation>true</showsLocation>
        <showsStatus>true</showsStatus>
        <url>http://news.altavista.com/search?nc=0&amp;q={!Account_Name}</url>
    </webLinks>
    <webLinks>
        <fullName>Billing_History</fullName>
        <availability>online</availability>
        <description>This buttons navigates to billing history page to display billing data coming from BRM using external object.</description>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Billing</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/support/console/27.0/integration.js&quot;)}
	{!REQUIRESCRIPT(&quot;/soap/ajax/27.0/apex.js&quot;)}
	
	var accId = &apos;{!Account.Id}&apos;;
	var tabName = &apos;Orders&apos;;
	var openSubtab = function openSubtab(result) {
	//Now that we have the primary tab ID, we can open a new subtab in it
	var primaryTabId = result.id;
	sforce.console.openSubtab(primaryTabId ,url, true, tabName, null);
	};

	if (&apos;{!Account.CAN__c}&apos; == &apos;&apos; || &apos;{!Account.CAN__c}&apos; == null)
	{
	       alert(&apos;Account does not have CAN, cannot display billing history without CAN.&apos;);
	}
	else{
	       try {
	
	              var url = &apos;/apex/BillingHistoryList?CAN={!Account.CAN__c}&apos;;
	              if (sforce.console.isInConsole()) {
	              sforce.console.getEnclosingPrimaryTabId(openSubtab);
	              } else {
	              window.open(url, &apos;_self&apos;);
	              }
	       }
	       catch(e) {
	       alert(&apos;No billing history found for this Account.\n&apos; + e.message);
	       }
}</url>
    </webLinks>
    <webLinks>
        <fullName>Billing_Profiles</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Billing Profiles</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/support/console/35.0/integration.js&quot;)}
{!REQUIRESCRIPT(&quot;/soap/ajax/27.0/apex.js&quot;)}

var accId = &apos;{!Account.Id}&apos;;
var tabName = &apos;Billing Profiles&apos;;
var openSubtab = function openSubtab(result) {
    //Now that we have the primary tab ID, we can open a new subtab in it
    var primaryTabId = result.id;
    sforce.console.openSubtab(primaryTabId ,url, true, tabName, null);
};


if(&apos;{!Account.Company_ID__c}&apos; == &apos;&apos; || &apos;{!Account.Company_ID__c}&apos; == null) {
	try {
		
		var url = &apos;/apex/AccountBillingProfileList?id=&apos; + accId + &apos;&amp;scontrolCaching=1&amp;core.apexpages.devmode.url=1&apos;; 
		if (sforce.console.isInConsole()) {
			sforce.console.getEnclosingPrimaryTabId(openSubtab);
		    } else {
			window.open(url, &apos;_self&apos;);
		    }
	    }
	catch(e) {
		alert(&apos;Error occurred while getting billing profiles list from Siebel.\n&apos; + e.message);
	}
}</url>
    </webLinks>
    <webLinks>
        <fullName>Create_New_Account_Button</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Create New Account</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/soap/ajax/29.0/connection.js&quot;)}
var acct = new sforce.SObject(&quot;Account&quot;);
acct.name = &apos;New Account&apos;;
var result = sforce.connection.create([acct]);

if(result[0].getBoolean(&quot;success&quot;)){

window.location = &quot;/&quot; + result[0].id + &quot;/e&quot;;

}else{

alert(&apos;Could not create record &apos;+result);

}</url>
    </webLinks>
    <webLinks>
        <fullName>Create_PCG_Case</fullName>
        <availability>online</availability>
        <description>Launch the PCG Case SKUID page</description>
        <displayType>button</displayType>
        <encodingKey>UTF-8</encodingKey>
        <height>600</height>
        <linkType>url</linkType>
        <masterLabel>Create PCG Case</masterLabel>
        <openType>sidebar</openType>
        <protected>false</protected>
        <url>/apex/skuid__ui?page=PCG_New_Case_Wizard&amp;id={!Account.Id}</url>
    </webLinks>
    <webLinks>
        <fullName>Generate_Renewal</fullName>
        <availability>online</availability>
        <description>This button will take users to renewal entitlement list for on demand quote generation.</description>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Generate Renewal</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/support/console/27.0/integration.js&quot;)}
{!REQUIRESCRIPT(&quot;/soap/ajax/27.0/apex.js&quot;)}

var accId = &apos;{!Account.Id}&apos;;
var tabName = &apos;Renewal&apos;;
var openSubtab = function openSubtab(result) {
    //Now that we have the primary tab ID, we can open a new subtab in it
    var primaryTabId = result.id;
    sforce.console.openSubtab(primaryTabId ,url, true, tabName, null);
};


if(&apos;{!Account.Company_ID__c}&apos; == &apos;&apos; || &apos;{!Account.Company_ID__c}&apos; == null) {
	try {
		
		var url = &apos;/apex/AcctRenewalEntList?id=&apos; + accId + &apos;&amp;scontrolCaching=1&amp;core.apexpages.devmode.url=1&apos;; 
		if (sforce.console.isInConsole()) {
			sforce.console.getEnclosingPrimaryTabId(openSubtab);
		    } else {
			window.open(url, &apos;_self&apos;);
		    }
	    }
	catch(e) {
		alert(&apos;Error occurred while renewal list from Siebel.\n&apos; + e.message);
	}
}</url>
    </webLinks>
    <webLinks>
        <fullName>GoogleMaps</fullName>
        <availability>online</availability>
        <displayType>link</displayType>
        <encodingKey>UTF-8</encodingKey>
        <hasMenubar>false</hasMenubar>
        <hasScrollbars>true</hasScrollbars>
        <hasToolbar>false</hasToolbar>
        <height>600</height>
        <isResizable>true</isResizable>
        <linkType>url</linkType>
        <masterLabel>Google Maps</masterLabel>
        <openType>newWindow</openType>
        <position>none</position>
        <protected>false</protected>
        <showsLocation>false</showsLocation>
        <showsStatus>false</showsStatus>
        <url>http://maps.google.com/maps?f=q&amp;hl=en&amp;q={!Account.BillingStreet}+{!Account.BillingCity}+{!Account.BillingState}&amp;om=1</url>
    </webLinks>
    <webLinks>
        <fullName>GoogleNews</fullName>
        <availability>online</availability>
        <displayType>link</displayType>
        <encodingKey>UTF-8</encodingKey>
        <hasMenubar>false</hasMenubar>
        <hasScrollbars>true</hasScrollbars>
        <hasToolbar>false</hasToolbar>
        <height>600</height>
        <isResizable>true</isResizable>
        <linkType>url</linkType>
        <masterLabel>Google News</masterLabel>
        <openType>newWindow</openType>
        <position>none</position>
        <protected>false</protected>
        <showsLocation>false</showsLocation>
        <showsStatus>false</showsStatus>
        <url>http://www.google.com/news?&amp;q={!Account_Name}&amp;btnG=Search+News</url>
    </webLinks>
    <webLinks>
        <fullName>GoogleSearch</fullName>
        <availability>online</availability>
        <displayType>link</displayType>
        <encodingKey>UTF-8</encodingKey>
        <hasMenubar>false</hasMenubar>
        <hasScrollbars>true</hasScrollbars>
        <hasToolbar>false</hasToolbar>
        <height>600</height>
        <isResizable>true</isResizable>
        <linkType>url</linkType>
        <masterLabel>Google Search</masterLabel>
        <openType>newWindow</openType>
        <position>none</position>
        <protected>false</protected>
        <showsLocation>false</showsLocation>
        <showsStatus>false</showsStatus>
        <url>http://www.google.com/search?q={!Account_Name}</url>
    </webLinks>
    <webLinks>
        <fullName>HooversProfile</fullName>
        <availability>online</availability>
        <displayType>link</displayType>
        <encodingKey>UTF-8</encodingKey>
        <hasMenubar>false</hasMenubar>
        <hasScrollbars>true</hasScrollbars>
        <hasToolbar>false</hasToolbar>
        <height>600</height>
        <isResizable>true</isResizable>
        <linkType>url</linkType>
        <masterLabel>Hoovers Profile</masterLabel>
        <openType>newWindow</openType>
        <position>none</position>
        <protected>false</protected>
        <showsLocation>false</showsLocation>
        <showsStatus>false</showsStatus>
        <url>http://search.hoovers.com/cgi-bin/hol_search?which=company&amp;query_string={!Account_Name}</url>
    </webLinks>
    <webLinks>
        <fullName>Legacy_Cases</fullName>
        <availability>online</availability>
        <description>To view cases of Account from Siebel</description>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Legacy Cases</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>if (typeof(srcUp) == &apos;function&apos;) {
    srcUp(&apos;/apex/Account_Siebel_Cases?id={!Account.Id}&apos;);
} else {   
    window.open(&apos;/apex/Account_Siebel_Cases?id={!Account.Id}&apos;,&apos;_self&apos;);
}</url>
    </webLinks>
    <webLinks>
        <fullName>New_QBO_Order</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>New QBO Order</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&apos;/soap/ajax/30.0/connection.js&apos;)} 
{!REQUIRESCRIPT(&quot;/xdomain/xdomain.js&quot;)} 
{!REQUIRESCRIPT(&quot;/support/console/28.0/integration.js&quot;)}
{!REQUIRESCRIPT(&apos;/js/functions.js&apos;)} 
{!REQUIRESCRIPT(&apos;/resource/jQueryForPopup/jQuery/jquery-1.8.2.min.js&apos;)} 
{!REQUIRESCRIPT(&apos;/resource/jQueryForPopup/jQuery/postmessage/jquery.ba-postmessage.js&apos;)} 
{!REQUIRESCRIPT(&apos;/resource/jQueryForPopup/jQuery/bbq/jquery.ba-bbq.min.js&apos;)} 
{!REQUIRESCRIPT(&apos;/resource/jQueryForPopup/jQuery/ui/jquery-ui-1.9.1.custom.min.js&apos;)} 

requireCssFile(&apos;/resource/jQueryForPopup/jQuery/ui/css/ui-lightness/jquery-ui-1.9.1.custom.min.css&apos;); 

function requireCssFile(filename) 
{ 
var fileref = document.createElement(&apos;link&apos;);
fileref.setAttribute(&apos;rel&apos;, &apos;stylesheet&apos;);
fileref.setAttribute(&apos;type&apos;, &apos;text/css&apos;);
fileref.setAttribute(&apos;href&apos;, filename);
document.getElementsByTagName(&apos;head&apos;)[0].appendChild(fileref);
}

try{

var compID = &quot;{!Account.Company_ID__c}&quot;; 
var CAN = &quot;{!Account.CAN__c}&quot;; 

if(!CAN&amp;&amp;!compID){
    var url = &apos;/apex/OnlineSalesCatalogSkuid?AccountId={!Account.Id}&amp;country={!Account.Country__c}&apos;;

    if(typeof(srcUp) == &apos;function&apos;) //Checks that it is in console
    { 
        var openSubtab = function(result){ 
        sforce.console.openSubtab(result.id,url + &apos;&amp;inConsole=true&apos;, true, &apos;New QBO Order&apos;, null); 
        }; 
        sforce.console.getEnclosingPrimaryTabId(openSubtab); 
    }
    else{ 
        window.open(url + &apos;&amp;inConsole=false&apos;,  &quot;_self&quot;);
    }
} 
else{ 
var j$ = jQuery.noConflict();

var newCoName;

var theDialog = j$(skuid.component.getByType(&apos;skuidpage&apos;)[0].element).dialog({
autoOpen: true, 
title: &apos;New QBO Company&apos;, 
resizable: true,
height:250,
width:425,
escapeClose: true,
modal: true, 
draggable: true,

open: function (event, ui) {
    j$(&apos;#AccountButtonPopupContainer&apos;).css(&apos;overflow&apos;, &apos;hidden&apos;);
    j$(&apos;#AccountButtonPopupError&apos;).css({&apos;display&apos;:&apos;none&apos;});
    j$(&apos;#AccountNameInput&apos;).attr(&apos;value&apos;,&apos;&apos;);
    j$(&apos;#AccountNameInput&apos;).attr(&apos;placeholder&apos;,&apos;New Company Name&apos;);
    j$(&apos;#AccountNameInput&apos;).focus();

}
                                    
});

//j$(&apos;#AccountButtonPopupContainer&apos;).dialog(&quot;open&quot;);

j$( &quot;#popupCancelButton&quot; ).click(function() {

   //j$(&quot;#AccountButtonPopupContainer&quot;).css(&quot;display&quot;, &quot;none&quot;);
   theDialog.dialog(&quot;close&quot;);
   

});

j$( &quot;#popupContinueButton&quot; ).click(function() {

// When the continue button is clicked, fetch all required data from the popup and close it.
var newCoName = document.getElementById(&quot;AccountNameInput&quot;).value;
newCoName = encodeURIComponent(newCoName);

var accountid = &quot;{!Account.Id}&quot;; 
var country = &quot;{!Account.Country__c}&quot;; 
    
    if(newCoName === &apos;&apos;) {
        j$(&apos;#AccountButtonPopupError&apos;).css({&apos;display&apos;:&apos;inline&apos;});
    }
    else{
    var url= &apos;/apex/c__OnlineSalesCatalogSkuid?AccountId=&apos;+accountid+&apos;&amp;Name=&apos;+newCoName+&apos;&amp;country=&apos;+country;

    //Close popup and redirect to catalog
    theDialog.dialog(&quot;close&quot;);

    if(typeof(srcUp) == &apos;function&apos;) //Checks that it is in console
    { 
    var openSubtab = function(result){ 
    sforce.console.openSubtab(result.id,url + &apos;&amp;inConsole=true&apos;, true, &apos;New QBO Order&apos;, null); 
    }; 
    sforce.console.getEnclosingPrimaryTabId(openSubtab); 

    } 
    else{ 
    window.open(url + &apos;&amp;inConsole=false&apos;,  &quot;_self&quot;);
    }
    }
});
}
}
catch(e){
  alert (&apos;Your request could not be completed, Please try again later.&apos;);
  console.log(&apos;exception @@@@ &apos;,e);
}</url>
    </webLinks>
    <webLinks>
        <fullName>PCG_Account_Detail</fullName>
        <availability>online</availability>
        <description>View of the PCG Account Detail</description>
        <displayType>button</displayType>
        <encodingKey>UTF-8</encodingKey>
        <height>600</height>
        <linkType>url</linkType>
        <masterLabel>PCG Account Detail</masterLabel>
        <openType>sidebar</openType>
        <protected>false</protected>
        <url>/apex/skuid__ui?page=PCG_AcctDetail&amp;id={!Account.Id}</url>
    </webLinks>
    <webLinks>
        <fullName>PCG_Renewal_Invoice</fullName>
        <availability>online</availability>
        <description>Opens skuid page for viewing renewal PDF invoice and sales/marketing notes</description>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>PCG Renewal Invoice</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/support/console/27.0/integration.js&quot;)}
{!REQUIRESCRIPT(&quot;/soap/ajax/27.0/apex.js&quot;)}

var accId = &apos;{!Account.Id}&apos;;
var tabName = &apos;Renewal Invoice&apos;;
var openSubtab = function openSubtab(result) {
//Now that we have the primary tab ID, we can open a new subtab in it
var primaryTabId = result.id;
sforce.console.openSubtab(primaryTabId ,url, true, tabName, null);
};

if (&apos;{!Account.CAN__c}&apos; == &apos;&apos; || &apos;{!Account.CAN__c}&apos; == null)
{
alert(&apos;Account does not have CAN, cannot display Invoice list without CAN.&apos;);
}
else{
try {

var url = &apos;/apex/skuid__ui?page=PCG_TY17_Invoice&amp;id={!Account.Id}&apos;;
if (sforce.console.isInConsole()) {
sforce.console.getEnclosingPrimaryTabId(openSubtab);
} else {
window.open(url, &apos;_self&apos;);
}
}
catch(e) {
alert(&apos;Error occurred while loading Invoices \n&apos; + e.message);
}
}</url>
    </webLinks>
    <webLinks>
        <fullName>Partner_360</fullName>
        <availability>online</availability>
        <description>SA-451
Enable Partner 360 view to launch from additional location outside of BDM Dashboard. This button should only be visible for profile: Bus Admin, Global Account Management, Us Account Management.</description>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Partner 360</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/soap/ajax/33.0/connection.js&quot;)}
{!REQUIRESCRIPT(&quot;/soap/ajax/33.0/apex.js&quot;)}
var skuidUrl=&quot;{!$Setup.Partner_360_Url__c.url__c}&quot;;
var aactId=&quot;{!Account.Top_Level_Account__c}&quot;;
var CurrCustomerType=&quot;{! Account.Customer_Type__c }&quot;;
var customSettinCustomerTpe=&quot;{!$Setup.Partner_360_customerType__c.value__c}&quot;;
if(skuidUrl !=&apos;&apos; &amp;&amp; (customSettinCustomerTpe.split(&quot;,&quot;).indexOf(CurrCustomerType)&gt;-1))
{
 if(sforce.console.isInConsole())
 {           
 sforce.console.openPrimaryTab(null,skuidUrl+aactId,true,&apos;Account&apos;, &apos;&apos;, &apos;Account&apos;);
 }
else
{ 
  window.open(skuidUrl+aactId,&quot;_blank&quot;);
}
}</url>
    </webLinks>
    <webLinks>
        <fullName>Sync</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Sync with Siebel</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/soap/ajax/27.0/connection.js&quot;)} 
{!REQUIRESCRIPT(&quot;/soap/ajax/27.0/apex.js&quot;)} 

var elements = document.getElementsByName(&quot;sync&quot;);

if(&apos;{!Account.CAN__c}&apos; == &apos;&apos; &amp;&amp; &apos;{!Account.Company_ID__c}&apos; == &apos;&apos;) {
	try {
		var accId  = &apos;{!Account.Id}&apos;;
		var result = sforce.apex.execute(&quot;MDMCallouts&quot;, &quot;syncWithSiebelWS&quot;, {accIdSet: &apos;{!Account.Id}&apos;, updateMode : 1});
		if(result != &apos;Success&apos;) {
			alert(result);
		} else {
			for(i = 0; i &lt; elements.length; i ++) {
				elements[i].setAttribute(&quot;disabled&quot;, &quot;disabled&quot;);
				elements[i].setAttribute(&quot;class&quot;, &quot;btnDisabled&quot;);
				elements[i].setAttribute(&quot;value&quot;, &quot;Synchronizing with Siebel...&quot;);
			}			
		}		
	} catch(e) {
		alert(&apos;Error while syncing account with Siebel.\n&apos; + e.message);
	}
} else {
	alert(&quot;Cannot synchronize Account. CAN or Company Id is already available.&quot;);
	for(i = 0; i &lt; elements.length; i ++) {
		elements[i].setAttribute(&quot;disabled&quot;, &quot;disabled&quot;);
		elements[i].setAttribute(&quot;class&quot;, &quot;btnDisabled&quot;);
	}
}</url>
    </webLinks>
    <webLinks>
        <fullName>SyncRN</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Sync With RN</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/soap/ajax/27.0/connection.js&quot;)} 
{!REQUIRESCRIPT(&quot;/soap/ajax/27.0/apex.js&quot;)} 

var elements = document.getElementsByName(&quot;syncrn&quot;); 
if(&apos;{!Account.CAN__c}&apos; == &apos;&apos;) { 
alert(&quot;Cannot synchronize To RN.CAN is Not available.&quot;); 
	for(i = 0; i &lt; elements.length; i ++) { 
	elements[i].setAttribute(&quot;disabled&quot;, &quot;disabled&quot;); 
	elements[i].setAttribute(&quot;class&quot;, &quot;btnDisabled&quot;); 
	} 
}			
else { 

try { 
	var CANId = &apos;{!Account.CAN__c}&apos;; 
for(i = 0; i &lt; elements.length; i ++) { 

elements[i].setAttribute(&quot;value&quot;, &quot;Processing...&quot;); 
}
	var result = sforce.apex.execute(&quot;SyncWithRN&quot;,&quot;SyncWithRNWS&quot;, {theCanId:&apos;{!Account.CAN__c}&apos;});
	//alert(result); 
	if(result != &apos;&apos;) { 
	alert(result); 
	 
	for(i = 0; i &lt; elements.length; i ++) { 
	elements[i].setAttribute(&quot;disabled&quot;, &quot;disabled&quot;); 
	elements[i].setAttribute(&quot;class&quot;, &quot;btnDisabled&quot;);
elements[i].setAttribute(&quot;value&quot;, &quot;Sync With RN&quot;);  
	
	}	
	}	
	} catch(e) { 
	alert(&apos;Error Syncing with Right Networks. Please check your privileges or try again later.\n&apos;);
        for(i = 0; i &lt; elements.length; i ++) { 
elements[i].setAttribute(&quot;value&quot;, &quot;Sync With RN&quot;); 
} 
 
	} 
}</url>
    </webLinks>
    <webLinks>
        <fullName>Sync_With_OII</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Sync with QBO</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>function loadScript(url) {
        var request;
        if (window.XMLHttpRequest) {
            request = new XMLHttpRequest();
        } else if (window.ActiveXObject) {
            request = new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;);
            if (!request) {
                request = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);
            }
        }

        var se = document.createElement(&apos;script&apos;);
        se.type = &quot;text/javascript&quot;;
        request.open(&quot;GET&quot;, url, false);
        request.send(null);
        se.text = request.responseText;
        document.getElementsByTagName(&apos;head&apos;)[0].appendChild(se);
    }

    loadScript(&quot;/soap/ajax/30.0/connection.js&quot;);
    loadScript(&quot;/soap/ajax/30.0/apex.js&quot;);
    
if(&apos;{!Account.Company_ID__c}&apos; != &apos;&apos;) {
var confirMsg = &apos;Synchronizing record will overwrite any existing values for the record.\nAre you sure you want to proceed?&apos;
if(confirm(confirMsg)) {
var result = sforce.apex.execute(&quot;OIIIntegrationController&quot;, &quot;syncFromDetailPage&quot;, {companyId: &apos;{!Account.Company_ID__c}&apos;}); 
alert(result);
window.location.reload();
}
} else {
alert(&apos;Cannot synchronize account with OII, as it does not have an Company Id.&apos;);
}</url>
    </webLinks>
    <webLinks>
        <fullName>View_Orders</fullName>
        <availability>online</availability>
        <description>To view Orders of an Account from Siebel.</description>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>View Orders</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/support/console/27.0/integration.js&quot;)}
	{!REQUIRESCRIPT(&quot;/soap/ajax/27.0/apex.js&quot;)}
	
	var accId = &apos;{!Account.Id}&apos;;
	var tabName = &apos;Orders&apos;;
	var openSubtab = function openSubtab(result) {
	    //Now that we have the primary tab ID, we can open a new subtab in it
	    var primaryTabId = result.id;
	    sforce.console.openSubtab(primaryTabId ,url, true, tabName, null);
	};

	if (&apos;{!Account.CAN__c}&apos; == &apos;&apos; || &apos;{!Account.CAN__c}&apos; == null) {
	    alert(&apos;Account does not have CAN, cannot display Orders list without CAN.&apos;);
	} else {
	    try {
	        var url = &apos;/apex/AccountOrdersList?CAN={!Account.CAN__c}&apos;;
	        if (sforce.console.isInConsole()) {
	            sforce.console.getEnclosingPrimaryTabId(openSubtab);
	        } else {
	            window.open(url, &apos;_self&apos;);
	        }
        } catch(e) {
            alert(&apos;Error occurred while loading Orders list from Siebel.\n&apos; + e.message);
        }
    }</url>
    </webLinks>
    <webLinks>
        <fullName>YahooMaps</fullName>
        <availability>online</availability>
        <displayType>link</displayType>
        <encodingKey>UTF-8</encodingKey>
        <hasMenubar>true</hasMenubar>
        <hasScrollbars>true</hasScrollbars>
        <hasToolbar>true</hasToolbar>
        <height>600</height>
        <isResizable>true</isResizable>
        <linkType>url</linkType>
        <masterLabel>Yahoo Maps</masterLabel>
        <openType>newWindow</openType>
        <position>none</position>
        <protected>false</protected>
        <showsLocation>true</showsLocation>
        <showsStatus>true</showsStatus>
        <url>http://maps.yahoo.com/py/maps.py?cn={!Account_BillingCountry}&amp;csz={!Account_BillingCity}+{!Account_BillingState}+{!Account_BillingPostalCode}+&amp;addr={!Account_BillingAddress}</url>
    </webLinks>
</CustomObject>
